{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/order/order.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["storageUtils","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","initUser","get","combineReducers","headTitle","state","arguments","length","undefined","action","type","data","errorMsg","_objectSpread","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","_message","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","_ref2","searchName","searchType","_defineProperty","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","reqWeather","city","concat","jsonp","err","console","log","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","setHeadTitle","receiveUser","logout","Item","_Form","Login","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","apply","handleSubmit","event","preventDefault","props","form","validateFields","_asyncToGenerator","_callee","_context","login","_x","_x2","validatePwd","rule","callback","test","_createClass","React","createElement","Redirect","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","_Input","prefix","_Icon","style","color","placeholder","validator","_Button","htmlType","Component","WrapLogin","connect","dispatch","msg","menuList","title","icon","isPublic","children","SubMenu","_Menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","Link","path","location","pathname","reduce","pre","cItem","openKey","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","_yield$reqWeather","getTitle","_Modal","confirm","content","onOk","_assertThisInitialized","clearInterval","_this$state","Line","_React$Component","dv","DataSet","createView","source","month","a","b","c","transform","fields","float","width","height","Chart","scale","range","forceFit","Legend","Axis","label","formatter","Tooltip","crosshairs","Geom","position","size","shape","stroke","lineWidth","Bar","marginLeft","year","sales","tickInterval","RangePicker","_DatePicker","Home","isVisited","handleChange","_Card","extra","headStyle","_Statistic","suffix","fontWeight","valueStyle","fontSize","defaultValue","moment","format","bodyStyle","padding","_Timeline","Option","_Select","AddForm","setForm","_this$props","categorys","UpdateForm","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","_callee2","_context2","_x3","updateCategory","_ref3","_callee3","_context3","_x4","_x5","_this2","marginRight","_Table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","memoryUtils","ProductHome","total","products","price","newStatus","updateStatus","showDetail","procut","history","getProducts","_result$data","list","success","_this$state2","onChange","margin","target","current","PicturesWall","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","imgs","img","index","uid","uploadButton","_Upload","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","Editor","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","_PureComponent","options","initOptions","_assertThisInitialize","isUpdate","pCategoryId","childOptions","isLeaf","option","validatePrice","loadData","selectedOptions","targetOption","_toConsumableArray","submit","_ref4","_callee4","categoryIds","_context4","pw","editor","goBack","createRef","formItemLayout","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","_Cascader","ref","PureComponent","_List","ProductDetail","cName1","cName2","_componentDidMount","_memoryUtils$product","_cName","all","_memoryUtils$product2","dangerouslySetInnerHTML","__html","Product","Switch","Route","component","exact","TreeNode","_Tree","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","User","users","isShow","roleNames","deleteUser","initRoleNames","_onOk","getUsers","addOrUpdateUser","getFieldsValue","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","ReactEcharts","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","replace","_Row","_Col","Order","Footer","_Layout","Sider","Content","Admin","from","textAlign","App","HashRouter","ReactDOM","Provider","document","getElementById","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.522ea54d.chunk.js","sourcesContent":["/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/*\r\n包含n个action的type常量标识名称的模块\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息","/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/*\r\nredux最核心的管理对象store\r\n */\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\n// 向外默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/*\r\n设置头部标题的同步action\r\n */\r\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\r\n\r\n/*\r\n显示错误信息同步action\r\n */\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  // 返回action对象\r\n  return {type: RESET_USER}\r\n}\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n    // 2.1. 如果成功, 分发成功的同步action\r\n    if(result.status===0) {\r\n      const user = result.data\r\n      // 保存local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 2.2. 如果失败, 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n    }\r\n\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport {login} from '../../redux/actions'\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n\r\n        // 调用分发异步action的函数 => 发登陆的异步请求, 有了结果后更新状态\r\n        this.props.login(username, password)\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n\r\n\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport \"./index.less\";\r\nimport { setHeadTitle } from \"../../redux/actions\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n  /*\r\n    判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const { key, isPublic } = item;\r\n\r\n    const menus = this.props.user.role.menus;\r\n    const username = this.props.user.username;\r\n    /*\r\n      1. 如果当前用户是admin\r\n      2. 如果当前item是公开的\r\n      3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if (username === \"admin\" || isPublic || menus.indexOf(key) !== -1) {\r\n      return true;\r\n    } else if (item.children) {\r\n      // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find((child) => menus.indexOf(child.key) !== -1);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map((item) => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if (!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon} />\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        );\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n\r\n    return menuList.reduce((pre, item) => {\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        // 向pre添加<Menu.Item>\r\n        if (!item.children) {\r\n          // 判断item是否是当前对应的item\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            // 更新redux中的headerTitle状态\r\n            this.props.setHeadTitle(item.title);\r\n          }\r\n\r\n          pre.push(\r\n            <Menu.Item key={item.key}>\r\n              <Link\r\n                to={item.key}\r\n                onClick={() => this.props.setHeadTitle(item.title)}\r\n              >\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            (cItem) => path.indexOf(cItem.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n\r\n      return pre;\r\n    }, []);\r\n  };\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList);\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    console.log(\"render()\", path);\r\n    if (path.indexOf(\"/product\") === 0) {\r\n      // 当前请求的是商品或其子路由界面\r\n      path = \"/product\";\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect((state) => ({ user: state.user }), { setHeadTitle })(\r\n  withRouter(LeftNav)\r\n);\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\n/*\r\n  外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>;\r\n}\r\n","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Modal } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport { reqWeather } from \"../../api\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport \"./index.less\";\r\nimport { logout } from \"../../redux/actions\";\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: \"\", // 天气图片url\r\n    weather: \"\", // 天气的文本\r\n  };\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now());\r\n      this.setState({ currentTime });\r\n    }, 1000);\r\n  };\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const { dayPictureUrl, weather } = await reqWeather(\"北京\");\r\n    // 更新状态\r\n    this.setState({ dayPictureUrl, weather });\r\n  };\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    menuList.forEach((item) => {\r\n      if (item.key === path) {\r\n        // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title;\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(\r\n          (cItem) => path.indexOf(cItem.key) === 0\r\n        );\r\n        // 如果有值才说明有匹配的\r\n        if (cItem) {\r\n          // 取出它的title\r\n          title = cItem.title;\r\n        }\r\n      }\r\n    });\r\n    return title;\r\n  };\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        this.props.logout();\r\n      },\r\n    });\r\n  };\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount() {\r\n    // 获取当前的时间\r\n    this.getTime();\r\n    // 获取当前天气\r\n    this.getWeather();\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  render() {\r\n    const { currentTime, dayPictureUrl, weather } = this.state;\r\n    const username = this.props.user.username;\r\n\r\n    // 得到当前需要显示的title\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\" />\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ headTitle: state.headTitle, user: state.user }),\r\n  { logout }\r\n)(withRouter(Header));\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  product: {}, // 指定的商品对象\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  显示商品详情界面\r\n   */\r\n  showDetail = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/detail')\r\n  }\r\n\r\n  /*\r\n  显示修改商品界面\r\n   */\r\n  showUpdate = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  message\r\n} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst {Item} = Form\r\nconst { TextArea } = Input\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  验证价格的自定义验证函数\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log(value, typeof value)\r\n    if (value*1 > 0) {\r\n      callback() // 验证通过\r\n    } else {\r\n      callback('价格必须大于0') // 验证没通过\r\n    }\r\n  }\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 取出携带的state\r\n    const product = memoryUtils.product  // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product._id\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {}\r\n  }\r\n\r\n  /*\r\n  在卸载之前清除保存的数据\r\n  */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n  render() {\r\n\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },  // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {\r\n              getFieldDecorator('name', {\r\n                initialValue: product.name,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品名称'}\r\n                ]\r\n              })(<Input placeholder='请输入商品名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {\r\n              getFieldDecorator('desc', {\r\n                initialValue: product.desc,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品描述'}\r\n                ]\r\n              })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品价格'},\r\n                  {validator: this.validatePrice}\r\n                ]\r\n              })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {\r\n              getFieldDecorator('categoryIds', {\r\n                initialValue: categoryIds,\r\n                rules: [\r\n                  {required: true, message: '必须指定商品分类'},\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options}  /*需要显示的列表数据数组*/\r\n                  loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  List\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = memoryUtils.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n 在卸载之前清除保存的数据\r\n */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = memoryUtils.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{marginRight: 10, fontSize: 20}}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n角色路由\r\n */\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport {reqDeleteUser, reqUsers, reqAddOrUpdateUser} from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({isShow: true})\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({isShow: false})\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status===0) {\r\n      const {users, roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 2}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({isShow: false})\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","import React from 'react'\r\nimport './order.less'\r\n\r\n/*\r\nHome路由组件\r\n */\r\nexport default function Order(props) {\r\n  return (\r\n    <div className=\"order\">\r\n      订单管理模块学生实战开发中...\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\nimport Order from '../order/order'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nclass Admin extends Component {\r\n  render () {\r\n    const user = this.props.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if(!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20, backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              <Route path=\"/order\" component={Order}/>\r\n              <Route component={NotFound}/> {/*上面没有一个匹配, 直接显示*/}\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {}\r\n)(Admin)","import React, {Component} from 'react'\r\nimport {HashRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './redux/store'\r\nimport App from './App'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}