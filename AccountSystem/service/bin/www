const app = require('../app')
const debug = require('debug')('generator:server')
const http = require('http')


let systemConfig = require('../../system.config') // 系统配置

const port = normalizePort(process.env.PORT || systemConfig.serverPort) // 端口标准化为 字符串，数字，布尔
app.set('port', port)

const server = http.createServer(app) 
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)
// console.log(server)
// http://localhost:4000
console.dir("(---------------------------------------------- start http service -----------------------------------------------------)")


function normalizePort (val) {
    var port = parseInt(val, 10)

    if (isNaN(port)) return val
        // isNaN('asd') true
        // isNaN(123) false
        // isNaN(NaN) true
        // isNaN(true) false

    if (port >= 0) return port

    return false
}

function onError (error) {
    if (error.syscall !== 'listen') {
        throw error
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges')
            process.exit(1)
        case 'EADDRINUSE':
            console.error(bind + ' is already in use')
            process.exit(1)
        default:
            throw error
    }
}

function onListening () { 
    var addr = server.address()
    // console.log(addr) // { address: '::', family: 'IPv6', port: 4000 }
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
    // console.log(bind)
    debug('Listening on ' + bind)
}
