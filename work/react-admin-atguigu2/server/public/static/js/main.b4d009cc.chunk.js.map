{"version":3,"sources":["api/ajax.js","api/index.js","utils/storageUtils.js","utils/memoryUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/left-nav.jsx","utils/dateUtils.js","components/link-button/linkButton.jsx","components/header/header.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/jurisdiction-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","val","catch","err","message","error","reqLogin","username","password","reqCategorys","parentId","reqCategoryInfo","categoryId","reqAddCategorys","categoryName","reqUpdateCategory","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqUpdateStatus","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","reqUpdateRole","role","reqUsers","reqDeleteUser","reqAddOrUpdateUser","user","reqWeather","city","jsonp","results","weather_data","dayPictureUrl","weather","saveUser","store","set","getUser","delUser","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","a","async","storageUtils","memoryUtils","console","log","history","replace","msg","validatorPwd","rule","value","callback","length","test","getFieldDecorator","this","className","onSubmit","Item","rules","required","whitespace","min","max","prefix","placeholder","validator","htmlType","Component","WrapLogin","create","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","getMenuNOdes_map","map","item","to","getMenuNOdes","path","location","pathname","reduce","pre","hasAuth","find","cItem","indexOf","openKey","push","menus","child","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","Header","state","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","logOut","confirm","onOk","localStorage","clear","clearInterval","onClick","src","alt","Home","Option","AddForm","setForm","categorys","initialValue","c","UpdateForm","propType","PropTypes","string","isRequired","func","Category","loading","subCategorys","parentName","showStatus","showAdd","showUpdate","category","handleCancel","resetFields","updateCategory","getCategorys","addCategory","initColumns","columns","dataIndex","width","render","showSubCategorys","showCategorys","result","style","marginRight","extra","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","ProductHome","total","products","price","updateStatus","getProducts","list","success","onChange","margin","event","target","bordered","current","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","fileList","handlePreview","preview","originFileObj","handleChange","response","getImgs","imgs","img","index","uid","uploadButton","action","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDeatil","draftToHtml","convertToRaw","getCurrentContent","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","height","paddingLeft","TextArea","ProductAddUpdate","options","validatePrice","initOptions","label","isLeaf","isUpdate","pCategoryId","childOptions","option","loadData","selectedOptions","targetOption","submit","desc","categoryIds","pw","editor","goBack","React","createRef","fontSize","labelCol","span","wrapperCol","autoSize","minRows","maxRows","addonAfter","ref","ProductDetail","cName1","cName2","all","dangerouslySetInnerHTML","__html","Product","component","exact","TreeNode","JurisdictionForm","checkedKeys","getMenus","getTreeNodes","onCheck","nextProps","treeNodes","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowJurisdiction","addRole","roleName","updateRole","authInfo","userStronge","jurisdiction","auth_time","auth_name","role_id","removeUser","initColumn","create_time","getRoles","onRow","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","User","users","isShow","roleNames","deleteUser","initRoleNames","addOrUpdateUser","getUsers","id","Bar","sales","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","color","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","Footer","Sider","Content","Admin","minHeight","from","textAlign","App","ReactDOM","document","getElementById"],"mappings":"4XAKe,SAASA,IAAgC,IAA3BC,EAA0B,uDAAtB,GAAGC,EAAmB,uDAAd,GAAGC,EAAW,uDAAN,MAC7C,OAAO,IAAIC,SAAQ,SAACC,EAAQC,IAEZ,QAATH,EACWI,IAAMC,IAAIP,EAAI,CACpBQ,OAAOP,IAGDK,IAAMG,KAAKT,EAAIC,IAErBS,MAAK,SAAAC,GACTP,EAAQO,EAAIV,SACbW,OAAM,SAAAC,GAELC,EAAA,EAAQC,MAAM,kCAASF,EAAIC,eCfvC,IAEaE,EAAW,SAACC,EAASC,GAAV,OAAsBnB,EAAU,SAAS,CAACkB,WAAUC,YAAU,SAGzEC,EAAe,SAACC,GAAD,OAAarB,EAAY,wBAAwB,CAACqB,cAEjEC,EAAkB,SAACC,GAAD,OAAcvB,EAAU,wBAAwB,CAACuB,gBAGnEC,EAAkB,SAACH,EAASI,GAAV,OAA0BzB,EAAY,uBAAuB,CAACyB,eAAaJ,YAAU,SAGvGK,EAAoB,SAACH,EAAWE,GAAZ,OAA4BzB,EAAY,0BAA0B,CAACuB,aAAWE,gBAAc,SAGhHE,EAAc,SAACC,EAAQC,GAAT,OAAoB7B,EAAU,uBAAuB,CAAC4B,UAAQC,cAI5EC,EAAoB,SAAC,GAAD,IAAEF,EAAF,EAAEA,QAAQC,EAAV,EAAUA,SAASE,EAAnB,EAAmBA,WAAWC,EAA9B,EAA8BA,WAA9B,OAA4ChC,EAAU,yBAAN,aAC7E4B,UACAC,YACCG,EAAYD,KAIJE,EAAkB,SAACC,EAAUC,GAAX,OAAsBnC,EAAU,+BAA+B,CAACkC,YAAUC,UAAQ,SAGpGC,EAAe,SAACC,GAAD,OAAUrC,EAAU,qBAAqB,CAACqC,QAAM,SAG/DC,EAAwB,SAACC,GAAD,OAAYvC,EAAU,oBAAoBuC,EAAQC,IAAI,SAAS,OAAOD,EAAQ,SAGtGE,EAAW,kBAAIzC,EAAU,sBAGzB0C,EAAa,SAACL,GAAD,OAAQrC,EAAU,mBAAmB,CAACqC,QAAM,SAGzDM,EAAgB,SAACC,GAAD,OAAQ5C,EAAU,sBAAsB4C,EAAK,SAG7DC,EAAW,SAACL,GAAD,OAAOxC,EAAU,oBAAoB,CAACwC,SAGjDM,EAAgB,SAACN,GAAD,OAAOxC,EAAU,sBAAsB,CAACwC,OAAK,SAG7DO,EAAqB,SAACC,GAAD,OAAShD,EAAU,iBAAiBgD,EAAKR,IAAI,SAAS,OAAOQ,EAAK,SAOvFC,EAAa,SAACC,GACvB,OAAO,IAAI9C,SAAQ,SAACC,EAAQC,GACxB,IAAML,EAAG,mEAA+DiD,EAA/D,4CACTC,IAAMlD,EAAI,IAAG,SAACa,EAAIZ,GAEd,GAAIY,GAAuB,YAAhBZ,EAAKiC,OAIZpB,EAAA,EAAQC,MAAM,yDAJmB,CAAC,IAAD,EACDd,EAAKkD,QAAQ,GAAGC,aAAa,GAAtDC,EAD0B,EAC1BA,cAAcC,EADY,EACZA,QACrBlD,EAAQ,CAACiD,gBAAcC,oB,kBChEzB,GAEVC,SAFU,SAEDR,GAELS,IAAMC,IARG,WAQWV,IAGxBW,QAPU,WASN,OAAOF,IAAMjD,IAbJ,aAgBboD,QAZU,WAaNH,IAAMI,OAjBG,cCEH,G,cAAA,CACVb,KAAK,KCQHc,E,2MAEFC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAAOtD,EAAKuD,GAAZ,mBAAAC,EAAAC,OAAA,mDACtBzD,EADsB,uBAGhBI,EAAqBmD,EAArBnD,SAASC,EAAYkD,EAAZlD,SAHO,WAAAmD,EAAA,MAIJrD,EAASC,EAASC,IAJd,OAMJ,KAFbjB,EAJiB,QAMfiC,QACJqC,EAAahB,SAAStD,EAAKA,MAC3BuE,EAAYzB,KAAK9C,EAAKA,KACtBwE,QAAQC,IAAIF,EAAYzB,MACxB,EAAKkB,MAAMU,QAAQC,QAAQ,gBAE3B9D,EAAA,EAAQC,MAAMd,EAAK4E,KAZA,sBAevBJ,QAAQC,IAAI,8BAfW,yC,EAuBnCI,aAAe,SAACC,EAAKC,EAAMC,GACnBD,EAEKA,EAAME,OAAS,EACpBD,EAAS,2DACJD,EAAME,OAAS,GACpBD,EAAS,4DACH,iBAAiBE,KAAKH,GAG5BC,IAFAA,EAAS,oGANTA,EAAS,yC,wEAab,IACOG,EADMC,KAAKpB,MAAMC,KACjBkB,kBAEP,OACI,yBAAKE,UAAU,SACX,4BAAQA,UAAU,gBACd,4FAEJ,6BAASA,UAAU,iBACf,wDACA,uBAAMC,SAAUF,KAAKvB,aAAcwB,UAAU,cACzC,sBAAME,KAAN,KACKJ,EAAkB,WAAY,CAE3BK,MAAO,CACH,CAAEC,UAAU,EAAKC,YAAW,EAAM7E,QAAS,8CAC3C,CAAE8E,IAAK,EAAG9E,QAAS,yCACnB,CAAE+E,IAAK,GAAI/E,QAAS,4CAL3BsE,CASG,uBACAU,OAAQ,uBAAM5F,KAAK,SACnB6F,YAAY,yBAKpB,sBAAMP,KAAN,KAEQJ,EAAkB,WAAW,CACzBK,MAAM,CACF,CACIO,UAAUX,KAAKP,gBAH3BM,CAOI,uBACAU,OAAQ,uBAAM5F,KAAK,SACnBA,KAAK,WACL6F,YAAY,mBAKxB,sBAAMP,KAAN,KACI,uBAAQtF,KAAK,UAAU+F,SAAS,SAASX,UAAU,qBAAnD,kB,GAxFRY,aA8HLC,EADG,IAAKC,QAAL,CAAcvC,G,oCC5EjBwC,EAzDE,CACb,CACIC,MAAM,eACNC,IAAI,cACJC,KAAK,OACLC,UAAS,GAEb,CACIH,MAAM,eACNC,IAAI,kBACJC,KAAK,WACLE,SAAS,CACL,CACIJ,MAAM,2BACNC,IAAI,kBACJC,KAAK,QAET,CACIF,MAAM,2BACNC,IAAI,iBACJC,KAAK,UAIjB,CACIF,MAAM,2BACNC,IAAI,cACJC,KAAK,QAET,CACIF,MAAM,2BACNC,IAAI,cACJC,KAAK,UAET,CACIF,MAAM,2BACNC,IAAI,gBACJC,KAAK,aACLE,SAAS,CACL,CACIJ,MAAM,qBACNC,IAAI,oBACJC,KAAK,aAET,CACIF,MAAM,qBACNC,IAAI,qBACJC,KAAK,cAET,CACIF,MAAM,eACNC,IAAI,oBACJC,KAAK,gBCjDfG,G,OAAU,IAAKA,SAIfC,G,2MAMFC,iBAAmB,SAACR,GAChB,OAAOA,EAASS,KAAI,SAAAC,GAChB,OAAIA,EAAKL,SAWD,kBAACC,EAAD,CACIJ,IAAKQ,EAAKR,IACVD,MACA,8BACI,uBAAMpG,KAAM6G,EAAKP,OACrB,8BAAOO,EAAKT,SAGP,EAAKO,iBAAiBE,EAAKL,WAjBpC,sBAAMlB,KAAN,CAAWe,IAAKQ,EAAKR,KACjB,kBAAC,IAAD,CAAMS,GAAID,EAAKR,KACX,uBAAMrG,KAAM6G,EAAKP,OACjB,oD,EAwBxBS,aAAe,SAACZ,GACZ,IAAMa,EAAO,EAAKjD,MAAMkD,SAASC,SACjC,OAAOf,EAASgB,QAAO,SAACC,EAAIP,GAGpB,EAAKQ,QAAQR,KAETA,EAAKL,UAUSK,EAAKL,SAASc,MAAK,SAAAC,GAAK,OAA8B,IAA3BP,EAAKQ,QAAQD,EAAMlB,UAExD,EAAKoB,QAAUZ,EAAKR,KAExBe,EAAIM,KACA,kBAACjB,EAAD,CACIJ,IAAKQ,EAAKR,IACVD,MACA,8BACI,uBAAMpG,KAAM6G,EAAKP,OACrB,8BAAOO,EAAKT,SAGP,EAAKW,aAAaF,EAAKL,aAtBpCY,EAAIM,KACA,sBAAMpC,KAAN,CAAWe,IAAKQ,EAAKR,KACjB,kBAAC,IAAD,CAAMS,GAAID,EAAKR,KACX,uBAAMrG,KAAM6G,EAAKP,OACjB,8BAAOO,EAAKT,WAyBhC,OAAOgB,IACT,K,EAINC,QAAU,SAACR,GAAQ,IACRR,EAAgBQ,EAAhBR,IAAIE,EAAYM,EAAZN,SACLoB,EAAQrD,EAAYzB,KAAKJ,KAAKkF,MASpC,QAAe,UARErD,EAAYzB,KAAK9B,WAQRwF,IAAkC,IAAtBoB,EAAMH,QAAQnB,OAE3CQ,EAAKL,YACDK,EAAKL,SAASc,MAAK,SAAAM,GAAK,OAAkC,IAA9BD,EAAMH,QAAQI,EAAMvB,S,oFAU7DlB,KAAK0C,UAAY1C,KAAK4B,aAAaZ,K,+BAGnC,IAAIa,EAAO7B,KAAKpB,MAAMkD,SAASC,SACzBO,EAAUtC,KAAKsC,QAIrB,OAHsC,IAAnCT,EAAKQ,QAAQ,oBACZR,EAAO,kBAGP,yBAAK5B,UAAU,YACX,kBAAC,IAAD,CAAM0B,GAAG,IAAI1B,UAAU,mBACnB,yDAEJ,uBACI0C,KAAK,SACLC,MAAM,OACNC,aAAc,CAAChB,GACfiB,gBAAiB,CAACR,IAErBtC,KAAK0C,gB,GA1HA7B,aAsIPkC,eAAWxB,I,kBCjJnB,SAASyB,GAAYC,GACxB,IAAIA,EAAM,MAAO,GACjB,IAAIC,EAAO,IAAIC,KAAKF,GAChB,OAAOC,EAAKE,cAAgB,IAAMF,EAAKG,WAAY,IAAIH,EAAKI,UAC3D,IAAIJ,EAAKK,WAAW,IAAIL,EAAKM,aAAa,IAAIN,EAAKO,a,WCO7CC,G,iLAJP,OAAO,4CAAY1D,KAAKpB,MAAjB,CAAwBqB,UAAU,qB,GAFxBY,aCQnB8C,I,kNACFC,MAAQ,CACJC,YAAYb,GAAYG,KAAKW,OAC7B9F,cAAc,GACdC,QAAQ,I,EAEZ8F,QAAU,WACN,EAAKC,WAAaC,aAAY,WAC1B,IAAMJ,EAAcb,GAAYG,KAAKW,OACrC,EAAKI,SAAS,CAACL,kBAChB,M,EAEPM,WAAa,8BAAAnF,EAAAC,OAAA,kEAAAD,EAAA,MAC6BrB,EAAW,iBADxC,gBACFK,EADE,EACFA,cAAcC,EADZ,EACYA,QACrB,EAAKiG,SAAS,CAAClG,gBAAcC,YAFpB,sC,EAIbmG,SAAW,WAEP,IACInD,EADEY,EAAO,EAAKjD,MAAMkD,SAASC,SAYjC,OAVAf,EAASqD,SAAQ,SAAA3C,GACb,GAAGA,EAAKR,MAAQW,EACZZ,EAAQS,EAAKT,WACX,GAAGS,EAAKL,SAAS,CACnB,IAAMe,EAAQV,EAAKL,SAASc,MAAK,SAAAC,GAAK,OAAgC,IAA5BP,EAAKQ,QAAQD,EAAMlB,QAC1DkB,IACCnB,EAAQmB,EAAMnB,WAInBA,G,EAEXqD,OAAS,WACL,KAAMC,QAAQ,CACVtD,MAAO,4BACPuD,KAAK,WAEHrF,EAAYzB,KAAO,GACnB+G,aAAaC,QACb,EAAK9F,MAAMU,QAAQC,QAAQ,c,mFASjCS,KAAK+D,UACL/D,KAAKmE,e,6CAMLQ,cAAc3E,KAAKgE,c,+BAEb,IAAD,EACuChE,KAAK4D,MAA1CC,EADF,EACEA,YAAY7F,EADd,EACcA,cAAcC,EAD5B,EAC4BA,QAC3BrC,EAAWuD,EAAYzB,KAAK9B,SAC5BqF,EAAQjB,KAAKoE,WACnB,OACI,yBAAKnE,UAAU,UACX,yBAAKA,UAAU,cACX,8CAAUrE,GACV,kBAAC,GAAD,CAAYgJ,QAAS5E,KAAKsE,QAA1B,iBAEJ,yBAAKrE,UAAU,iBAEX,yBAAKA,UAAU,sBAAsBgB,GACrC,yBAAKhB,UAAU,uBACX,8BAAO4D,GACP,yBAAKgB,IAAK7G,EAAe8G,IAAI,WAC7B,8BAAO7G,U,GAzEV4C,cAiFNkC,eAAWY,IC/EXoB,I,wLARP,OACI,yBAAK9E,UAAU,QAAf,gF,GAHOY,c,uDCDbV,GAAO,IAAKA,KACZ6E,GAAS,KAAOA,OAEhBC,G,6LAOEjF,KAAKpB,MAAMsG,QAAQlF,KAAKpB,MAAMC,Q,+BAExB,IAAD,EACwBmB,KAAKpB,MAA3BuG,EADF,EACEA,UAAUpJ,EADZ,EACYA,SACVgE,EAAqBC,KAAKpB,MAAMC,KAAhCkB,kBACP,OACI,2BACI,kBAACI,GAAD,KAEQJ,EAAkB,WAAW,CACzBqF,aAAarJ,GADjBgE,CAGI,4BACI,kBAACiF,GAAD,CAAQrF,MAAM,KAAd,4BACCwF,EAAU1D,KAAI,SAAA4D,GAAC,OAAG,kBAACL,GAAD,CAAQrF,MAAO0F,EAAEnI,KAAMmI,EAAEtI,YAM5D,kBAACoD,GAAD,KAEQJ,EAAkB,eAAe,CAC7BqF,aAAa,GACbhF,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,uBAAOW,YAAY,sD,GAlCxBG,aA0CP,OAAKE,QAAL,CAAckE,I,mBC9CvB9E,GAAO,IAAKA,KAKZmF,G,6LAQEtF,KAAKpB,MAAMsG,QAAQlF,KAAKpB,MAAMC,Q,+BAExB,IACC1C,EAAgB6D,KAAKpB,MAArBzC,aACA4D,EAAqBC,KAAKpB,MAAMC,KAAhCkB,kBACP,OACI,2BACI,kBAAC,GAAD,KAEQA,EAAkB,eAAe,CAC7BqF,aAAcjJ,EACdiE,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,uBAAOW,YAAY,sD,GAtBrBG,aAAnByE,GACKC,SAAW,CACdpJ,aAAaqJ,KAAUC,OAAOC,WAC9BR,QAAQM,KAAUG,KAAKD,YA2BhB,WAAK3E,QAAL,CAAcuE,ICyLdM,G,2MAlNXhC,MAAQ,CACNiC,SAAQ,EACRV,UAAU,GACVW,aAAa,GACb/J,SAAS,IACTgK,WAAW,GACXC,WAAW,G,EAIbC,QAAQ,WACN,EAAK/B,SAAS,CACZ8B,WAAW,K,EAKfE,WAAa,SAACC,GACZ,EAAKA,SAAWA,EAChB,EAAKjC,SAAS,CACZ8B,WAAW,K,EAKfI,aAAe,WAEb,EAAKvH,KAAKwH,cACV,EAAKnC,SAAS,CACZ8B,WAAW,K,EAKfM,eAAiB,WAGf,EAAKzH,KAAKC,gBAAe,SAAOtD,EAAIuD,GAAX,iBAAAC,EAAAC,OAAA,mDACnBzD,EADmB,uBAGrB,EAAK0I,SAAS,CACZ8B,WAAW,IAEP/J,EAAa,EAAKkK,SAASjJ,IAC1Bf,EAAgB4C,EAAhB5C,aAEP,EAAK0C,KAAKwH,cATW,WAAArH,EAAA,MAUA5C,EAAkBH,EAAWE,IAV7B,OAWD,IAXC,OAWXU,QACR,EAAK0J,eAZc,yC,EAoB3BC,YAAc,oBAAAxH,EAAAC,OAAA,gDACZ,EAAKJ,KAAKC,gBAAe,SAAOtD,EAAIuD,GAAX,iBAAAC,EAAAC,OAAA,mDACnBzD,EADmB,uBAGrB,EAAK0I,SAAS,CACZ8B,WAAW,IAENjK,EAAyBgD,EAAzBhD,SAASI,EAAgB4C,EAAhB5C,aAEhB,EAAK0C,KAAKwH,cARW,WAAArH,EAAA,MASA9C,EAAgBH,EAASI,IATzB,OAUD,GAVC,OAUXU,SACLd,IAAa,EAAK6H,MAAM7H,SACzB,EAAKwK,eAEL,EAAKA,aAAa,MAdD,wCADb,sC,EAwBdE,YAAc,WACZ,EAAKC,QAAU,CACb,CACEzF,MAAO,iCACP0F,UAAW,QAEb,CACE1F,MAAO,eACP2F,MAAM,IACNC,OAAO,SAACV,GAAD,OACL,8BACI,kBAAC,GAAD,CAAYvB,QAAS,kBAAK,EAAKsB,WAAWC,KAA1C,4BAEwB,MAAvB,EAAKvC,MAAM7H,SAAgB,kBAAC,GAAD,CAAY6I,QAAS,kBAAK,EAAKkC,iBAAiBX,KAAhD,kCAA8E,U,EAStHW,iBAAmB,SAACX,GAClB,EAAKjC,SAAS,CACZnI,SAAUoK,EAASjJ,IACnB6I,WAAYI,EAASpJ,OACrB,WACA,EAAKwJ,mB,EAKTQ,cAAgB,WACd,EAAK7C,SAAS,CACZnI,SAAS,IACTgK,WAAW,GACXD,aAAa,M,EASjBS,aAAe,SAAOxK,GAAP,iBAAAiD,EAAAC,OAAA,uDAEb,EAAKiF,SAAS,CAAC2B,SAAQ,IACvB9J,EAAWA,GAAY,EAAK6H,MAAM7H,SAHrB,WAAAiD,EAAA,MAKQlD,EAAaC,IALrB,OAKPiL,EALO,OAOb,EAAK9C,SAAS,CAAC2B,SAAQ,IAEF,IAAlBmB,EAAOnK,QACFsI,EAAY6B,EAAOpM,KACT,MAAbmB,EACD,EAAKmI,SAAS,CACZiB,cAIF,EAAKjB,SAAS,CACZ4B,aAAcX,KAKlB1J,EAAA,EAAQC,MAAM,oDAvBH,sC,oFA6BbsE,KAAKyG,gB,0CAILzG,KAAKuG,iB,+BAGG,IAAD,SAC+DvG,KAAK4D,MAAtEuB,EADE,EACFA,UAAUU,EADR,EACQA,QAAQC,EADhB,EACgBA,aAAa/J,EAD7B,EAC6BA,SAASgK,EADtC,EACsCA,WAAWC,EADjD,EACiDA,WAClDG,EAAWnG,KAAKmG,UAAY,GAC5BlF,EAAoB,MAAZlF,EAAgB,uCAC5B,8BACE,kBAAC,GAAD,CAAY6I,QAAS5E,KAAK+G,eAA1B,wCACA,uBAAMlM,KAAK,cAAcoM,MAAO,CAACC,YAAY,KAC7C,8BAAOnB,IAGLoB,EACF,uBAAQtM,KAAK,UAAU+J,QAAS5E,KAAKiG,SACjC,uBAAMpL,KAAK,SADf,gBAKJ,OACI,wBAAMoG,MAAOA,EAAOkG,MAAOA,GACvB,wBACEC,OAAO,MACPvB,QAASA,EACTwB,WAAuB,MAAXtL,EAAeoJ,EAAUW,EACrCY,QAAS1G,KAAK0G,QACdY,WAAY,CAACC,gBAAgB,EAAEC,iBAAgB,KAEjD,wBACEvG,MAAM,2BACNwG,QAAwB,IAAfzB,EACTxB,KAAMxE,KAAKwG,YACXkB,SAAU1H,KAAKoG,cAEf,kBAAC,GAAD,CAASjB,UAAWA,EAAWpJ,SAAUA,EAAUmJ,QAAW,SAACrG,GAAQ,EAAKA,KAAOA,MAGrF,wBACEoC,MAAM,2BACNwG,QAAwB,IAAfzB,EACTxB,KAAMxE,KAAKsG,eACXoB,SAAU1H,KAAKoG,cAEf,kBAAC,GAAD,CAAYjK,aAAcgK,EAASpJ,KAAMmI,QAAW,SAACrG,GAAQ,EAAKA,KAAOA,W,GA3MlEgC,aCTV8G,GAAY,EACZC,GAAe,gCCCtB5C,GAAS,KAAOA,OA2IP6C,G,2MAxIXjE,MAAQ,CACJkE,MAAM,EACNC,SAAS,GACTlC,SAAQ,EACRpJ,WAAW,GACXC,WAAW,e,EAGf+J,YAAc,WACV,EAAKC,QAAU,CACX,CACEzF,MAAO,2BACP0F,UAAW,QAEb,CACI1F,MAAO,2BACP0F,UAAW,QAEf,CACI1F,MAAO,eACP0F,UAAW,QACXE,OAAO,SAACmB,GAAD,MAAS,SAAIA,IAExB,CACI/G,MAAO,eAEP2F,MAAM,IACNC,OAAO,SAAC5J,GAAW,IACRJ,EAAcI,EAAdJ,OAAOK,EAAOD,EAAPC,IACd,OACI,8BACI,uBAAQrC,KAAK,UAAU+J,QAAS,kBAAK,EAAKqD,aAAa/K,EAAa,IAATL,EAAW,EAAE,KAAgB,IAAXA,EAAe,eAAO,gBACnG,8BAAkB,IAAXA,EAAe,eAAO,yBAK7C,CACEoE,MAAO,eACP2F,MAAM,IACNC,OAAO,SAAC5J,GAAD,OACL,8BACI,kBAAC,GAAD,CAAY2H,QAAS,kBAAK,EAAKhG,MAAMU,QAAQiD,KAAK,wBAAwB,CAACtF,cAA3E,gBACA,kBAAC,GAAD,CAAY2H,QAAS,kBAAK,EAAKhG,MAAMU,QAAQiD,KAAK,0BAA0BtF,KAA5E,qB,EAQhBiL,YAAc,SAAO5L,GAAP,2BAAA0C,EAAAC,OAAA,mDACV,EAAK3C,QAAUA,EACf,EAAK4H,SAAS,CAAC2B,SAAQ,IAFb,EAGsB,EAAKjC,MAA9BnH,EAHG,EAGHA,WAAWC,EAHR,EAGQA,YAGfD,EANO,kCAAAuC,EAAA,MAQSxC,EAAkB,CAACF,UAAQC,SAASoL,GAAUlL,aAAWC,gBARlE,OAQNsK,EARM,iDAAAhI,EAAA,MAUS3C,EAAYC,EAAQqL,KAV7B,QAUNX,EAVM,eAYV,EAAK9C,SAAS,CAAC2B,SAAQ,IACF,IAAlBmB,EAAOnK,SAAa,EAEEmK,EAAOpM,KAArBkN,EAFY,EAEZA,MAAMK,EAFM,EAENA,KACb,EAAKjE,SAAS,CACV4D,QACAC,SAASI,KAlBP,uC,EAwBdF,aAAe,SAAOrL,EAAUC,GAAjB,SAAAmC,EAAAC,OAAA,kEAAAD,EAAA,MACUrC,EAAgBC,EAAUC,IADpC,OAEU,IAFV,OAEDA,SACNpB,EAAA,EAAQ2M,QAAQ,wCAChB,EAAKF,YAAY,EAAK5L,UAJf,sC,oFAQX0D,KAAKyG,gB,0CAILzG,KAAKkI,YAAY,K,+BAGX,IAAD,SAEkDlI,KAAK4D,MAArDmE,EAFF,EAEEA,SAASD,EAFX,EAEWA,MAAMjC,EAFjB,EAEiBA,QAAQpJ,EAFzB,EAEyBA,WAAWC,EAFpC,EAEoCA,WACnCuE,EACF,8BACI,wBAAQtB,MAAOjD,EAAYuK,MAAO,CAACL,MAAM,KAAMyB,SAAU,SAAA1I,GAAK,OAAE,EAAKuE,SAAS,CAACxH,WAAWiD,MACtF,kBAAC,GAAD,CAAQA,MAAM,eAAd,kCACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,mCAEJ,uBACIe,YAAY,qBACZuG,MAAO,CAACL,MAAM,IAAI0B,OAAO,UACzB3I,MAAOlD,EACP4L,SAAU,SAAAE,GAAK,OAAG,EAAKrE,SAAS,CAACzH,WAAW8L,EAAMC,OAAO7I,WAE7D,uBAAQ9E,KAAK,UAAU+J,QAAS,kBAAK,EAAKsD,YAAY,KAAtD,iBAGFf,EACF,uBAAQtM,KAAK,UAAU+J,QAAS,kBAAI,EAAKhG,MAAMU,QAAQiD,KAAK,6BACxD,uBAAM1H,KAAK,SADf,4BAMJ,OACI,wBAAMoG,MAAOA,EAAOkG,MAAOA,GACvB,wBACIsB,UAAQ,EACRrB,OAAO,MACPvB,QAASA,EACTwB,WAAYU,EACZrB,QAAS1G,KAAK0G,QACdY,WAAY,CACRoB,QAAQ1I,KAAK1D,QACbwL,QACAP,gBAAgBI,GAChBH,iBAAgB,EAChBa,SAASrI,KAAKkI,oB,GAjIZrH,a,2DCD1B,SAAS8H,GAAUC,GACjB,OAAO,IAAI9N,SAAQ,SAACC,EAASC,GAC3B,IAAM6N,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAMjO,EAAQ8N,EAAO7B,SACrC6B,EAAOI,QAAU,SAAAvN,GAAK,OAAIV,EAAOU,O,IAiHtBwN,G,YAjGb,WAAYtK,GAAO,IAAD,uBAChB,4CAAMA,KAPRgF,MAAQ,CACNuF,gBAAgB,EAChBC,aAAc,GACdC,SAAU,IAGM,EAsBlBjD,aAAe,kBAAM,EAAKlC,SAAS,CAAEiF,gBAAgB,KAtBnC,EAwBlBG,cAAgB,SAAMV,GAAN,SAAA5J,EAAAC,OAAA,mDAET2J,EAAKjO,KAAQiO,EAAKW,QAFT,kCAAAvK,EAAA,MAGS2J,GAAUC,EAAKY,gBAHxB,OAGZZ,EAAKW,QAHO,cAMd,EAAKrF,SAAS,CACZkF,aAAcR,EAAKjO,KAAOiO,EAAKW,QAC/BJ,gBAAgB,IARJ,sCAxBE,EAwClBM,aAAe,qCAAAzK,EAAAC,OAAA,mDAAS2J,EAAT,EAASA,KAAKS,EAAd,EAAcA,SACR,SAAhBT,EAAK/L,OADK,gBAGY,KADfmK,EAAS4B,EAAKc,UACV7M,QACRpB,EAAA,EAAQ2M,QAAQ,wCADK,EAEFpB,EAAOpM,KAAnBmC,EAFc,EAEdA,KAAKpC,EAFS,EAETA,KACZiO,EAAOS,EAASA,EAASxJ,OAAO,IAC3B9C,KAAOA,EACZ6L,EAAKjO,IAAMA,GAEXc,EAAA,EAAQ2M,QAAQ,wCAVT,0BAYY,YAAhBQ,EAAK/L,OAZD,mCAAAmC,EAAA,MAaUlC,EAAa8L,EAAK7L,OAb5B,OAcU,IAdV,OAcAF,OACTpB,EAAA,EAAQ2M,QAAQ,wCAEhB3M,EAAA,EAAQC,MAAM,wCAjBL,QAoBb,EAAKwI,SAAS,CAAEmF,aAChBjK,QAAQC,IAAIgK,GArBC,uCAxCG,EAiElBM,QAAU,WACR,OAAO,EAAK/F,MAAMyF,SAAS5H,KAAI,SAAAmH,GAAI,OAAIA,EAAK7L,SAhE5C,IAAIsM,EAAW,GAERO,EAAQ,EAAKhL,MAAbgL,KAJS,OAKZA,GAAQA,EAAK/J,OAAO,IACtBwJ,EAAWO,EAAKnI,KAAI,SAACoI,EAAIC,GAAL,MAAc,CAChCC,KAAKD,EACL/M,KAAK8M,EACLhN,OAAO,OACPlC,IAAIiN,GAAaiC,OAIrB,EAAKjG,MAAQ,CACXuF,gBAAe,EACfC,aAAa,GACbC,YAjBc,E,sEAqER,IAAD,EAC4CrJ,KAAK4D,MAAhDuF,EADD,EACCA,eAAgBC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,SAChCW,EACJ,6BACE,uBAAMnP,KAAK,SACX,yBAAKoF,UAAU,mBAAf,WAGJ,OACE,6BACE,wBACEgK,OAAO,qBACPC,OAAO,UACPnN,KAAK,QACLoN,SAAS,eACTd,SAAUA,EACVe,UAAWpK,KAAKsJ,cAChBjB,SAAUrI,KAAKyJ,cAEdJ,EAASxJ,QAAU,EAAI,KAAOmK,GAEjC,wBAAOvC,QAAS0B,EAAgBkB,OAAQ,KAAM3C,SAAU1H,KAAKoG,cAC3D,yBAAKtB,IAAI,UAAUmC,MAAO,CAAEL,MAAO,QAAU/B,IAAKuE,U,GAvGjCvI,a,8DCwCZyJ,I,mBAtCX,WAAY1L,GAAQ,IAAD,uBACf,4CAAMA,KALVgF,MAAQ,CACJ2G,YAAaC,eAAYC,eAGV,EAgBnBC,oBAAsB,SAACH,GACnB,EAAKrG,SAAS,CACVqG,iBAlBW,EAsBnBI,UAAY,WAER,OAAOC,KAAYC,wBAAa,EAAKjH,MAAM2G,YAAYO,uBAtBvD,IAAMC,EAAO,EAAKnM,MAAMoM,OACxB,GAAID,EAAM,CACN,IAAME,EAAeC,KAAYH,GACjC,GAAIE,EAAc,CACd,IAAME,EAAeC,gBAAaC,qBAAqBJ,EAAaK,eAC9Df,EAAcC,eAAYe,kBAAkBJ,GAClD,EAAKvH,MAAQ,CACb2G,gBATO,S,sEA0BT,IACFA,EAAgBvK,KAAK4D,MAArB2G,YACJ,OACI,kBAAC,UAAD,CACIA,YAAaA,EACbiB,YAAa,CAACC,OAAO,kBAAkBC,OAAO,IAAIC,YAAY,IAC9DjB,oBAAqB1K,KAAK0K,0B,GAzCb7J,cCFtBV,G,IAAAA,KACAyL,G,IAAAA,SAMDC,G,YAKF,WAAYjN,GAAO,IAAD,8BACd,4CAAMA,KALVgF,MAAQ,CACJkI,QAAQ,IAGM,EAQlBC,cAAgB,SAACrM,EAAKC,EAAMC,GACf,EAAND,EAAU,EACTC,IAEAA,EAAS,0CAZC,EAgBlBoM,YAAc,SAAO7G,GAAP,2BAAAnG,EAAAC,OAAA,mDAEJ6M,EAAU3G,EAAU1D,KAAI,SAAA4D,GAAC,MAAI,CAC/B1F,MAAO0F,EAAEnI,IACT+O,MAAO5G,EAAEtI,KACTmP,QAAQ,MALF,kBAQHC,EARG,EAQHA,SAASlP,EARN,EAQMA,QACTmP,EAA0BnP,EAA1BmP,YAA0BnP,EAAdhB,YAChBkQ,GAA4B,MAAhBC,EAVL,mCAAApN,EAAA,MAYoB,EAAKuH,aAAa6F,IAZtC,OAYDtG,EAZC,OAcDuG,EAAevG,EAAarE,KAAI,SAAA4D,GAAC,MAAG,CACrC1F,MAAO0F,EAAEnI,IACT+O,MAAO5G,EAAEtI,KACTmP,QAAQ,MAISJ,EAAQ3J,MAAK,SAAAmK,GAAM,OAAEA,EAAO3M,QAAUyM,KAG9C/K,SAAWgL,EAxBlB,QA0BV,EAAKnI,SAAS,CACV4H,YA3BM,uCAhBI,EAgDlBvF,aAAe,SAAOxK,GAAP,iBAAAiD,EAAAC,OAAA,kEAAAD,EAAA,MACUlD,EAAaC,IADvB,UAEU,KADfiL,EADK,QAEDnK,OAFC,oBAGDsI,EAAY6B,EAAOpM,KACT,MAAbmB,EAJI,gBAKH,EAAKiQ,YAAY7G,GALd,gDAOIA,GAPJ,QASP,EAAK6G,YAAY7G,GATV,uCAhDG,EA8DlBoH,SAAW,SAAMC,GAAN,mBAAAxN,EAAAC,OAAA,uDAEDwN,EAAeD,EAAgBA,EAAgB3M,OAAS,IAEjDgG,SAAU,EAJhB,WAAA7G,EAAA,MAOoB,EAAKuH,aAAakG,EAAa9M,QAPnD,OAODmG,EAPC,OAQP2G,EAAa5G,SAAU,EACpBC,GAAgBA,EAAajG,OAAS,GAE/BwM,EAAevG,EAAarE,KAAI,SAAA4D,GAAC,MAAI,CACvC1F,MAAO0F,EAAEnI,IACT+O,MAAO5G,EAAEtI,KACTmP,QAAQ,MAGZO,EAAapL,SAAWgL,GAExBI,EAAaP,QAAS,EAG1B,EAAKhI,SAAS,CACd4H,QAAQ,aAAK,EAAKlI,MAAMkI,WAvBjB,sCA9DO,EAyFlBY,OAAS,WAEL,EAAK9N,MAAMC,KAAKC,gBAAe,SAAOpD,EAAMqD,GAAb,+BAAAC,EAAAC,OAAA,mDACvBvD,EADuB,wBAIhBqB,EAA+BgC,EAA/BhC,KAAK4P,EAA0B5N,EAA1B4N,KAAK3E,EAAqBjJ,EAArBiJ,MAES,KAFH4E,EAAe7N,EAAf6N,aAER/M,QACXuM,EAAc,IACdnQ,EAAa2Q,EAAY,KAEzBR,EAAcQ,EAAY,GAC1B3Q,EAAa2Q,EAAY,IAEvBhD,EAAO,EAAKiD,GAAGnE,QAAQiB,UACvBqB,EAAS,EAAK8B,OAAOpE,QAAQiC,YAC7B1N,EAAU,CAACF,OAAK4P,OAAK3E,QAAM4B,OAAKoB,SAAOoB,cAAYnQ,cAGrD,EAAKkQ,WACLlP,EAAQC,IAAM,EAAKD,QAAQC,KAnBR,WAAA8B,EAAA,MAsBFhC,EAAsBC,IAtBpB,OAwBF,IAxBE,OAwBbJ,QACNpB,EAAA,EAAQ2M,QAAR,UAAmB,EAAK+D,SAAS,eAAK,eAAtC,6BACA,EAAKvN,MAAMU,QAAQyN,UAEnBtR,EAAA,EAAQC,MAAR,UAAiB,EAAKyQ,SAAS,eAAK,eAApC,6BA5BmB,0CAxF/B,EAAKU,GAAKG,IAAMC,YAEhB,EAAKH,OAASE,IAAMC,YALN,E,iFAgIdjN,KAAKuG,aAAa,O,2CAGlB,IAAMtJ,EAAU+C,KAAKpB,MAAMkD,SAAS8B,MAGpC5D,KAAKmM,WAAalP,EAClB+C,KAAK/C,QAAUA,GAAW,K,+BAEpB,IAAD,OACEkP,EAAoBnM,KAApBmM,SAASlP,EAAW+C,KAAX/C,QACTmP,EAAsCnP,EAAtCmP,YAAYnQ,EAA0BgB,EAA1BhB,WAAW2N,EAAe3M,EAAf2M,KAAKoB,EAAU/N,EAAV+N,OAC/B4B,EAAc,GACfT,IACoB,MAAhBC,EACCQ,EAAYrK,KAAKtG,IAEjB2Q,EAAYrK,KAAK6J,GACjBQ,EAAYrK,KAAKtG,KAIzB,IAIMgF,EACF,8BACI,kBAAC,GAAD,KACI,uBAAMpG,KAAK,aAAaoM,MAAO,CAACC,YAAY,GAAGgG,SAAS,IACpDtI,QAAS,kBAAI,EAAKhG,MAAMU,QAAQyN,aAExC,8BAAOZ,EAAS,2BAAO,6BAGxBpM,EAAqBC,KAAKpB,MAAMC,KAAhCkB,kBACP,OACI,wBAAMkB,MAAOA,EAAOhB,UAAU,kBAC1B,sBAhBe,CACnBkN,SAAU,CAACC,KAAK,GAChBC,WAAY,CAACD,KAAK,IAeV,kBAAC,GAAD,CAAMnB,MAAM,4BAEJlM,EAAkB,OAAO,CACrBqF,aAAanI,EAAQF,KACrBqD,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,uBAAOW,YAAY,+BAG9B,kBAAC,GAAD,CAAMuL,MAAM,4BAEJlM,EAAkB,OAAO,CACrBqF,aAAanI,EAAQ0P,KACrBvM,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,kBAAC6L,GAAD,CAAUlL,YAAY,6CAAU4M,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAI5E,kBAAC,GAAD,CAAMvB,MAAM,4BAEJlM,EAAkB,QAAQ,CACtBqF,aAAanI,EAAQ+K,MACrB5H,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,oDACvB,CAACkF,UAAUX,KAAK+L,iBAJxBhM,CAMG,uBAAOlF,KAAK,SAAS6F,YAAY,2BAAO+M,WAAW,aAI9D,kBAAC,GAAD,CAAMxB,MAAM,4BAEJlM,EAAkB,cAAc,CAC5BqF,aAAawH,EACbxM,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,wBACC+L,QAAS9L,KAAK4D,MAAMkI,QACpBS,SAAUvM,KAAKuM,aAI3B,kBAAC,GAAD,CAAMN,MAAM,4BACR,kBAAC,GAAD,CAAcyB,IAAK1N,KAAK6M,GAAIjD,KAAMA,KAEtC,kBAAC,GAAD,CAAMqC,MAAM,2BAAOkB,SAAU,CAACC,KAAK,GAAIC,WAAY,CAACD,KAAK,KACrD,kBAAC,GAAD,CAAgBM,IAAK1N,KAAK8M,OAAQ9B,OAAQA,KAE9C,kBAAC,GAAD,KACI,uBAAQnQ,KAAK,UAAU+J,QAAS,kBAAM,EAAK8H,WAA3C,uB,GAjOO7L,aAyOhB,OAAKE,QAAL,CAAc8K,I,mBCjPvB1L,GAAO,KAAKA,KAwFHwN,G,2MApFX/J,MAAM,CACFgK,OAAO,GACPC,OAAO,I,8KAK0B7N,KAAKpB,MAAMkD,SAAS8B,MAAM3G,QAApDmP,E,EAAAA,YAAYnQ,E,EAAAA,WACA,MAAhBmQ,E,0CACsBpQ,EAAgBC,I,OAA/B+K,E,OACA4G,EAAS5G,EAAOpM,KAAKmC,KAC3BiD,KAAKkE,SAAS,CAAC0J,W,kDAUO9S,QAAQgT,IAAI,CAAC9R,EAAgBoQ,GAAapQ,EAAgBC,M,QAA1E6B,E,OACA8P,EAAS9P,EAAQ,GAAGlD,KAAKmC,KACzB8Q,EAAS/P,EAAQ,GAAGlD,KAAKmC,KAC/BiD,KAAKkE,SAAS,CAAC0J,SAAOC,W,iFAIpB,IAAD,SACiC7N,KAAKpB,MAAMkD,SAAS8B,MAAM3G,QAAzDF,EADF,EACEA,KAAK4P,EADP,EACOA,KAAK3E,EADZ,EACYA,MAAM4B,EADlB,EACkBA,KAAKoB,EADvB,EACuBA,OADvB,EAEmBhL,KAAK4D,MAAtBgK,EAFF,EAEEA,OAAOC,EAFT,EAESA,OAER5M,EACF,8BACI,kBAAC,GAAD,KACI,uBAAMpG,KAAK,aAAaoM,MAAO,CAACC,YAAY,GAAGgG,SAAS,IACpDtI,QAAS,kBAAI,EAAKhG,MAAMU,QAAQyN,aAExC,2DAGR,OACI,wBAAM9L,MAAOA,EAAOhB,UAAU,kBAC1B,4BACI,kBAAC,GAAD,KACI,0BAAMA,UAAU,QAAhB,6BACA,8BAAOlD,IAEX,kBAAC,GAAD,KACI,0BAAMkD,UAAU,QAAhB,6BACA,8BAAO0M,IAEX,kBAAC,GAAD,KACI,0BAAM1M,UAAU,QAAhB,6BACA,8BAAO+H,IAEX,kBAAC,GAAD,KACI,0BAAM/H,UAAU,QAAhB,6BACA,8BAAO2N,EAAP,IAAgBC,EAAO,SAAMA,EAAS,KAE1C,kBAAC,GAAD,KACI,0BAAM5N,UAAU,QAAhB,6BACA,8BAEO2J,EAAKnI,KAAI,SAAAoI,GAAG,OACR,yBACC3I,IAAK2I,EACL5J,UAAU,cACV4E,IAAK+C,GAAciC,SAMnC,kBAAC,GAAD,KACI,0BAAM5J,UAAU,QAAhB,6BACA,0BAAM8N,wBAAyB,CAACC,OAAOhD,Y,GA9EnCnK,aCcboN,I,wLAXP,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOpM,KAAK,iBAAiBqM,UAAWrG,GAAasG,OAAK,IAC1D,kBAAC,IAAD,CAAOtM,KAAK,0BAA0BqM,UAAWrC,KACjD,kBAAC,IAAD,CAAOhK,KAAK,wBAAwBqM,UAAWP,KAC/C,kBAAC,IAAD,CAAUhM,GAAG,wB,GAPPd,cCJhBV,GAAO,IAAKA,KAEZ8E,G,6LAKEjF,KAAKpB,MAAMsG,QAAQlF,KAAKpB,MAAMC,Q,+BAExB,IACCkB,EAAqBC,KAAKpB,MAAMC,KAAhCkB,kBAKP,OACI,2BACI,kBAAC,GAAD,eAAMkM,MAAM,4BANG,CACnBkB,SAAU,CAACC,KAAK,GAChBC,WAAY,CAACD,KAAK,MAMNrN,EAAkB,WAAW,CACzBqF,aAAa,GACbhF,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,uBAAOW,YAAY,sD,GAtBxBG,aA8BP,OAAKE,QAAL,CAAckE,I,mBChCvB9E,GAAO,IAAKA,KACViO,G,KAAAA,SAKaC,G,YAKjB,WAAYzP,GAAO,IAAD,uBACd,4CAAMA,KAQVgF,MAAQ,CACJ0K,YAAY,IAVE,EAclBC,SAAW,kBAAI,EAAK3K,MAAM0K,aAdR,EAgBlBE,aAAe,SAACxN,GACZ,OAAOA,EAASgB,QAAO,SAACC,EAAIP,GAMxB,OALAO,EAAIM,KACA,kBAAC6L,GAAD,CAAUnN,MAAOS,EAAKT,MAAOC,IAAKQ,EAAKR,KAClCQ,EAAKL,SAAW,EAAKmN,aAAa9M,EAAKL,UAAU,OAGnDY,IACT,KAxBY,EA2BlBwM,QAAU,SAAAH,GACNlP,QAAQC,IAAI,cAAciP,GAC1B,EAAKpK,SAAS,CAACoK,iBA7BD,IAEP9L,EAAS,EAAK5D,MAAMtB,KAApBkF,MAFO,OAId,EAAKoB,MAAQ,CACT0K,YAAa9L,GALH,E,uFAkCQkM,GACtB,IAAMlM,EAAQkM,EAAUpR,KAAKkF,MAC7BxC,KAAKkE,SAAS,CACVoK,YAAa9L,M,2CAKjBxC,KAAK2O,UAAY3O,KAAKwO,aAAaxN,K,+BAGnC,IAIO1D,EAAQ0C,KAAKpB,MAAbtB,KACAgR,EAAetO,KAAK4D,MAApB0K,YACP,OACI,sBAPmB,CACnBnB,SAAU,CAACC,KAAK,GAChBC,WAAY,CAACD,KAAK,KAMd,kBAAC,GAAD,CAAMnB,MAAM,4BACT,uBAAOtM,MAAOrC,EAAKP,KAAM6R,UAAQ,KAEpC,wBACIC,WAAS,EACTC,kBAAkB,EAClBR,YAAaA,EAIbG,QAASzO,KAAKyO,SAEd,kBAACL,GAAD,CAAUnN,MAAM,2BAAOC,IAAI,OACtBlB,KAAK2O,iB,GAvEgB9N,aCsM/BkO,G,YA1LX,WAAYnQ,GAAO,IAAD,8BACd,4CAAMA,KARVgF,MAAQ,CACJoL,MAAM,GACN1R,KAAK,GACL2R,WAAU,EACVC,oBAAmB,GAGL,EAKlB9I,aAAe,aALG,EAYlB+I,QAAU,WAEN,EAAKtQ,KAAKC,gBAAe,SAAOtD,EAAIuD,GAAX,mBAAAC,EAAAC,OAAA,mDACrBG,QAAQC,IAAI,EAAKR,MAEZrD,EAHgB,uBAIjB,EAAK0I,SAAS,CAAC+K,WAAU,IAElBG,EAAYrQ,EAAZqQ,SACP,EAAKvQ,KAAKwH,cAPO,WAAArH,EAAA,MAUI5B,EAAWgS,IAVf,OAWK,KADhBpI,EAVW,QAWNnK,QACPpB,EAAA,EAAQ2M,QAAQ,4BAGV9K,EAAO0J,EAAOpM,KAOpB,EAAKsJ,UAAS,SAAAN,GAAK,MAAG,CAClBoL,MAAM,CAAC,EAAKpL,MAAMoL,MAAM1R,QAG5B7B,EAAA,EAAQC,MAAM,4BA1BD,yCAdX,EA+ClB2T,WAAa,8BAAArQ,EAAAC,OAAA,uDACT,EAAKiF,SAAS,CAACgL,oBAAmB,IAC5BI,EAAWC,EAAYlR,UACvBf,EAAO,EAAKsG,MAAMtG,KAElBkF,EAAQ,EAAKgN,aAAa9G,QAAQ6F,WACxCjR,EAAKkF,MAAQA,EACblF,EAAKmS,WAAY,IAAItM,MAAOY,UAC5BzG,EAAKoS,UAAYJ,EAAS1T,SARjB,WAAAoD,EAAA,MAWY3B,EAAcC,IAX1B,OAYW,IAZX,OAYET,OAEHS,EAAKJ,MAAQiC,EAAYzB,KAAKiS,SAC9BxQ,EAAYzB,KAAO,GACnBwB,EAAa0Q,aACb,EAAKhR,MAAMU,QAAQC,QAAQ,UAC3B9D,EAAA,EAAQ2M,QAAQ,iGAEhB3M,EAAA,EAAQ2M,QAAQ,oDAChB,EAAKlE,SAAS,CACV8K,MAAM,aAAI,EAAKpL,MAAMoL,UAK7BvT,EAAA,EAAQC,MAAM,oDA3BT,uCA/CK,EA8ElBmU,WAAa,WACT,EAAKnJ,QAAU,CACX,CACIzF,MAAM,2BACN0F,UAAU,QAEd,CACI1F,MAAM,2BACN0F,UAAU,cACVE,OAAO,SAACiJ,GAAD,OAAe9M,GAAY8M,KAEtC,CACI7O,MAAM,2BACN0F,UAAU,YACVE,OAAQ7D,IAEZ,CACI/B,MAAM,qBACN0F,UAAU,eAhGJ,EAsGlBoJ,SAAW,4BAAA/Q,EAAAC,OAAA,kEAAAD,EAAA,MACc7B,KADd,OAEe,KADhB6J,EADC,QAEInK,SACDmS,EAAQhI,EAAOpM,KACrB,EAAKsJ,SAAS,CACV8K,WALD,sCAtGO,EAgHlBgB,MAAQ,SAAC1S,GACL,MAAO,CACHsH,QAAQ,SAAA2D,GACJnJ,QAAQC,IAAI,cAAc/B,GAC1B,EAAK4G,SAAS,CACV5G,YAnHZ,EAAKkS,aAAexC,IAAMC,YAFZ,E,kFA4HdjN,KAAK6P,e,0CAIL7P,KAAK+P,a,+BAGC,IAAD,SAC6C/P,KAAK4D,MAAhDoL,EADF,EACEA,MAAM1R,EADR,EACQA,KAAK2R,EADb,EACaA,UAAUC,EADvB,EACuBA,mBACtBjO,EACF,8BACI,uBAAQpG,KAAK,UAAU+J,QAAS,kBAAI,EAAKV,SAAS,CAAC+K,WAAU,MAA7D,4BADJ,YAEI,uBAAQpU,KAAK,UAAU+J,QAAS,kBAAI,EAAKV,SAAS,CAACgL,oBAAmB,KAAQN,UAAWtR,EAAKJ,KAA9F,yCAIR,OACI,wBAAM+D,MAAOA,GACT,wBACImG,OAAO,MAEPC,WAAY2H,EACZtI,QAAS1G,KAAK0G,QACdY,WAAY,CAACC,gBAAgBI,GAAUH,iBAAgB,GACvDyI,aAAc,CACVpV,KAAK,QACLqV,gBAAgB,CAAC5S,EAAKJ,KACtBiT,SAAS,SAAC7S,GACN,EAAK4G,SAAS,CACV5G,WAKZ0S,MAAOhQ,KAAKgQ,QAEhB,wBACI/O,MAAM,2BACNwG,QAASwH,EACTzK,KAAMxE,KAAKmP,QACXzH,SAAU,WACN,EAAKxD,SAAS,CAAC+K,WAAU,IACzB,EAAKpQ,KAAKwH,gBAGd,kBAAC,GAAD,CAASnB,QAAS,SAACrG,GAAQ,EAAKA,KAAOA,MAE3C,wBACIoC,MAAM,2BACNwG,QAASyH,EACT1K,KAAMxE,KAAKqP,WACX3H,SAAU,WACN,EAAKxD,SAAS,CAACgL,oBAAmB,MAGtC,kBAAC,GAAD,CAAkBxB,IAAK1N,KAAKwP,aAAclS,KAAMA,U,GA3LjDuD,aCVbV,GAAO,IAAKA,KACZ6E,GAAS,KAAOA,OAEhBoL,G,6LAOEpQ,KAAKpB,MAAMsG,QAAQlF,KAAKpB,MAAMC,Q,+BAExB,IAAD,EACgBmB,KAAKpB,MAAnBoQ,EADF,EACEA,MAAMtR,EADR,EACQA,KACNqC,EAAqBC,KAAKpB,MAAMC,KAAhCkB,kBAKP,OACI,sBALmB,CACnBoN,SAAU,CAACC,KAAK,GAChBC,WAAY,CAACD,KAAK,KAId,kBAAC,GAAD,CAAMnB,MAAM,4BAEJlM,EAAkB,WAAW,CACzBqF,aAAa1H,EAAK9B,SAClBwE,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,sDAH/BsE,CAKG,uBAAOW,YAAY,iDAItBhD,EAAKR,IAAM,KACP,kBAAC,GAAD,CAAM+O,MAAM,gBAEJlM,EAAkB,WAAW,CACzBqF,aAAa1H,EAAK7B,SAClBuE,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,0CAH/BsE,CAKG,uBAAOlF,KAAK,WAAW6F,YAAY,qCAM1D,kBAAC,GAAD,CAAMuL,MAAM,sBAEJlM,EAAkB,QAAQ,CACtBqF,aAAa1H,EAAK2S,MAClBjQ,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,gDAH/BsE,CAKG,uBAAOlF,KAAK,SAAS6F,YAAY,2CAG5C,kBAAC,GAAD,CAAMuL,MAAM,gBAEJlM,EAAkB,QAAQ,CACtBqF,aAAa1H,EAAK4S,MAClBlQ,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,0CAH/BsE,CAKG,uBAAOW,YAAY,qCAG9B,kBAAC,GAAD,CAAMuL,MAAM,gBAEJlM,EAAkB,UAAU,CACxBqF,aAAa1H,EAAKiS,QAClBvP,MAAM,CACF,CAACC,UAAS,EAAK5E,QAAQ,0CAH/BsE,CAMI,wBAAQW,YAAY,kCAEZsO,EAAMvN,KAAI,SAAAnE,GAAI,OAAI,kBAAC,GAAD,CAAQ4D,IAAK5D,EAAKJ,IAAKyC,MAAOrC,EAAKJ,KAAMI,EAAKP,iB,GAzE7E8D,aAoFR,OAAKE,QAAL,CAAcqP,ICwEdG,G,2MAxJX3M,MAAM,CACF4M,MAAM,GACNxB,MAAM,GACNyB,QAAO,G,EAGXhK,YAAc,WACV,EAAKC,QAAU,CACX,CACIzF,MAAM,qBACN0F,UAAU,YAEd,CACI1F,MAAM,eACN0F,UAAU,SAEd,CACI1F,MAAM,eACN0F,UAAU,SAEd,CACI1F,MAAM,2BACN0F,UAAU,cACVE,OAAO7D,IAEX,CACI/B,MAAM,2BACN0F,UAAU,UACVE,OAAO,SAAC8I,GAAD,OAAW,EAAKe,UAAUf,KAErC,CACI1O,MAAM,eACN4F,OAAO,SAACnJ,GAAD,OACH,8BACI,kBAAC,GAAD,CAAYkH,QAAS,kBAAI,EAAKsB,WAAWxI,KAAzC,gBACA,kBAAC,GAAD,CAAYkH,QAAS,kBAAI,EAAK+L,WAAWjT,KAAzC,qB,EAQpBwI,WAAa,SAACxI,GACV,EAAKA,KAAOA,EACZ,EAAKwG,SAAS,CAACuM,QAAO,K,EAI1BxK,QAAU,WACN,EAAKvI,KAAO,KACZ,EAAKwG,SAAS,CAACuM,QAAO,K,EAI1BG,cAAgB,SAAC5B,GACb,IAAM0B,EAAY1B,EAAMhN,QAAO,SAACC,EAAI3E,GAEhC,OADA2E,EAAI3E,EAAKJ,KAAOI,EAAKP,KACdkF,IACT,IAEF,EAAKyO,UAAYA,G,EAGrBG,gBAAkB,WACd,EAAKhS,KAAKC,gBAAe,SAAOtD,EAAIuD,GAAX,SAAAC,EAAAC,OAAA,mDAEhBzD,EAFgB,uBAGjB,EAAKqD,KAAKwH,cACV,EAAKnC,SAAS,CAACuM,QAAO,IACtBrR,QAAQC,IAAIN,GACR,EAAKrB,OACLqB,EAAO7B,IAAM,EAAKQ,KAAKR,KAPV,WAAA8B,EAAA,MASIvB,EAAmBsB,IATvB,OAUG,IAVH,OAUNlC,SACPpB,EAAA,EAAQ2M,QAAR,UAAmB,EAAK1K,KAAK,eAAK,eAAlC,6BACA,EAAKoT,YAZQ,yC,EAmB7BH,WAAa,SAACjT,GACV,KAAM6G,QAAQ,CACVtD,MAAM,2BAAD,OAAQvD,EAAK9B,UAClB4I,KAAM,oBAAAxF,EAAAC,OAAA,kEAAAD,EAAA,MACmBxB,EAAcE,EAAKR,MADtC,OAEkB,IAFlB,OAESL,SACPpB,EAAA,EAAQ2M,QAAQ,wCAChB,EAAK0I,YAJP,yC,EAWdA,SAAW,kCAAA9R,EAAAC,OAAA,uDACD8R,EAAK5R,EAAYzB,KAAKR,IADrB,WAAA8B,EAAA,MAEezB,EAASwT,IAFxB,OAGe,KADhB/J,EAFC,QAGInK,SAAe,EACAmK,EAAOpM,KAAtB4V,EADc,EACdA,MAAMxB,EADQ,EACRA,MACb,EAAK4B,cAAc5B,GACnB,EAAK9K,SAAS,CACVsM,QACAxB,WARD,sC,oFAcPhP,KAAKyG,gB,0CAILzG,KAAK8Q,a,+BAGC,IAAD,SACwB9Q,KAAK4D,MAA3B4M,EADF,EACEA,MAAMxB,EADR,EACQA,MAAMyB,EADd,EACcA,OACb/S,EAAOsC,KAAKtC,MAAQ,GACpBuD,EAAQ,uBAAQpG,KAAK,UAAU+J,QAAS,kBAAI,EAAKqB,YAAzC,4BACd,OACI,wBAAMhF,MAAOA,GACT,wBACAmG,OAAO,MAEPC,WAAYmJ,EACZ9J,QAAS1G,KAAK0G,QACdY,WAAY,CAACC,gBAAgBI,MAE/B,wBACE1G,MAAOvD,EAAKR,IAAI,2BAAO,2BACvBuK,QAASgJ,EACTjM,KAAMxE,KAAK6Q,gBACXnJ,SAAU,WACN,EAAK7I,KAAKwH,cACV,EAAKnC,SAAS,CAACuM,QAAO,MAGxB,kBAAC,GAAD,CACEvL,QAAS,SAAArG,GAAI,OAAI,EAAKA,KAAOA,GAC7BmQ,MAAOA,EACPtR,KAAMA,U,GAjJPmD,a,qBCHEmQ,G,2MAEnBpN,MAAQ,CACNqN,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,K,EAG9BC,OAAS,WACP,EAAKjN,UAAS,SAAAN,GAAK,MAAK,CACtBqN,MAAOrN,EAAMqN,MAAMxP,KAAI,SAAA2P,GAAI,OAAIA,EAAO,KACtCF,OAAQtN,EAAMsN,OAAOlP,QAAO,SAACC,EAAK9D,GAEhC,OADA8D,EAAIM,KAAKpE,EAAM,GACR8D,IACN,S,EAOPoP,UAAY,SAACJ,EAAOC,GAClB,MAAO,CACLjQ,MAAO,CACLqQ,KAAM,4BAERC,QAAS,GACTC,OAAQ,CACN5W,KAAK,CAAC,eAAM,iBAEd6W,MAAO,CACL7W,KAAM,CAAC,eAAK,qBAAM,qBAAM,eAAK,qBAAM,iBAErC8W,MAAO,GACPC,OAAQ,CAAC,CACP5U,KAAM,eACNlC,KAAM,MACND,KAAMqW,GACL,CACDlU,KAAM,eACNlC,KAAM,MACND,KAAMsW,M,wEAKF,IAAD,EACiBlR,KAAK4D,MAAtBqN,EADA,EACAA,MAAOC,EADP,EACOA,OACd,OACE,6BACE,wBAAMjQ,MAAO,aAAckG,MAAS,uBAAQtM,KAAK,UAAU+J,QAAS5E,KAAKmR,QAArC,iBAClC,kBAAC,KAAD,CAAc7E,OAAQtM,KAAKqR,UAAUJ,EAAOC,W,GAlDrBrQ,aCAZ+Q,G,2MAEnBhO,MAAQ,CACNqN,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,K,EAG9BC,OAAS,WACP,EAAKjN,UAAS,SAAAN,GAAK,MAAK,CACtBqN,MAAOrN,EAAMqN,MAAMxP,KAAI,SAAA2P,GAAI,OAAIA,EAAO,KACtCF,OAAQtN,EAAMsN,OAAOlP,QAAO,SAACC,EAAK9D,GAEhC,OADA8D,EAAIM,KAAKpE,EAAM,GACR8D,IACN,S,EAOPoP,UAAY,SAACJ,EAAOC,GAClB,MAAO,CACLjQ,MAAO,CACLqQ,KAAM,gBAERC,QAAS,GACTC,OAAQ,CACN5W,KAAK,CAAC,eAAM,iBAEd6W,MAAO,CACL7W,KAAM,CAAC,eAAK,qBAAM,qBAAM,eAAK,qBAAM,iBAErC8W,MAAO,GACPC,OAAQ,CAAC,CACP5U,KAAM,eACNlC,KAAM,OACND,KAAMqW,GACL,CACDlU,KAAM,eACNlC,KAAM,OACND,KAAMsW,M,wEAKF,IAAD,EACiBlR,KAAK4D,MAAtBqN,EADA,EACAA,MAAOC,EADP,EACOA,OACd,OACE,6BACE,4BACE,uBAAQrW,KAAK,UAAU+J,QAAS5E,KAAKmR,QAArC,iBAGF,wBAAMlQ,MAAM,4BACV,kBAAC,KAAD,CAAcqL,OAAQtM,KAAKqR,UAAUJ,EAAOC,W,GAtDpBrQ,aCAbgR,G,2MAEnBR,UAAY,WACV,MAAO,CACLpQ,MAAQ,CACNqQ,KAAM,yDACNQ,QAAS,2BACTC,EAAE,UAEJR,QAAU,CACRS,QAAS,OACTC,UAAW,6BAEbT,OAAQ,CACNU,OAAQ,WACRC,KAAM,OACNvX,KAAM,CAAC,2BAAO,2BAAO,2BAAO,2BAAO,6BAErC+W,OAAS,CACP,CACE5U,KAAM,2BACNlC,KAAM,MACNuX,OAAS,MACTC,OAAQ,CAAC,MAAO,OAChBzX,KAAK,CACH,CAAC+E,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,KAAM5C,KAAK,6BAEpBuV,UAAW,CACTC,SAAU,CACRC,WAAY,GACZC,cAAe,EACfC,YAAa,2B,EASzBC,WAAa,WACX,MAAO,CACLC,gBAAiB,UAEjB3R,MAAO,CACLqQ,KAAM,2BACNa,KAAM,SACNU,IAAK,GACLC,UAAW,CACTC,MAAO,SAIXxB,QAAU,CACRS,QAAS,OACTC,UAAW,6BAGbe,UAAW,CACTC,MAAM,EACN1S,IAAK,GACLC,IAAK,IACL0S,QAAS,CACPC,eAAgB,CAAC,EAAG,KAGxBxB,OAAS,CACP,CACE5U,KAAK,2BACLlC,KAAK,MACLuX,OAAS,MACTC,OAAQ,CAAC,MAAO,OAChBzX,KAAK,CACH,CAAC+E,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,4BACjB,CAAC4C,MAAM,IAAK5C,KAAK,6BACjBqW,MAAK,SAAUpU,EAAGqU,GAAK,OAAOrU,EAAEW,MAAQ0T,EAAE1T,SAC5C2T,SAAU,SACVrH,MAAO,CACLsH,OAAQ,CACNT,UAAW,CACTC,MAAO,8BAIbS,UAAW,CACTD,OAAQ,CACNE,UAAW,CACTV,MAAO,4BAETW,OAAQ,GACR7T,OAAQ,GACR8T,QAAS,KAGbrB,UAAW,CACTiB,OAAQ,CACNR,MAAO,UACPP,WAAY,IACZE,YAAa,uBAIjBkB,cAAe,QACfC,gBAAiB,aACjBC,eAAgB,SAAUC,GACxB,OAAuB,IAAhBC,KAAKC,c,wEAQpB,OACE,6BACE,wBAAMhT,MAAM,kCACV,kBAAC,KAAD,CAAcqL,OAAQtM,KAAKqR,YAAapK,MAAO,CAACyE,OAAQ,QAE1D,wBAAMzK,MAAM,kCACV,kBAAC,KAAD,CAAcqL,OAAQtM,KAAK2S,aAAc1L,MAAO,CAACyE,OAAQ,a,GA9HlC7K,a,qCC0BlBqT,I,mNAvBbC,OAAS,WACP,EAAKvV,MAAMU,QAAQC,QAAQ,gB,wEAI3B,OAEE,wBAAKU,UAAU,aACb,wBAAKmN,KAAM,GAAInN,UAAU,SACzB,wBAAKmN,KAAM,GAAInN,UAAU,SACvB,mCACA,wGACA,6BACE,uBAAQpF,KAAK,UAAU+J,QAAS5E,KAAKmU,QAArC,mC,GAfWtT,cCQhBuT,G,IAAAA,OAAOC,G,IAAAA,MAAMC,G,IAAAA,QAuCLC,G,iLAjCP,IAAM7W,EAAOyB,EAAYzB,KAEzB,OADA0B,QAAQC,IAAI3B,GACRA,GAASA,EAAKR,IAId,uBAAQ+J,MAAO,CAACuN,UAAU,SACtB,kBAACH,GAAD,KACI,kBAAC,GAAD,OAEJ,2BACI,kBAAC,GAAD,eACA,kBAACC,GAAD,CAASrN,MAAO,CAACqB,OAAO,GAAGsK,gBAAgB,SACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUzE,OAAO,EAAMsG,KAAK,IAAI9S,GAAG,gBACnC,kBAAC,IAAD,CAAOE,KAAK,cAAcqM,UAAWnJ,KACrC,kBAAC,IAAD,CAAOlD,KAAK,kBAAkBqM,UAAWtI,KACzC,kBAAC,IAAD,CAAO/D,KAAK,iBAAiBqM,UAAWD,KACxC,kBAAC,IAAD,CAAOpM,KAAK,cAAcqM,UAAWa,KACrC,kBAAC,IAAD,CAAOlN,KAAK,cAAcqM,UAAWqC,KACrC,kBAAC,IAAD,CAAO1O,KAAK,oBAAoBqM,UAAW8C,KAC3C,kBAAC,IAAD,CAAOnP,KAAK,qBAAqBqM,UAAW0D,KAC5C,kBAAC,IAAD,CAAO/P,KAAK,oBAAoBqM,UAAW2D,KAC3C,kBAAC,IAAD,CAAO3D,UAAWgG,OAG1B,kBAACE,GAAD,CAAQnN,MAAO,CAACyN,UAAU,SAAS3B,MAAM,SAAzC,qIAvBD,kBAAC,IAAD,CAAUpR,GAAG,e,GALZd,aCAL8T,G,iLAVX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9S,KAAK,SAASqM,UAAW1P,IAChC,kBAAC,IAAD,CAAOqD,KAAK,SAASqM,UAAWqG,W,GANxB1T,aCAZnD,GAAOwB,EAAab,UAC1Bc,EAAYzB,KAAKA,GAEjBkX,IAAS/N,OAAO,kBAAC,GAAD,MAASgO,SAASC,eAAe,U","file":"static/js/main.b4d009cc.chunk.js","sourcesContent":["/* \n能发送异步ajax请求的函数模块\n*/\nimport axios from 'axios'\nimport {message} from 'antd'\nexport default function ajax(url='',data={},type='GET'){\n    return new Promise((resolve,reject)=>{\n        var promise;\n        if(type === 'GET'){\n            promise = axios.get(url,{\n                params:data\n            });\n        }else{\n            promise = axios.post(url,data);\n        }\n        promise.then(val=>{\n            resolve(val.data);\n        }).catch(err=>{\n            // reject(err);\n            message.error('请求出错了:'+err.message);\n        })\n    });\n    \n}\n","import jsonp from 'jsonp'\nimport {message} from 'antd'\nimport ajax from './ajax'\n\nconst BASE = '';\n// 登录\nexport const reqLogin = (username,password)=> ajax(BASE+'/login',{username, password},'POST');\n\n// 获取一级/二级分类的列表 \nexport const reqCategorys = (parentId) =>ajax(BASE + '/manage/category/list',{parentId});\n\nexport const reqCategoryInfo = (categoryId)=>ajax(BASE+'/manage/category/info',{categoryId});\n\n// 添加分类\nexport const reqAddCategorys = (parentId,categoryName) =>ajax(BASE + '/manage/category/add',{categoryName,parentId},\"POST\");\n\n// 更新分类\nexport const reqUpdateCategory = (categoryId,categoryName) =>ajax(BASE + '/manage/category/update',{categoryId,categoryName},\"POST\");\n\n// 获取商品分页列表\nexport const reqProducts = (pageNum,pageSize)=>ajax(BASE+'/manage/product/list',{pageNum,pageSize});\n\n// 搜索商品分页列表(根据商品名称/商品描述)\n// searchType:搜索的类型,productName/productDesc\nexport const reqSearchProducts = ({pageNum,pageSize,searchName,searchType})=>ajax(BASE+'/manage/product/search',{\n    pageNum,\n    pageSize,\n    [searchType]:searchName\n});\n\n// 更新商品状态(上架/下架)\nexport const reqUpdateStatus = (productId,status) => ajax(BASE+'/manage/product/updateStatus',{productId,status},'POST');\n\n// 删除图片\nexport const reqDeleteImg = (name) => ajax(BASE+'/manage/img/delete',{name},'POST');\n\n// 添加/删除商品\nexport const reqAddOrUpdateProduct = (product)=> ajax(BASE+'/manage/product/'+(product._id?'update':'add'),product,'POST');\n\n// 获取所有角色的列表\nexport const reqRoles = ()=>ajax(BASE+'/manage/role/list');\n\n// 添加角色\nexport const reqAddRole = (name)=>ajax(BASE+'/manage/role/add',{name},'POST');\n\n// 更新角色\nexport const reqUpdateRole = (role)=>ajax(BASE+'/manage/role/update',role,'POST');\n\n// 获取所有用户的列表\nexport const reqUsers = (_id)=>ajax(BASE+'/manage/user/list',{_id});\n\n// 删除用户\nexport const reqDeleteUser = (_id)=>ajax(BASE+'/manage/user/delete',{_id},\"POST\");\n\n// 添加/更新用户\nexport const reqAddOrUpdateUser = (user)=> ajax(BASE+'/manage/user/'+(user._id?'update':'add'),user,'POST');\n\n// 更新用户\n// export const reqUpdateUser = (user)=> ajax(BASE+'/manage/user/update',user,'POST');\n\n/*json请求的接口请求函数\n */\nexport const reqWeather = (city) =>{\n    return new Promise((resolve,reject) =>{\n        const url = `https://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\n        jsonp(url,{},(err,data)=>{\n            // console.log('jsonp',err,data);\n            if(!err && data.status === 'success'){\n                const {dayPictureUrl,weather} = data.results[0].weather_data[0]\n                resolve({dayPictureUrl,weather});\n            }else{\n                message.error('获取天气信息失败!');\n            }\n        });\n    })\n    \n}\n\n","import store from 'store'\nconst USER_KEY = 'user_key'\n\n\n\nexport default{\n    // 存入localStorage\n    saveUser(user){\n        // localStorage.setItem(USER_KEY,JSON.stringify(user));\n        store.set(USER_KEY, user);\n    },\n    // 读取localStorage\n    getUser(){\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}');\n        return store.get(USER_KEY || {});\n    },\n    // 删除localStorage\n    delUser(){\n        store.remove(USER_KEY);\n    }\n}","\n\n\nexport default{\n    user:{\n        \n    },        //保存当前登录的user\n}","import React, { Component } from 'react';\nimport { Form, Icon, Input, Button ,message} from 'antd';\nimport {reqLogin} from '../../api/index'\nimport storageUtils from '../../utils/storageUtils.js'\nimport md5 from 'md5'\nimport './login.less'\nimport memoryUtils from '../../utils/memoryUtils'\n\n\n\n\n/* 登录的路由组件 */\nclass Login extends Component {\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n            //   console.log('提交ajax请求', values);\n                const {username,password} = values;\n                const data = await reqLogin(username,password);\n                // console.log(data);\n                if(data.status === 0){\n                    storageUtils.saveUser(data.data);\n                    memoryUtils.user=data.data;\n                    console.log(memoryUtils.user);\n                    this.props.history.replace('/admin/home');  \n                }else{\n                    message.error(data.msg);\n                }               \n            }else{\n                console.log(\"校验失败!!\");\n            }\n        });\n        // const form = this.props.form;\n        // const value = form.getFieldsValue();\n        // console.log(value);\n    }\n    // 对密码进行自定义验证\n    validatorPwd = (rule,value,callback)=>{\n        if(!value){\n            callback('密码必须输入');\n        }else if(value.length < 3){\n            callback('密码长度不能小于3位');\n        }else if(value.length > 12){\n            callback('密码长度不能大于12位');\n        }else if(!/^[a-zA-Z0-9]+$/.test(value)){\n            callback('密码必须是英文、数字或下划线组成');\n        }else{\n            callback();\n        }\n    }\n    render() {\n        // 得到具有强大功能的form对象\n        const form = this.props.form;\n        const {getFieldDecorator} = form;\n\n        return (\n            <div className=\"login\">\n                <header className=\"login-header\">\n                    <h1>React项目：后台管理系统</h1>\n                </header>\n                <section className=\"login-content\">\n                    <h2>用户登录</h2>\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                //声明式验证:直接使用别人定义好的规则进行验证\n                                rules: [\n                                    { required: true,whitespace:true, message: '用户名必须输入'},\n                                    { min: 2, message: '用户名至少2位'},\n                                    { max: 12, message: '用户名最多12位'},\n                                    // { pattern: /^[a-zA-Z0-9]+$/, message: '用户名必须是英文、数字或下划线组成'},\n                                ],\n                            })(\n                                <Input\n                                prefix={<Icon type=\"user\" />}\n                                placeholder=\"用户名\"\n                                />\n                            )}\n                            \n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator(\"password\",{\n                                    rules:[\n                                        {\n                                            validator:this.validatorPwd\n                                        }\n                                    ]\n                                })(\n                                    <Input\n                                    prefix={<Icon type=\"lock\"/>}\n                                    type=\"password\"\n                                    placeholder=\"密码\"\n                                    />\n                                )\n                            }                            \n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                Log in\n                            </Button>  \n                            {/* <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                注册个Admin\n                            </Button>                      */}\n                        </Form.Item>\n                    </Form>\n                </section>\n                \n            </div>\n        );\n    }\n}\n/* \n1.高阶函数\n    1).一类特别的函数\n        a.接受函数类型的参数\n        b.返回值是函数\n    2)常见的高阶函数\n        a.定时器:setTimeout()/setInterval()\n        b.Promise: Promise(()=>{}).then(value=>{})\n        c.数组遍历相关的方法:forEach()/filter()/map()\n        d.函数对象的bind()\n    3)高阶函数更加动态,更加具有扩展性\n\n2.高阶组件\n    1)本质就是一个函数\n    2)接受一个组件(被包装组件),返回一个新的组件(包装组件),包装组件会向被包装组件传入特定属性\n    3)作用:扩展组件的功能\n    4)高阶组件也是高阶函数:接收一个组件函数,返回是一个新的组件函数\n\n*/\n/* \n包装Form组件生成一个新的组件 Form(Login)\n新组建会向Form组件传递一个强大的对象属性:form\n*/\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;\n/* \n1.前台表单验证\n2.收集表单输入数据\n*/\n","\n\n\n\nconst menuList = [\n    {\n        title:'首页',    //菜单标题名称\n        key:'/admin/home',   //对应的path\n        icon:'home',     //图标名称\n        isPublic:true,    //是否公开的\n    },\n    {\n        title:'商品',\n        key:'/admin/products',\n        icon:'appstore',\n        children:[\n            {\n                title:'品类管理',\n                key:'/admin/category',\n                icon:'bars'\n            },\n            {\n                title:'商品管理',\n                key:'/admin/product',\n                icon:'tool'\n            },\n        ]\n    },\n    {\n        title:'用户管理',\n        key:'/admin/user',\n        icon:'user',\n    },\n    {\n        title:'角色管理',\n        key:'/admin/role',\n        icon:'safety',\n    },\n    {\n        title:'图形图表',\n        key:'/admin/charts',\n        icon:'area-chart',\n        children:[\n            {\n                title:'柱形图',\n                key:'/admin/charts/bar',\n                icon:'bar-chart'\n            },\n            {\n                title:'折线图',\n                key:'/admin/charts/line',\n                icon:'line-chart'\n            },\n            {\n                title:'饼图',\n                key:'/admin/charts/pie',\n                icon:'pie-chart'\n            },\n        ]\n    }\n];\nexport default menuList;","import React, { Component } from 'react'\nimport {Link,withRouter} from 'react-router-dom'\nimport {Menu,Icon} from 'antd'\nimport menuList from '../../config/menuConfig'\nimport memoryUtils from '../../utils/memoryUtils'\nimport './left-nav.less'\n\nconst SubMenu = Menu.SubMenu;\n/* \n左侧导航的组件\n*/\nclass LeftNav extends Component {\n\n    /* \n    根据menu的数据数组生成对应的标签数组\n    使用map() + 递归调用\n    */\n    getMenuNOdes_map = (menuList)=>{\n        return menuList.map(item =>{\n            if(!item.children){\n                return(\n                    <Menu.Item key={item.key}>\n                        <Link to={item.key}>\n                            <Icon type={item.icon}/>\n                            <span>首页</span>\n                        </Link>                        \n                    </Menu.Item>\n                );\n            }else {\n               return(\n                    <SubMenu\n                        key={item.key}\n                        title={\n                        <span>\n                            <Icon type={item.icon} />\n                        <span>{item.title}</span>\n                        </span>\n                        }>\n                            {this.getMenuNOdes_map(item.children)}\n                    </SubMenu>\n               );\n            }\n        });\n    }\n    /* \n    根据menu的数据数组生成对应的标签数组\n    使用reduce() + 递归调用\n    */\n    getMenuNOdes = (menuList) =>{\n        const path = this.props.location.pathname;\n        return menuList.reduce((pre,item) => {\n\n            // 如果当前用户有item对应的权限,才需要显示对应的菜单项\n            if (this.hasAuth(item)) {\n               // 向pre添加<Menu.Item>\n                if(!item.children){\n                    pre.push((\n                        <Menu.Item key={item.key}>\n                            <Link to={item.key}>\n                                <Icon type={item.icon}/>\n                                <span>{item.title}</span>\n                            </Link>                        \n                        </Menu.Item>\n                    ));\n                }else{\n                    const cItem = item.children.find(cItem =>path.indexOf(cItem.key) ===0);\n                    if(cItem){\n                        this.openKey = item.key;\n                    }                \n                    pre.push((\n                        <SubMenu\n                            key={item.key}\n                            title={\n                            <span>\n                                <Icon type={item.icon} />\n                            <span>{item.title}</span>\n                            </span>\n                            }>\n                                {this.getMenuNOdes(item.children)}\n                        </SubMenu>\n                    ));\n                } \n            }\n\n            \n            return pre;\n        },[]);\n    }\n\n    /* 判断当前登录用户对item是否有权限 */\n    hasAuth = (item)=>{\n        const {key,isPublic} = item;\n        const menus = memoryUtils.user.role.menus;\n        const username = memoryUtils.user.username;\n\n        /* \n        需要判断的情况:\n        1.如果当前用户是admin\n        2.如果当前item是公开的\n        3.当前用户有此item的权限:key有没有在menus中\n        */\n        if (username==='admin' || isPublic || menus.indexOf(key)!==-1) {\n            return true;\n        }else if(item.children){  //4.如果当前用户有此item的某个子item的权限\n            return !!item.children.find(child => menus.indexOf(child.key) !== -1)\n        }\n       return false;\n    }\n\n    /* \n    在第一次render()之前执行一次\n    为第一次render()准备数据(同步的)\n    */\n    componentWillMount(){\n        this.menuNodes = this.getMenuNOdes(menuList);\n    }\n    render() {\n        let path = this.props.location.pathname;\n        const openKey = this.openKey;\n        if(path.indexOf('/admin/product') === 0){\n            path = '/admin/product';\n        }\n        return (\n            <div className=\"left-nav\">\n                <Link to='#' className=\"left-nav-header\">\n                    <h1>硅谷后台</h1>\n                </Link>\n                <Menu\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    selectedKeys={[path]}\n                    defaultOpenKeys={[openKey]}\n                >\n                {this.menuNodes}\n                \n                </Menu>\n            </div>\n        );\n    }\n}\n/* \nwithRotuer高阶组件:\n包装非路由㢟,返回一个新的组件\n新的组件向非路由组件传递3个属性:history/location/match\n*/\nexport default withRouter(LeftNav);","export function formateDate(time){\n    if(!time) return '';\n    let date = new Date(time);\n        return date.getFullYear() + '-' + date.getMonth() +'-'+date.getDate()\n        +' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds()\n}","import React, { Component } from 'react';\nimport './linkButton.less'\n\n\n\nclass LinkButton extends Component {\n    render() {\n        return <button {...this.props} className=\"link-button\"></button>;\n    }\n}\n\nexport default LinkButton;","import React, { Component } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Modal} from 'antd'\n// import api from '../../api/index'\nimport {reqWeather} from '../../api/index'\nimport menuList from '../../config/menuConfig'\nimport {formateDate} from '../../utils/dateUtils'\nimport memoryUtils from '../../utils/memoryUtils'\nimport LinkButton from '../link-button/linkButton'\nimport './header.less'\n\n\n\nclass Header extends Component {\n    state = {\n        currentTime:formateDate(Date.now()),\n        dayPictureUrl:'',         //天气图片url\n        weather:'',       //天气文本\n    }\n    getTime = () => {\n        this.intervalId = setInterval(() => {\n            const currentTime = formateDate(Date.now());\n            this.setState({currentTime});\n        }, 1000);\n    }\n    getWeather = async () => {\n        const {dayPictureUrl,weather} = await reqWeather('温州');\n        this.setState({dayPictureUrl,weather});\n    }\n    getTitle = () => {\n        // 得到当前请求路径\n        const path = this.props.location.pathname;\n        let title;\n        menuList.forEach(item => {\n            if(item.key === path){\n                title = item.title;\n            }else if(item.children){\n                const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\n                if(cItem){\n                    title = cItem.title;\n                }\n            }\n        });\n        return title;\n    }\n    logOut = () => {\n        Modal.confirm({\n            title: '确定退出?',\n            onOk:() => {\n            //   console.log('OK');\n              memoryUtils.user = {};\n              localStorage.clear();\n              this.props.history.replace('/login');\n            },\n          });\n    }\n    /* \n        在第一次render之后执行\n        一般在此执行异步操作: 发ajax请求/启动定时器\n    */\n    componentDidMount(){\n        this.getTime();\n        this.getWeather();\n    }\n    /* \n    当前组件卸载之前调用\n    */\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n    render() {\n        const {currentTime,dayPictureUrl,weather} = this.state;\n        const username = memoryUtils.user.username;\n        const title = this.getTitle();\n        return (\n            <div className='header'>\n                <div className='header-top'>\n                    <span>欢迎,{username}</span>\n                    <LinkButton onClick={this.logOut}>退出</LinkButton>\n                </div>\n                <div className='header-bottom'>\n                    {/* 子绝父相 伪元素 三角型 */}\n                    <div className='header-bottom-left'>{title}</div>\n                    <div className='header-bottom-right'>\n                        <span>{currentTime}</span>\n                        <img src={dayPictureUrl} alt=\"晴\"/>\n                        <span>{weather}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Header);","import React, { Component } from 'react';\nimport './home.less'\n/* \n首页的路由\n*/\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home\">\n                欢迎使用硅谷后台管理系统\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Form,Select,Input} from 'antd'\n\nconst Item = Form.Item;\nconst Option = Select.Option;\n/* 添加分类的form组件 */\nclass AddForm extends Component {\n    static propTypes = {\n        setForm:PropTypes.func.isRequired,\n        categorys:PropTypes.array.isRequired,  //一级分类的数组\n        parentId:PropTypes.string.isRequired,  //父分类的ID\n    }\n    componentWillMount(){\n        this.props.setForm(this.props.form)\n    }\n    render() {\n        const {categorys,parentId} = this.props;\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form>\n                <Item>\n                    {\n                        getFieldDecorator('parentId',{\n                            initialValue:parentId\n                        })(\n                            <Select>\n                                <Option value='0'>一级分类</Option>\n                                {categorys.map(c =><Option value={c._id}>{c.name}</Option>)}\n                            </Select>\n                        )\n                    }\n                    \n                </Item>\n                <Item>\n                    {\n                        getFieldDecorator('categoryName',{\n                            initialValue:'',\n                            rules:[\n                                {required:true,message:'分类名称必须输入'}\n                            ]\n                        })(<Input placeholder='请输入分类名称'></Input>)\n                    }                    \n                </Item>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create()(AddForm);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Form,Input} from 'antd'\nconst Item = Form.Item;\n\n\n\n/* 更新分类的form组件 */\nclass UpdateForm extends Component {\n    static propType = {\n        categoryName:PropTypes.string.isRequired,\n        setForm:PropTypes.func.isRequired\n    }\n    componentWillMount(){\n        // 将form对象通过setForm()传递给父组件\n        // console.log(this.props.form);\n        this.props.setForm(this.props.form)\n    }\n    render() {\n        const {categoryName} = this.props;\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form>\n                <Item>\n                    {\n                        getFieldDecorator('categoryName',{\n                            initialValue: categoryName,\n                            rules:[\n                                {required:true,message:'分类名称必须输入'}\n                            ]\n                        })(<Input placeholder='请输入分类名称'></Input>)\n                    }                    \n                </Item>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create()(UpdateForm);","import React, { Component } from 'react';\nimport { Card,Table,Button,Icon,Modal,message } from 'antd';\nimport LinkButton from '../../components/link-button/linkButton'\nimport AddForm from './add-form'\nimport UpdateForm from './update-form'\nimport {reqCategorys,reqUpdateCategory,reqAddCategorys} from '../../api/index'\n\n\n\n/* \n分类的路由\n*/\nclass Category extends Component {\n    state = {\n      loading:false,   //是否正在获取数据\n      categorys:[],   //一级分类列表\n      subCategorys:[],   //二级分类列表\n      parentId:'0',   //当前需要显示的分类列表的父分类ID\n      parentName:'',  //当前需要显示的分类列表的父分类名称\n      showStatus:0, //标识添加/更新的确认框是否显示,0:都不显示,1:显示添加,2:显示更新\n    }\n\n    /* 显示添加的确认框 */\n    showAdd=()=>{\n      this.setState({\n        showStatus:1\n      });\n    }\n\n    /* 显示更新的确认框 */\n    showUpdate = (category) => {\n      this.category = category;\n      this.setState({\n        showStatus:2\n      });\n    }\n\n    /* 响应点击取消:隐藏确定框 */\n    handleCancel = ()=>{\n      // 清除输入数据\n      this.form.resetFields();\n      this.setState({\n        showStatus:0\n      });\n    }\n\n    /* 更新分类 */\n    updateCategory = ()=>{\n\n      // 进行表单验证,只有通过了才处理\n      this.form.validateFields(async (err,values)=>{\n        if(!err){\n          /* 隐藏确认框 */\n          this.setState({\n            showStatus:0\n          });\n          const categoryId = this.category._id;\n          const {categoryName} = values;\n          // 清除输入数据\n          this.form.resetFields();\n          const result = await reqUpdateCategory(categoryId,categoryName);\n          if(result.status ===0){\n            this.getCategorys();\n          }\n        }\n      });\n      \n    }\n\n    /* 添加分类 */\n    addCategory = async ()=> {\n      this.form.validateFields(async (err,values)=>{\n        if(!err){\n          /* 隐藏确认框 */\n          this.setState({\n            showStatus:0\n          });\n          const {parentId,categoryName} = values;\n          // 清除输入数据\n          this.form.resetFields();\n          const result = await reqAddCategorys(parentId,categoryName);\n          if(result.status == 0){\n            if(parentId === this.state.parentId){\n              this.getCategorys();\n            }else{\n              this.getCategorys('0');\n            }        \n          }\n        }\n      });\n      \n    }\n\n    //初始化Table所有列的数组\n    initColumns = () => {\n      this.columns = [\n        {\n          title: '分类的名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '操作',\n          width:300,\n          render:(category)=>(\n            <span>\n                <LinkButton onClick={() =>this.showUpdate(category)}>修改分类</LinkButton>\n                {/* 如何定义事件回调函数传递参数:先定义一个匿名函数,在函数调用处理的函数并传递参数 */}\n                {this.state.parentId ==='0'?<LinkButton onClick={() =>this.showSubCategorys(category)}>查看子分类</LinkButton>:null}\n                \n            </span>\n          )\n        }\n      ];\n    }\n\n    /* 显示指定一级分类对象的二级子列表 */\n    showSubCategorys = (category)=>{\n      this.setState({\n        parentId: category._id,\n        parentName: category.name\n      },()=>{\n        this.getCategorys();\n      });\n    }\n\n    /* 显示指定一级分类列表 */\n    showCategorys = ()=>{\n      this.setState({\n        parentId:'0',\n        parentName:'',\n        subCategorys:[]\n\n      });\n    }\n\n    /* \n    异步获取一级/二级分类列表显示 \n    parentId:如果没有指定则根据状态中的parentId请求,如果指定了根据指定的请求\n    */\n    getCategorys = async (parentId)=>{\n      //在发请求前,显示loading\n      this.setState({loading:true});\n      parentId = parentId || this.state.parentId;\n      //发异步ajax请求,获取分类列表\n      const result = await reqCategorys(parentId);\n      //在请求完成后,隐藏loading\n      this.setState({loading:false});\n\n      if(result.status === 0){\n        const categorys = result.data;\n        if(parentId === '0'){\n          this.setState({\n            categorys\n          });\n        }else{\n          //更新状态\n          this.setState({\n            subCategorys: categorys\n          });\n        }\n        \n      }else{\n        message.error('获取分类列表失败');\n      }\n    }\n\n    /* 为第一次render()准备数据 */\n    componentWillMount(){\n      this.initColumns();\n    }\n    /* 执行异步任务:发送异步ajax请求 */\n    componentDidMount(){\n      this.getCategorys();\n    }\n\n    render() {\n      let {categorys,loading,subCategorys,parentId,parentName,showStatus} = this.state;\n      const category = this.category || {};\n      const title = parentId ==='0'?'一级分类列表':(\n        <span>\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\n          <Icon type=\"arrow-right\" style={{marginRight:5}}></Icon>\n          <span>{parentName}</span>\n        </span>\n      );\n      const extra = (\n          <Button type='primary' onClick={this.showAdd}>\n              <Icon type='plus'/>\n              添加\n          </Button>\n      );\n      return (\n          <Card title={title} extra={extra}>\n              <Table\n                rowKey='_id'\n                loading={loading}                     \n                dataSource={parentId==='0'?categorys:subCategorys} \n                columns={this.columns}\n                pagination={{defaultPageSize:5,showQuickJumper:true}}\n              />\n              <Modal\n                title=\"添加分类\"\n                visible={showStatus === 1}\n                onOk={this.addCategory}\n                onCancel={this.handleCancel}\n              >\n                <AddForm categorys={categorys} parentId={parentId} setForm = {(form)=>{this.form = form}}></AddForm>\n              </Modal>\n\n              <Modal\n                title=\"更新分类\"\n                visible={showStatus === 2}\n                onOk={this.updateCategory}\n                onCancel={this.handleCancel}\n              >\n                <UpdateForm categoryName={category.name} setForm = {(form)=>{this.form = form}}></UpdateForm>\n              </Modal>\n          </Card>\n          \n      );\n    }\n}\n\nexport default Category;","/* \n包含一些常量值的模块\n*/\nexport const PAGE_SIZE = 3;   //每页显示的记录数\nexport const BASE_IMG_URL = 'http://localhost:3001/upload/'","import React, { Component } from 'react'\nimport {Card,Select,Input,Button,Icon,Table, message} from 'antd'\nimport LinkButton from '../../components/link-button/linkButton'\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api/index'\nimport {PAGE_SIZE} from '../../utils/constants'\nconst Option = Select.Option;\n/* product的默认子路由组件 */\nclass ProductHome extends Component {\n    state = {\n        total:0,       //商品的总数量\n        products:[],   //商品的数组\n        loading:false,  //是否正在加载中\n        searchName:'',  //搜索的关键字\n        searchType:'productName'    //根据哪个字段搜索\n    }\n    //初始化table的列的数组\n    initColumns = ()=>{\n        this.columns = [\n            {\n              title: '商品名称',\n              dataIndex: 'name',\n            },\n            {\n                title: '商品描述',\n                dataIndex: 'desc',\n            },\n            {\n                title: '价格',\n                dataIndex: 'price',\n                render:(price)=>'￥'+price\n            },\n            {\n                title: '状态',\n                // dataIndex: 'status',\n                width:100,\n                render:(product)=>{\n                    const {status,_id} = product;\n                    return(\n                        <span>\n                            <Button type='primary' onClick={() =>this.updateStatus(_id,status===1?2:1)}>{status === 1 ? '下架' : '上架'}</Button>\n                            <span>{status === 1 ? '在售' : '已下架'}</span>\n                        </span>\n                    )\n                }\n            },\n            {\n              title: '操作',\n              width:100,\n              render:(product)=>(\n                <span>\n                    <LinkButton onClick={()=> this.props.history.push('/admin/product/detail',{product})}>详情</LinkButton>\n                    <LinkButton onClick={()=> this.props.history.push('/admin/product/addupate',product)}>修改</LinkButton>\n                </span>\n              )\n            }\n          ];\n    }\n\n    // 获取指定页码的列表数据显示\n    getProducts = async (pageNum)=>{\n        this.pageNum = pageNum;    //保存pageNum,让其它方法可以看到\n        this.setState({loading:true});\n        const {searchName,searchType} = this.state;\n        // 如果搜索关键字有值,说明我们要做搜索分页\n        let result;\n        if(searchName){\n            // console.log(searchName);\n            result = await reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType});\n        }else{\n            result = await reqProducts(pageNum,PAGE_SIZE);\n        }\n        this.setState({loading:false});\n        if(result.status === 0){\n            // 取出分页数据,更新状态,显示分页列表\n            const {total,list} = result.data;\n            this.setState({\n                total,\n                products:list\n            });\n        }\n    }\n\n    // 更新指定商品的状态\n    updateStatus = async (productId,status)=>{\n        const result = await reqUpdateStatus(productId,status);\n        if(result.status === 0){\n            message.success('更新商品成功');\n            this.getProducts(this.pageNum);\n        }\n    }\n    componentWillMount(){\n        this.initColumns();\n    }\n\n    componentDidMount(){\n        this.getProducts(1);\n    }\n\n    render() {\n        // 取出状态数据\n        const {products,total,loading,searchName,searchType} = this.state;\n        const title = (\n            <span>\n                <Select value={searchType} style={{width:150}} onChange={value=>this.setState({searchType:value})}>\n                    <Option value='productName'>按名称搜索</Option>\n                    <Option value='productDesc'>按描述搜索</Option>\n                </Select>\n                <Input \n                    placeholder='关键字' \n                    style={{width:200,margin:'0 15px'}} \n                    value={searchName}\n                    onChange={event =>this.setState({searchName:event.target.value})}    \n                />\n                <Button type='primary' onClick={()=> this.getProducts(1)}>搜索</Button>\n            </span>\n        );\n        const extra = (\n            <Button type='primary' onClick={()=>this.props.history.push('/admin/product/addupate')}>\n                <Icon type='plus'/>\n                添加商品\n            </Button>\n        );          \n          \n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    bordered\n                    rowKey='_id'\n                    loading={loading}                     \n                    dataSource={products} \n                    columns={this.columns}\n                    pagination={{\n                        current:this.pageNum,\n                        total,\n                        defaultPageSize:PAGE_SIZE,\n                        showQuickJumper:true,\n                        onChange:this.getProducts\n                    }}    \n                />\n            </Card>\n        );\n    }\n}\n\nexport default ProductHome;","import React, { Component } from 'react'\nimport { Upload, Icon, Modal,message } from 'antd';\nimport PropTypes from 'prop-types'\nimport {reqDeleteImg} from '../../api/index'\nimport {BASE_IMG_URL} from '../../utils/constants'\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n/* 用于图片上传的组件 */\nclass PicturesWall extends Component {\n\n  static propTypes={\n    imgs:PropTypes.array\n  }\n\n  state = {\n    previewVisible: false,  //标识是否显示大图预览Modal\n    previewImage: '',       //大图的URL\n    fileList: [],\n  };\n\n  constructor(props){\n    super(props);\n    let fileList = [];\n    // 如果传入了imgs属性\n    const {imgs} = this.props;\n    if (imgs && imgs.length>0) {\n      fileList = imgs.map((img,index)=>({\n        uid:-index,\n        name:img,\n        status:'done',\n        url:BASE_IMG_URL+img\n      }));\n    }\n    //初始化状态\n    this.state = {\n      previewVisible:false,\n      previewImage:'',\n      fileList\n    }\n  }\n\n  /* 隐藏Modal */\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n      /* 显示指定file对应的大图 */\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  /* \n  file:当前操作的图片文件(上传/删除)\n  fileList:所有已上传图片文件对象的数组\n  */\n  handleChange = async ({ file,fileList }) =>{\n    if(file.status === 'done'){\n        const result = file.response;\n        if(result.status === 0){\n          message.success('上传图片成功');\n          const {name,url} = result.data;\n          file = fileList[fileList.length-1];\n          file.name = name;\n          file.url = url;\n        }else{\n          message.success('图片上传失败');\n        }\n    }else if(file.status === 'removed'){   //删除图片\n      const result = await reqDeleteImg(file.name);\n      if (result.status ===0) {\n        message.success(\"删除图片成功\");\n      }else{\n        message.error(\"删除图片失败\");\n      }\n    }\n    this.setState({ fileList })\n    console.log(fileList);\n  };\n\n  /* 获取所有已上传图片文件名的数组 */\n  getImgs = ()=>{\n    return this.state.fileList.map(file => file.name)\n  }\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div>\n        <Upload\n          action=\"/manage/img/upload\" /* 上传图片的接口地址 */\n          accept='image/*'    /* 只接收图片格式 */\n          name='image'       /* 请求参数名 */\n          listType=\"picture-card\"   /* 卡片样式 */\n          fileList={fileList}        /* 所有已上传图片文件对象的数组 */\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 3 ? null : uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default PicturesWall;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport {Editor} from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n/* 用来指定商品详情的富文本编辑器组件 */\nclass RichTextEditor extends Component {\n    static propTypes={\n        detail:PropTypes.string\n    }\n\n    state = {\n        editorState: EditorState.createEmpty(),   //创建一个没有内容的编辑对象\n    }\n\n    constructor(props) {\n        super(props);\n        const html = this.props.detail;\n        if (html) {   //如果有值,根据HTML格式字符串创建一个对应的编辑对象\n            const contentBlock = htmlToDraft(html);\n            if (contentBlock) {\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                const editorState = EditorState.createWithContent(contentState);\n                this.state = {\n                editorState\n                };\n            }  \n        }\n    }\n      \n    /* 输入过程中实时的回调 */\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    getDeatil = ()=>{\n        /* 返回输入数据对应的HTML格式的文本 */\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n    }\n    render() {\n    const { editorState } = this.state;\n        return (\n            <Editor\n                editorState={editorState}\n                editorStyle={{border:'1px solid black',height:200,paddingLeft:10}}\n                onEditorStateChange={this.onEditorStateChange}\n            />\n        );\n    }\n}\n\nexport default RichTextEditor;","import React, { Component } from 'react'\nimport {Card,Icon,Form,Input,Cascader,Button,message} from 'antd'\nimport LinkButton from '../../components/link-button/linkButton'\nimport PicturesWall from './pictures-wall'\nimport {reqCategorys,reqAddOrUpdateProduct} from '../../api/index'\nimport RichTextEditor from './rich-text-editor'\nconst {Item} = Form;\nconst {TextArea} = Input;\n\n\n\n\n/* product的添加和更新的子路由组件 */\nclass ProductAddUpdate extends Component {\n    state = {\n        options:[],\n    };\n\n    constructor(props){\n        super(props);\n        //创建用来保存ref标识的标签对象的容器\n        this.pw = React.createRef();\n\n        this.editor = React.createRef();\n    }\n    // 验证价格的自定义验证函数\n    validatePrice = (rule,value,callback)=>{\n        if(value*1 > 0){\n            callback(); //验证通过\n        }else{\n            callback('价格必须大于1');\n        }\n    }\n\n    initOptions = async (categorys)=>{\n        //根据categorys生成options数组\n        const options = categorys.map(c =>({\n            value: c._id,\n            label: c.name,\n            isLeaf: false,  //不是叶子\n        }));\n        // 如果是一个二级分类商品的更新\n        const {isUpdate,product} = this;\n        const {pCategoryId,categoryId} = product;\n        if(isUpdate && pCategoryId !== '0'){\n            // 获取对应的二级分类表表\n           const subCategorys = await this.getCategorys(pCategoryId);\n            // 生成二级下拉列表的options\n           const childOptions = subCategorys.map(c=>({\n                value: c._id,\n                label: c.name,\n                isLeaf: true,\n            }));\n\n            // 找到当前商品对应的一级option对象\n            const targetOption = options.find(option=>option.value === pCategoryId);\n\n            // 关联对应的一级option上\n            targetOption.children = childOptions;\n        }\n        this.setState({\n            options\n        });\n    }\n\n    //异步获取一级/二级分类表并显示\n    getCategorys = async (parentId)=>{\n        const result = await reqCategorys(parentId);\n        if(result.status === 0){\n            const categorys = result.data;\n            if(parentId === '0'){  //一级列表\n                this.initOptions(categorys);\n            }else{  //二级列表\n                return categorys   //返回二级列表,  当前async函数返回的promise就会成功且value为categorys\n            }\n            this.initOptions(categorys);\n        }\n    }\n\n    //用于加载下一级列表的回调函数\n    loadData = async selectedOptions => {\n        //得到选择的option对象\n        const targetOption = selectedOptions[selectedOptions.length - 1];\n        //显示loading\n        targetOption.loading = true;\n    \n        //根据选中的分类,请求获取二级分类列表\n        const subCategorys = await this.getCategorys(targetOption.value);\n        targetOption.loading = false;\n        if(subCategorys && subCategorys.length > 0){\n            //生成当前一个二级列表的options\n            const childOptions = subCategorys.map(c =>({\n                value: c._id,\n                label: c.name,\n                isLeaf: true,\n            }));\n            //关联到当前option上\n            targetOption.children = childOptions;\n        }else{\n            targetOption.isLeaf = true;\n        }\n        \n        this.setState({\n        options: [...this.state.options],\n        });\n      };\n\n    submit = ()=>{\n        // 进行表单验证,如果通过了,才发送请求\n        this.props.form.validateFields(async (error,values)=>{\n            if(!error){\n\n                // 1.收集数据\n                const {name,desc,price,categoryIds} = values;\n                let pCategoryId,categoryId;\n                if(categoryIds.length === 1){\n                    pCategoryId = '0';\n                    categoryId = categoryIds[0];\n                }else{\n                    pCategoryId = categoryIds[0];\n                    categoryId = categoryIds[1];\n                }\n                const imgs = this.pw.current.getImgs();\n                const detail = this.editor.current.getDeatil();\n                const product = {name,desc,price,imgs,detail,pCategoryId,categoryId};\n\n                // 如果是更新,需要添加_id\n                if (this.isUpdate) {\n                    product._id = this.product._id;\n                }\n                // 2.调用接口请求函数去添加/更新\n                const result = await reqAddOrUpdateProduct(product);\n                // 3.根据结果显示\n                if(result.status === 0){\n                    message.success(`${this.isUpdate?'更新':'添加'}商品成功`);\n                    this.props.history.goBack();\n                }else{\n                    message.error(`${this.isUpdate?'更新':'添加'}商品失败`);\n                }\n               \n            }\n        });\n    }\n\n\n    componentDidMount(){\n        this.getCategorys('0');\n    }\n    componentWillMount(){\n        const product = this.props.location.state;    //如果是添加没值,否则有值\n\n        //保存是否是更新的标识\n        this.isUpdate = !!product;\n        this.product = product || {};\n    }\n    render() {\n        const {isUpdate,product} = this;\n        const {pCategoryId,categoryId,imgs,detail} = product;\n        let categoryIds = [];\n        if(isUpdate){\n            if(pCategoryId === '0'){\n                categoryIds.push(categoryId);\n            }else{\n                categoryIds.push(pCategoryId);\n                categoryIds.push(categoryId);\n            }\n            \n        }\n        const formItemLayout = {\n            labelCol: {span:2},\n            wrapperCol: {span:8},\n        };\n        const title = (\n            <span>\n                <LinkButton>\n                    <Icon type='arrow-left' style={{marginRight:15,fontSize:20}}\n                        onClick={()=>this.props.history.goBack()}></Icon>\n                </LinkButton>\n                <span>{isUpdate?'修改商品':'添加商品'}</span>\n            </span>\n        );\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card title={title} className='product-detail'>\n                <Form {...formItemLayout}>\n                    <Item label='商品名称'>\n                        {\n                            getFieldDecorator('name',{\n                                initialValue:product.name,\n                                rules:[\n                                    {required:true,message:'必须输入商品名称'}\n                                ]\n                            })(<Input placeholder='商品名称'/>)\n                        }                        \n                    </Item>\n                    <Item label='商品描述'>\n                        {\n                            getFieldDecorator('desc',{\n                                initialValue:product.desc,\n                                rules:[\n                                    {required:true,message:'必须输入商品描述'}\n                                ]\n                            })(<TextArea placeholder=\"请输入商品描述\" autoSize={{ minRows: 2, maxRows: 6 }} />)\n                        }\n                        \n                    </Item>\n                    <Item label='商品价格'>\n                        {\n                            getFieldDecorator('price',{\n                                initialValue:product.price,\n                                rules:[\n                                    {required:true,message:'必须输入商品价格'},\n                                    {validator:this.validatePrice}\n                                ]\n                            })(<Input type='number' placeholder='商品价格' addonAfter='元'/>)\n                        }\n                        \n                    </Item>\n                    <Item label='商品分类'>\n                        {\n                            getFieldDecorator('categoryIds',{\n                                initialValue:categoryIds,\n                                rules:[\n                                    {required:true,message:'必须输入商品分类'}\n                                ]\n                            })(<Cascader\n                                options={this.state.options}   //需要显示的列表数据数组\n                                loadData={this.loadData}  //当选择某个列表项,加载下一级列表的监听回调\n                            />)\n                        }\n                    </Item>\n                    <Item label='商品图片'>\n                        <PicturesWall ref={this.pw} imgs={imgs}/>\n                    </Item>\n                    <Item label='商品详情' labelCol={{span:2}} wrapperCol={{span:20}}>\n                        <RichTextEditor ref={this.editor} detail={detail}/>\n                    </Item>\n                    <Item>\n                        <Button type='primary' onClick={() => this.submit()}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(ProductAddUpdate);","import React, { Component } from 'react';\nimport {Card,Icon,List} from 'antd'\nimport LinkButton from '../../components/link-button/linkButton'\nimport {BASE_IMG_URL} from '../../utils/constants'\nimport {reqCategoryInfo} from '../../api/index'\nconst Item = List.Item;\n/* Product的详情子路由组件 */\nclass ProductDetail extends Component {\n\n    state={\n        cName1:'',   //一级分类名称\n        cName2:''    //二级分类名称\n    }\n\n    async componentDidMount(){\n        // 得到当前商品的分类ID\n        const {pCategoryId,categoryId} = this.props.location.state.product;\n        if(pCategoryId === '0'){//一级分类下的商品\n            const result = await reqCategoryInfo(categoryId);\n            const cName1 = result.data.name;\n            this.setState({cName1});\n        }else{  //二级分类下的商品\n            // 通过多个await方式发多个请求:后面一个请求是在前一个请求成功返回之后才发送\n            /* const result1 = await reqCategoryInfo(pCategoryId);\n            const result2 = await reqCategoryInfo(categoryId);\n            const cName1 = result1.data.name;\n            const cName2 = result2.data.name;\n            this.setState({cName1,cName2}); */\n\n            // 一次性发送多个请求,只有都成功了,才正常处理\n            const results = await Promise.all([reqCategoryInfo(pCategoryId),reqCategoryInfo(categoryId)]);\n            const cName1 = results[0].data.name;\n            const cName2 = results[1].data.name;\n            this.setState({cName1,cName2});\n        }\n    }\n\n    render() {\n        const {name,desc,price,imgs,detail} = this.props.location.state.product;\n        const {cName1,cName2} = this.state;\n        // console.log(product);\n        const title = (\n            <span>\n                <LinkButton>\n                    <Icon type='arrow-left' style={{marginRight:15,fontSize:20}}\n                        onClick={()=>this.props.history.goBack()}></Icon>\n                </LinkButton>\n                <span>商品详情</span>\n            </span>\n        );\n        return (\n            <Card title={title} className='product-detail'>\n                <List>\n                    <Item>\n                        <span className='left'>商品名称:</span>\n                        <span>{name}</span>\n                    </Item>\n                    <Item>\n                        <span className='left'>商品描述:</span>\n                        <span>{desc}</span>\n                    </Item>\n                    <Item>\n                        <span className='left'>商品价格:</span>\n                        <span>{price}</span>\n                    </Item>\n                    <Item>\n                        <span className='left'>所属分类:</span>\n                        <span>{cName1} {cName2?'-->'+cName2 : ''}</span>\n                    </Item>\n                    <Item>\n                        <span className='left'>商品图片:</span>\n                        <span>\n                           {\n                               imgs.map(img=>(\n                                   <img\n                                    key={img}\n                                    className='product-img'\n                                    src={BASE_IMG_URL +img}\n                                   />\n                               ))\n                           }\n                        </span>\n                    </Item>\n                    <Item>\n                        <span className='left'>商品详情:</span>\n                        <span dangerouslySetInnerHTML={{__html:detail}}></span>\n                    </Item>\n                </List>\n            </Card>\n        );\n    }\n}\n\nexport default ProductDetail;","import React, { Component } from 'react';\nimport {Switch,Route,Redirect} from 'react-router-dom'\nimport ProductHome from './home'\nimport ProductAddUpdate from './add-update'\nimport ProductDetail from './detail'\nimport './product.less'\n\n/* 商品路由 */\nclass Product extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route path='/admin/product' component={ProductHome} exact></Route>\n                <Route path='/admin/product/addupate' component={ProductAddUpdate}></Route>\n                <Route path='/admin/product/detail' component={ProductDetail}></Route>\n                <Redirect to='/admin/product'/>\n            </Switch>\n        );\n    }\n}\n\nexport default Product;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Form,Input} from 'antd'\n\nconst Item = Form.Item;\n/* 添加角色的form组件 */\nclass AddForm extends Component {\n    static propTypes = {\n        setForm:PropTypes.func.isRequired\n    }\n    componentWillMount(){\n        this.props.setForm(this.props.form)\n    }\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span:4},\n            wrapperCol: {span:15},\n        };\n        return (\n            <Form>\n                <Item label='角色名称' {...formItemLayout}>\n                    {\n                        getFieldDecorator('roleName',{\n                            initialValue:'',\n                            rules:[\n                                {required:true,message:'角色名称必须输入'}\n                            ]\n                        })(<Input placeholder='请输入角色名称'></Input>)\n                    }                    \n                </Item>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create()(AddForm);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Form,Input,Tree} from 'antd'\nimport menuList from '../../config/menuConfig'\nconst Item = Form.Item;\nconst { TreeNode } = Tree;\n\n\n\n/* 添加分类的form组件 */\nexport default class JurisdictionForm extends Component {\n    static propTypes = {\n        role:PropTypes.object\n    }\n\n    constructor(props){\n        super(props);\n        const {menus} = this.props.role;\n        // 根据传入的角色的menus生成初始状态\n        this.state = {\n            checkedKeys: menus\n        }\n    }\n\n    state = {\n        checkedKeys:[]\n    }\n\n    /* 为父组件提交获取最新menus数据 */\n    getMenus = ()=>this.state.checkedKeys;\n\n    getTreeNodes = (menuList)=>{\n        return menuList.reduce((pre,item)=>{\n            pre.push(\n                <TreeNode title={item.title} key={item.key}>\n                    {item.children ? this.getTreeNodes(item.children):null}\n                </TreeNode>\n            );\n            return pre;\n        },[])\n    }\n\n    onCheck = checkedKeys => {\n        console.log(\"checkedKeys\",checkedKeys);\n        this.setState({checkedKeys});\n    }\n    /* \n    当组件接收到新的属性时自动调用\n    */\n    componentWillReceiveProps(nextProps){\n        const menus = nextProps.role.menus;\n        this.setState({\n            checkedKeys: menus\n        });\n    }\n\n    componentWillMount(){\n        this.treeNodes = this.getTreeNodes(menuList);\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: {span:4},\n            wrapperCol: {span:15},\n        };\n        const {role} = this.props;\n        const {checkedKeys} = this.state;\n        return (\n            <Form {...formItemLayout}>\n                <Item label='角色名称'>\n                   <Input value={role.name} disabled></Input>\n                </Item>\n                <Tree\n                    checkable\n                    defaultExpandAll={true}\n                    checkedKeys={checkedKeys}\n                    // defaultSelectedKeys={['0-0-0', '0-0-1']}\n                    // defaultCheckedKeys={['0-0-0', '0-0-1']}\n                    // onSelect={this.onSelect}\n                    onCheck={this.onCheck}\n                >\n                    <TreeNode title=\"平台权限\" key=\"all\">\n                        {this.treeNodes}\n                    </TreeNode>\n                </Tree>\n            </Form>\n        );\n    }\n}\n\n// export default Form.create()(JurisdictionForm);","import React, { Component } from 'react';\nimport {Card,Button,Table,Modal,message} from 'antd'\nimport {PAGE_SIZE} from '../../utils/constants.js'\nimport userStronge from '../../utils/storageUtils.js'\nimport {formateDate} from '../../utils/dateUtils.js'\nimport {reqRoles,reqAddRole,reqUpdateRole} from '../../api/index'\nimport AddForm from './add-form'\nimport JurisdictionForm from './jurisdiction-form'\nimport memoryUtils from '../../utils/memoryUtils.js';\nimport storageUtils from '../../utils/storageUtils.js';\n\n\n\n/* 角色路由 */\nclass Role extends Component {\n    state = {\n        roles:[],         //所有角色的列表\n        role:{},          // 选中的role\n        isShowAdd:false,       //是否显示添加界面\n        isShowJurisdiction:false,    //是否显示设置角色权限界面\n    }\n\n    constructor(props){\n        super(props);\n        this.jurisdiction = React.createRef();\n    }\n    /* 响应点击取消:隐藏确定框 */\n    handleCancel = ()=>{\n        // 清除输入数据\n        // this.form.resetFields();\n        \n    }\n\n    /* 添加角色 */\n    addRole = ()=>{\n        // 进行表单验证,只能通过了才向下处理\n        this.form.validateFields(async (err,values)=>{\n            console.log(this.form);\n            \n            if (!err) {\n                this.setState({isShowAdd:false});\n                // 收集输入数据\n                const {roleName} = values;\n                this.form.resetFields();\n\n                // 请求添加\n                const result = await reqAddRole(roleName);\n                if (result.status === 0) {\n                    message.success('添加成功');\n                    // this.getRoles();\n                    // 更新roles状态\n                    const role = result.data;\n                    // const roles = [...this.state.roles];\n                    // roles.push(role);\n                    // this.setState({\n                    //     roles\n                    // });\n                    // 更新roles状态,基于原本状态数据更新\n                    this.setState(state=>({\n                        roles:[this.state.roles,role]\n                    }))\n                }else{\n                    message.error('添加失败');\n                }\n                // 根据结果提示/更新列表显示\n            }\n        });\n    }\n\n    updateRole = async ()=>{\n        this.setState({isShowJurisdiction:false});\n        const authInfo = userStronge.getUser();\n        const role = this.state.role;\n        // 得到最新的menus\n        const menus = this.jurisdiction.current.getMenus();\n        role.menus = menus;\n        role.auth_time = new Date().getTime();\n        role.auth_name = authInfo.username;\n\n        // 请求更新\n        const result = await reqUpdateRole(role);\n        if (result.status===0) {\n            // 如果当前更新的是自己角色的权限,强制退出\n            if (role._id === memoryUtils.user.role_id) {\n                memoryUtils.user = {};\n                storageUtils.removeUser();\n                this.props.history.replace('/login');\n                message.success('当前用户角色权限修改了,重新登录');\n            }else{\n                message.success('设置角色权限成功');\n                this.setState({\n                    roles:[...this.state.roles]\n                });\n            }\n           \n        }else{\n            message.error('设置角色权限失败')\n        }\n    }\n\n    initColumn = ()=>{\n        this.columns = [\n            {\n                title:'角色名称',\n                dataIndex:'name'\n            },\n            {\n                title:'创建时间',\n                dataIndex:'create_time',\n                render:(create_time)=>formateDate(create_time)\n            },\n            {\n                title:'授权时间',\n                dataIndex:'auth_time',\n                render: formateDate\n            },\n            {\n                title:'授权人',\n                dataIndex:'auth_name'\n            },\n        ]\n    }\n\n    // 获取所有角色列表\n    getRoles = async ()=>{\n        const result = await reqRoles();\n        if (result.status === 0) {\n            const roles = result.data;\n            this.setState({\n                roles\n            })\n        }\n    }\n\n    onRow = (role)=>{\n        return {\n            onClick:event =>{       //点击行\n                console.log('row onClick',role);\n                this.setState({\n                    role\n                })\n            }\n        }\n    }\n\n    componentWillMount(){\n        this.initColumn();\n    }\n\n    componentDidMount(){\n        this.getRoles();\n    }\n\n    render() {\n        const {roles,role,isShowAdd,isShowJurisdiction} = this.state;\n        const title = (\n            <span>\n                <Button type='primary' onClick={()=>this.setState({isShowAdd:true})}>创建角色</Button> &nbsp;&nbsp;\n                <Button type='primary' onClick={()=>this.setState({isShowJurisdiction:true})} disabled={!role._id}>设置角色权限</Button>\n            </span>\n        )\n        \n        return (\n            <Card title={title}>\n                <Table\n                    rowKey='_id'\n                    // loading={loading}                     \n                    dataSource={roles} \n                    columns={this.columns}\n                    pagination={{defaultPageSize:PAGE_SIZE,showQuickJumper:true}}\n                    rowSelection={{\n                        type:'radio',\n                        selectedRowKeys:[role._id],\n                        onSelect:(role) =>{\n                            this.setState({\n                                role\n                            });\n                        }\n                        \n                    }}\n                    onRow={this.onRow}\n                />\n                <Modal\n                    title=\"添加角色\"\n                    visible={isShowAdd}\n                    onOk={this.addRole}\n                    onCancel={() => {\n                        this.setState({isShowAdd:false})\n                        this.form.resetFields();\n                    }}\n                >\n                    <AddForm setForm={(form)=>{this.form = form}}></AddForm>\n                </Modal>\n                <Modal\n                    title=\"设置权限\"\n                    visible={isShowJurisdiction}\n                    onOk={this.updateRole}\n                    onCancel={() => {\n                        this.setState({isShowJurisdiction:false});\n                    }}\n                >\n                    <JurisdictionForm ref={this.jurisdiction} role={role}></JurisdictionForm>\n                </Modal>\n            </Card>\n        );\n    }\n}\n\nexport default Role;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Form,Input,Select} from 'antd'\n\nconst Item = Form.Item;\nconst Option = Select.Option;\n/* 添加/修改用户的form组件 */\nclass UserForm extends Component {\n    static propTypes = {\n        setForm:PropTypes.func.isRequired,\n        roles:PropTypes.array.isRequired,\n        user:PropTypes.object\n    }\n    componentWillMount(){\n        this.props.setForm(this.props.form)\n    }\n    render() {\n        const {roles,user} = this.props;\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span:4},\n            wrapperCol: {span:15},\n        };\n        return (\n            <Form {...formItemLayout}>\n                <Item label='用户名称'>\n                    {\n                        getFieldDecorator('username',{\n                            initialValue:user.username,\n                            rules:[\n                                {required:true,message:'用户名称必须输入'}\n                            ]\n                        })(<Input placeholder='请输入用户名称'></Input>)\n                    }                    \n                </Item>\n                    {\n                        user._id ? null : (\n                            <Item label='密码'>\n                                {\n                                    getFieldDecorator('password',{\n                                        initialValue:user.password,\n                                        rules:[\n                                            {required:true,message:'密码必须输入'}\n                                        ]\n                                    })(<Input type='password' placeholder='请输入密码'></Input>)\n                                }                    \n                            </Item>\n                        )\n                    }\n                \n                <Item label='手机号'>\n                    {\n                        getFieldDecorator('phone',{\n                            initialValue:user.phone,\n                            rules:[\n                                {required:true,message:'手机号必须输入'}\n                            ]\n                        })(<Input type='number' placeholder='请输入手机号'></Input>)\n                    }                    \n                </Item>\n                <Item label='邮箱'>\n                    {\n                        getFieldDecorator('email',{\n                            initialValue:user.email,\n                            rules:[\n                                {required:true,message:'邮箱必须输入'}\n                            ]\n                        })(<Input placeholder='请输入邮箱'></Input>)\n                    }                    \n                </Item>\n                <Item label='角色'>\n                    {\n                        getFieldDecorator('role_id',{\n                            initialValue:user.role_id,\n                            rules:[\n                                {required:true,message:'角色必须选择'}\n                            ]\n                        })(\n                            <Select placeholder='请选择角色'>\n                                {\n                                    roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\n                                }\n                            </Select>\n                        )\n                    }                    \n                </Item>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create()(UserForm);","import React, { Component } from 'react';\nimport {Card,Button,Table,Modal,message} from 'antd'\nimport {formateDate} from '../../utils/dateUtils.js'\nimport LinkButton from '../../components/link-button/linkButton'\nimport UserForm from './user-form'\nimport {PAGE_SIZE} from '../../utils/constants'\nimport {reqUsers,reqAddOrUpdateUser, reqDeleteUser} from '../../api/index'\nimport memoryUtils from '../../utils/memoryUtils'\n\n/* 用户路由 */\nclass User extends Component {\n    state={\n        users:[],      //所有用户列表\n        roles:[],       //所有角色的列表\n        isShow:false,\n    }\n\n    initColumns = ()=>{\n        this.columns = [\n            {\n                title:'用户名',\n                dataIndex:'username'\n            },\n            {\n                title:'邮箱',\n                dataIndex:'email'\n            },\n            {\n                title:'电话',\n                dataIndex:'phone'\n            },\n            {\n                title:'注册时间',\n                dataIndex:'create_time',\n                render:formateDate\n            },\n            {\n                title:'所属角色',\n                dataIndex:'role_id',\n                render:(role_id)=>this.roleNames[role_id]\n            },\n            {\n                title:'操作',\n                render:(user) =>(\n                    <span>\n                        <LinkButton onClick={()=>this.showUpdate(user)}>修改</LinkButton>\n                        <LinkButton onClick={()=>this.deleteUser(user)}>删除</LinkButton>\n                    </span>\n                )\n            },\n        ]\n    }\n\n    /* 显示更新用户界面 */\n    showUpdate = (user)=>{\n        this.user = user;\n        this.setState({isShow:true});\n    }\n\n    /* 显示添加用户界面 */\n    showAdd = () =>{\n        this.user = null;\n        this.setState({isShow:true});\n    }\n\n    /* 根据roles的数组,生成包含所有角色名的对象(属性名用角色id值) */\n    initRoleNames = (roles)=>{\n        const roleNames = roles.reduce((pre,role)=>{\n            pre[role._id] = role.name;\n            return pre;\n        },{});\n        // 保存\n        this.roleNames = roleNames;\n    }\n    /* 添加/更新用户 */\n    addOrUpdateUser = ()=>{\n        this.form.validateFields(async (err,values)=>{\n            \n            if (!err) {\n                this.form.resetFields();\n                this.setState({isShow:false});\n                console.log(values);\n                if (this.user) {\n                    values._id = this.user._id;\n                }\n                const result = await reqAddOrUpdateUser(values);\n                if (result.status===0) {\n                    message.success(`${this.user?'修改':'添加'}用户成功`);\n                    this.getUsers();\n                }\n            }\n        });\n    }\n\n    /* 删除用户 */\n    deleteUser = (user)=>{\n        Modal.confirm({\n            title:`确认删除${user.username}`,\n            onOk: async ()=>{\n                const result = await reqDeleteUser(user._id);\n                if (result.status===0) {\n                    message.success('删除用户成功');\n                    this.getUsers();\n                }\n            }\n        });\n    }\n\n    /* 获取所有用户列表 */\n    getUsers = async ()=>{\n        const id = memoryUtils.user._id;\n        const result =  await reqUsers(id);\n        if (result.status === 0) {\n            const {users,roles} = result.data;\n            this.initRoleNames(roles);\n            this.setState({\n                users,\n                roles\n            });\n        }\n    }\n\n    componentWillMount(){\n        this.initColumns();\n    }\n\n    componentDidMount(){\n        this.getUsers();\n    }\n\n    render() {\n        const {users,roles,isShow} = this.state;\n        const user = this.user || {};\n        const title = <Button type='primary' onClick={()=>this.showAdd()}>添加用户</Button>\n        return (\n            <Card title={title}>\n                <Table\n                rowKey='_id'\n                // loading={loading}                     \n                dataSource={users} \n                columns={this.columns}\n                pagination={{defaultPageSize:PAGE_SIZE}}\n              />\n              <Modal\n                title={user._id?'修改用户':'添加用户'}\n                visible={isShow}\n                onOk={this.addOrUpdateUser}\n                onCancel={()=>{\n                    this.form.resetFields();\n                    this.setState({isShow:false})\n                }}\n              >\n                  <UserForm \n                    setForm={form => this.form = form}\n                    roles={roles}\n                    user={user}\n                  />\n              </Modal>\n            </Card>\n        );\n    }\n}\n\nexport default User;","import React, {Component} from 'react'\nimport {Card, Button} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的柱状图路由组件\n */\nexport default class Bar extends Component {\n\n  state = {\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\n  }\n\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store-1)\n        return pre\n      }, []),\n    }))\n  }\n\n  /*\n  返回柱状图的配置对象\n   */\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: '库存销量'\n      },\n      tooltip: {},\n      legend: {\n        data:['销量', '库存']\n      },\n      xAxis: {\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n      },\n      yAxis: {},\n      series: [{\n        name: '销量',\n        type: 'bar',\n        data: sales\n      }, {\n        name: '库存',\n        type: 'bar',\n        data: stores\n      }]\n    }\n  }\n\n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        <Card title={'2019-11-07'} extra={( <Button type='primary' onClick={this.update}>更新</Button>)}>\n          <ReactEcharts option={this.getOption(sales, stores)} />\n        </Card>\n\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Card, Button} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的折线图路由组件\n */\nexport default class Line extends Component {\n\n  state = {\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\n  }\n\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store-1)\n        return pre\n      }, []),\n    }))\n  }\n\n  /*\n  返回柱状图的配置对象\n   */\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: '折线'\n      },\n      tooltip: {},\n      legend: {\n        data:['销量', '库存']\n      },\n      xAxis: {\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n      },\n      yAxis: {},\n      series: [{\n        name: '销量',\n        type: 'line',\n        data: sales\n      }, {\n        name: '库存',\n        type: 'line',\n        data: stores\n      }]\n    }\n  }\n\n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        <Card>\n          <Button type='primary' onClick={this.update}>更新</Button>\n        </Card>\n\n        <Card title='折线图一'>\n          <ReactEcharts option={this.getOption(sales, stores)} />\n        </Card>\n\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Card} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的饼图路由组件\n */\nexport default class Pie extends Component {\n\n  getOption = () => {\n    return {\n      title : {\n        text: '某站点用户访问来源',\n        subtext: '纯属虚构',\n        x:'center'\n      },\n      tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\n      },\n      series : [\n        {\n          name: '访问来源',\n          type: 'pie',\n          radius : '55%',\n          center: ['50%', '60%'],\n          data:[\n            {value:335, name:'直接访问'},\n            {value:310, name:'邮件营销'},\n            {value:234, name:'联盟广告'},\n            {value:135, name:'视频广告'},\n            {value:1548, name:'搜索引擎'}\n          ],\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }\n      ]\n    };\n\n  }\n\n  getOption2 = () => {\n    return {\n      backgroundColor: '#2c343c',\n\n      title: {\n        text: '测试数据',\n        left: 'center',\n        top: 20,\n        textStyle: {\n          color: '#ccc'\n        }\n      },\n\n      tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n\n      visualMap: {\n        show: false,\n        min: 80,\n        max: 600,\n        inRange: {\n          colorLightness: [0, 1]\n        }\n      },\n      series : [\n        {\n          name:'访问来源',\n          type:'pie',\n          radius : '55%',\n          center: ['50%', '50%'],\n          data:[\n            {value:335, name:'直接访问'},\n            {value:310, name:'邮件营销'},\n            {value:274, name:'联盟广告'},\n            {value:235, name:'视频广告'},\n            {value:400, name:'搜索引擎'}\n          ].sort(function (a, b) { return a.value - b.value; }),\n          roseType: 'radius',\n          label: {\n            normal: {\n              textStyle: {\n                color: 'rgba(255, 255, 255, 0.3)'\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              lineStyle: {\n                color: 'rgba(255, 255, 255, 0.3)'\n              },\n              smooth: 0.2,\n              length: 10,\n              length2: 20\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#c23531',\n              shadowBlur: 200,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n\n          animationType: 'scale',\n          animationEasing: 'elasticOut',\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Card title='流量统计一'>\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\n        </Card>\n        <Card title='流量统计二'>\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\n        </Card>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\n\nimport './not-found.less'\n\n/*\n前台404页面\n */\nclass NotFound extends Component {\n\n  goHome = () => {\n    this.props.history.replace('/admin/home')\n  }\n\n  render() {\n    return (\n\n      <Row className='not-found'>\n        <Col span={12} className='left'></Col>\n        <Col span={12} className='right'>\n          <h1>404</h1>\n          <h2>抱歉，你访问的页面不存在</h2>\n          <div>\n            <Button type='primary' onClick={this.goHome}>\n              回到首页\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default NotFound","import React, { Component } from 'react'\nimport {Redirect,Route,Switch} from 'react-router-dom'\nimport memoryUtils from '../../utils/memoryUtils.js'\n// import {Route,Switch} from 'react-router-dom'\nimport {Layout} from 'antd'\nimport LeftNav from '../../components/left-nav/left-nav';\nimport Header from '../../components/header/header'\nimport Home from '../home/home'\nimport Category from '../category/category'\nimport Product from '../product/product'\nimport Role from '../role/role'\nimport User from '../user/user'\nimport Bar from '../charts/bar'\nimport Line from '../charts/line'\nimport Pie from '../charts/pie'\nimport NotFound from '../not-found/not-found'\nconst {Footer,Sider,Content} = Layout;\n\n\n/* 后台管理的路由组件 */\nclass Admin extends Component {\n    render() {\n        const user = memoryUtils.user;\n        console.log(user);\n        if(!user || !user._id){\n            return <Redirect to='/login'/>\n        }\n        return (\n            <Layout style={{minHeight:'100%'}}>\n                <Sider>\n                    <LeftNav></LeftNav>\n                </Sider>\n                <Layout>\n                    <Header>header</Header>\n                    <Content style={{margin:20,backgroundColor:'#fff'}}>\n                        <Switch>\n                            <Redirect exact={true} from='/' to='/admin/home'></Redirect>\n                            <Route path='/admin/home' component={Home}></Route>\n                            <Route path='/admin/category' component={Category}></Route>\n                            <Route path='/admin/product' component={Product}></Route>\n                            <Route path='/admin/role' component={Role}></Route>\n                            <Route path='/admin/user' component={User}></Route>\n                            <Route path='/admin/charts/bar' component={Bar}></Route>\n                            <Route path='/admin/charts/line' component={Line}></Route>\n                            <Route path='/admin/charts/pie' component={Pie}></Route>\n                            <Route component={NotFound}></Route>\n                        </Switch>\n                    </Content>\n                    <Footer style={{textAlign:'center',color:'#ccc'}}>推荐使用谷歌浏览器,可以获得更佳页面操作体验</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>          \n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/admin\" component={Admin}></Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport memoryUtils from './utils/memoryUtils'\nimport storageUtils from './utils/storageUtils'\n\n\n\nconst user = storageUtils.getUser();\nmemoryUtils.user=user;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}