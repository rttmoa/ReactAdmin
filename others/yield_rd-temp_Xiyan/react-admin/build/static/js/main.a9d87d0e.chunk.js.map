{"version":3,"sources":["pages/Login/images/logo.png","config/menuConfig.js","utils/storaUtil.js","components/Sider/index.jsx","utils/request.js","redux/action-types.js","redux/actions.js","components/Header/index.jsx","components/Content/index.jsx","components/Footer/index.jsx","components/BreadcrumbNav/index.jsx","pages/Home/index.jsx","api/category.js","components/Category/add-from.jsx","components/Category/update-from.jsx","pages/Category/index.jsx","api/product.js","components/Product/home.jsx","api/upload.js","components/Product/pictures-wall.jsx","components/Product/rich-text-editor.jsx","components/Product/add-update.jsx","components/Product/detail.jsx","pages/Product/index.jsx","api/role.js","components/Role/add-from.jsx","components/Role/auth-from.jsx","pages/Role/index.jsx","api/user.js","components/User/add-update.jsx","pages/User/index.jsx","utils/timeConversionUtil.js","pages/Charts/bar.jsx","pages/Charts/line.jsx","pages/Charts/pie.jsx","pages/Error/images/404.gif","pages/Error/index.jsx","pages/Admin/index.jsx","pages/Login/index.jsx","api/login.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["menuList","title","key","icon","HomeOutlined","isPublic","AppstoreOutlined","children","BarsOutlined","ToolOutlined","UserOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","userKey","getUser","Cookie","get","JSON","parse","Sider","Layout","SubMenu","Menu","SiderNav","props","getMenuNodes","pathname","location","map","item","hasAuth","find","child","indexOf","openKey","Item","to","menus","role","username","menuNodes","this","trigger","collapsible","collapsed","className","src","logo","alt","theme","mode","defaultOpenKeys","selectedKeys","Component","withRouter","service","axios","create","baseURL","process","timeout","interceptors","request","use","config","headers","error","Promise","reject","response","data","status","message","msg","RECEIVE_USER","LOGOUT_USER","doLogout","dispatch","remove","type","logoutUser","Header","HeaderNav","toggle","PubSub","publish","logout","Modal","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","history","replace","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","user","connect","state","Content","ContentNav","margin","minHeight","Footer","FooterNav","textAlign","BreadcrumbNav","pathArr","trim","split","arr","index","Home","list","parentId","url","method","add","update","info","id","AddFrom","save","stringify","selectCategoryList","layout","initialValues","onFinish","label","name","Option","value","category","_id","rules","required","placeholder","wrapperCol","offset","span","handleCancel","htmlType","UpdateFrom","getFromDate","onChange","event","categoryId","categoryName","target","Column","Table","Category","categoryList","parentName","loading","addIsModalVisible","updateIsModalVisible","obj","setState","init","then","res","handFindChild","back","showAdd","showUpdate","ArrowRightOutlined","marginLeft","extra","SaveOutlined","width","height","bordered","pagination","pageSize","showQuickJumper","showSizeChanger","pageSizeOptions","dataSource","rowKey","dataIndex","render","record","size","footer","destroyOnClose","visible","onCancel","pageNum","search","productType","productValue","updateStatus","ProductHome","productList","total","setTimeout","productValueNode","handUpdateStatus","product","success","defaultValue","ref","c","push","defaultPageSize","align","price","upload","PicturesWall","fileList","beforeUpload","file","fd","FormData","append","onRemove","newFileList","filter","onPreview","a","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","window","open","document","write","outerHTML","imgs","length","img","action","accept","listType","RichTextEditor","editorState","submitContent","htmlContent","toHTML","handleEditorChange","preview","previewWindow","close","buildPreviewHtml","uploadHandler","ContentUtils","insertMedias","detail","BraftEditor","createEditorState","extendControls","text","component","showUploadList","PictureOutlined","onSave","contentStyle","border","ProductUpdate","options","isLeaf","imgList","pCategoryId","qs","slice","console","log","loadData","selectedOptions","targetOption","subscribe","_","undefined","titleMenu","ArrowLeftOutlined","labelCol","desc","hidden","TextArea","autoSize","minRows","maxRows","validator","callback","Error","addonAfter","ProductDetail","pCategoryName","marginRight","dangerouslySetInnerHTML","__html","Product","path","ProductAddUpdate","roleName","AuthFrom","checkedKeys","auth","rowRole","auth_time","Date","getTime","auth_name","role_id","warning","onCheck","disabled","checkable","checked","defaultExpandAll","treeData","Role","roleList","authIsModalVisible","selectRow","onRow","rowSelection","onSelect","selectedRowKeys","del","Select","AddUpdate","password","phone","email","Password","pattern","User","userList","isModalVisible","titleName","users","roles","userId","create_time","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Bar","sales","stores","sale","store","getOption","tooltip","legend","xAxis","yAxis","series","option","Line","Pie","subtext","left","orient","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","handleGoMain","class","marginTop","color","fontSize","shape","Admin","token","unsubscribe","exact","from","Login","doLogin","remember","min","max","prefix","whitespace","LockOutlined","time","set","expires","setUser","receiveUser","App","initUser","combineReducers","preState","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"qcAAe,G,OAAA,IAA0B,kC,yGCqE1BA,EApDE,CACb,CACIC,MAAO,eACPC,IAAK,QACLC,KAAM,cAACC,EAAA,EAAD,IACNC,UAAU,GACX,CACCJ,MAAO,eACPC,IAAK,YACLC,KAAM,cAACG,EAAA,EAAD,IACNC,SAAU,CAEN,CACIN,MAAO,2BACPC,IAAK,YACLC,KAAM,cAACK,EAAA,EAAD,KAEV,CACIP,MAAO,2BACPC,IAAK,WACLC,KAAM,cAACM,EAAA,EAAD,OAGf,CACCR,MAAO,2BACPC,IAAK,QACLC,KAAM,cAACO,EAAA,EAAD,KACP,CACCT,MAAO,2BACPC,IAAK,QACLC,KAAM,cAACQ,EAAA,EAAD,KACP,CACCV,MAAO,2BACPC,IAAK,UACLC,KAAM,cAACS,EAAA,EAAD,IACNL,SAAU,CACN,CACIN,MAAO,qBACPC,IAAK,cACLC,KAAM,cAACU,EAAA,EAAD,KAEV,CACIZ,MAAO,qBACPC,IAAK,eACLC,KAAM,cAACW,EAAA,EAAD,KACP,CACCb,MAAO,eACPC,IAAK,cACLC,KAAM,cAACY,EAAA,EAAD,Q,kBC/DhBC,EAAU,OAUT,SAASC,IACZ,GAAIC,IAAOC,IAAIH,GACX,OAAOI,KAAKC,MAAMH,IAAOC,IAAIH,ICLrC,IAAOM,EAASC,IAATD,MACAE,EAAWC,IAAXD,QAEDE,E,kDA+DF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA3DVC,aAAe,SAAC5B,GAEZ,IAAM6B,EAAW,EAAKF,MAAMG,SAASD,SAErC,OAAO7B,EAAS+B,KAAI,SAAAC,GAChB,GAAI,EAAKC,QAAQD,GACb,OAAKA,EAAKzB,UAUQyB,EAAKzB,SAAS2B,MAAK,SAAAC,GAAK,OAAoC,IAAhCN,EAASO,QAAQD,EAAMjC,UAG7D,EAAKmC,QAAUL,EAAK9B,KAGpB,cAACsB,EAAD,CAAwBrB,KAAM6B,EAAK7B,KAAMF,MAAO+B,EAAK/B,MAArD,SAEQ,EAAK2B,aAAaI,EAAKzB,WAFjByB,EAAK9B,MAdnB,cAAC,IAAKoC,KAAN,CAA0BnC,KAAM6B,EAAK7B,KAArC,SACI,cAAC,IAAD,CAAMoC,GAAIP,EAAK9B,IAAf,SACK8B,EAAK/B,SAFE+B,EAAK9B,SAkDtB,EAxBnB+B,QAAU,SAACD,GAEP,IAAO3B,EAAiB2B,EAAjB3B,SAAUH,EAAO8B,EAAP9B,IAEXsC,EAAQvB,IAAUwB,KAAKD,MAO7B,QAAiB,UANAvB,IAAUyB,WAMCrC,IAAoC,IAAxBmC,EAAMJ,QAAQlC,OAE3C8B,EAAKzB,YAEHyB,EAAKzB,SAAS2B,MAAK,SAAAC,GAAK,OAAkC,IAA9BK,EAAMJ,QAAQD,EAAMjC,SAW7D,EAAKyC,UAAY,EAAKf,aAAa5B,GAFpB,E,0CAKnB,WAEI,IAAI6B,EAAWe,KAAKjB,MAAMG,SAASD,SAE7BQ,EAAUO,KAAKP,QAMrB,OAHqC,IAAjCR,EAASO,QAAQ,cACjBP,EAAW,YAGX,eAAC,EAAD,CAAOgB,QAAS,KAAMC,aAAW,EAACC,UAAWH,KAAKjB,MAAMoB,UAAxD,UACI,eAAC,IAAD,CAAMR,GAAG,IAAIS,UAAU,OAAvB,UACI,qBAAKA,UAAU,MAAMC,IAAKC,EAAMC,IAAKD,IACrC,sBAAMF,UAAU,OAAhB,yCAEJ,cAAC,IAAD,CAAMI,MAAM,OAAOC,KAAK,SAASC,gBAAiB,CAACjB,GAAUkB,aAAc,CAAC1B,GAA5E,SAEQe,KAAKD,mB,GAtFNa,aA+FRC,cAAW/B,G,yGCxGpBgC,EAAUC,IAAMC,OAAO,CACzBC,QAASC,qBACTC,QAAS,MAGbL,EAAQM,aAAaC,QAAQC,KAAI,SAAAC,GAG7B,OADAA,EAAOC,QAAQ,kBAAoB,MAC5BD,KACR,SAAAE,GAEC,OAAOC,QAAQC,OAAOF,MAI1BX,EAAQM,aAAaQ,SAASN,KAC1B,SAAAM,GAII,OAH6B,IAAzBA,EAASC,KAAKC,QACdC,IAAQN,MAAMG,EAASC,KAAKG,KAEzBJ,EAASC,QAEpB,SAAAJ,GAEI,OAAIA,EAAMG,SAASE,OACRJ,QAAQC,OAAOF,MAMnBX,QC/BR,IAAMmB,EAAe,eAEfC,EAAc,cCuBdC,EAAW,SAACN,GACrB,OAAO,SAAAO,GJTP9D,IAAO+D,OAAOjE,GIWVgE,EAlBkB,SAACP,GAAD,MAAW,CAACS,KAAMJ,EAAaL,QAkBxCU,CAAWV,MCtBrBW,EAAU7D,IAAV6D,OAEDC,E,4MACFC,OAAS,WAELC,IAAOC,QAAQ,aAAc,EAAK7D,MAAMoB,Y,EAE5C0C,OAAS,WACLC,IAAMC,QAAQ,CACVxF,KAAM,cAACyF,EAAA,EAAD,IACNC,QAAS,6CACTC,OAAQ,eACRC,WAAY,eACZC,KAAM,WACF,EAAKrE,MAAMoD,SAAS,IACpB,EAAKpD,MAAMsE,QAAQC,QAAQ,c,4CAKvC,WACI,OACI,eAAC,EAAD,CAAQlD,UAAU,yBAAyBmD,MAAO,CAACC,QAAS,GAA5D,UACKC,IAAMC,cAAc1D,KAAKjB,MAAMoB,UAAYwD,IAAqBC,IAAkB,CAC/ExD,UAAW,UACXyD,QAAS7D,KAAK0C,SAElB,qBAAKtC,UAAU,SAAf,SACI,4DACSJ,KAAKjB,MAAM+E,KAAKhE,SACrB,cAAC,IAAD,CAAQ+D,QAAS7D,KAAK6C,OAAQP,KAAK,OAAnC,sC,GA5BA1B,aAsCTmD,gBACX,SAAAC,GAAK,MAAK,CAACF,KAAME,EAAMF,QACvB,CAAC3B,YAFU4B,CAGblD,YAAW4B,IClDNwB,GAAWtF,IAAXsF,QAkBQC,G,4JAhBX,WACI,OACI,cAACD,GAAD,CACI7D,UAAU,yBACVmD,MAAO,CACHY,OAAQ,OACRX,QAAS,GACTY,UAAW,KALnB,SAQKpE,KAAKjB,MAAMpB,e,GAXHiD,aCAlByD,GAAU1F,IAAV0F,OAUQC,G,4JAPX,WACI,OACI,cAACD,GAAD,CAAQd,MAAO,CAACgB,UAAW,UAA3B,wD,GAHY3D,a,UCDlB4D,G,4JACF,WAEI,IAAMC,EAAUzE,KAAKjB,MAAMG,SAASD,SAASyF,OAAOC,MAAM,KAC1D,OACI,cAAC,KAAD,CAAYpB,MAAO,CAACY,OAAQ,sBAA5B,SAEQM,EAAQtF,KAAI,SAACyF,EAAKC,GACd,OACI,eAAC,KAAWnF,KAAZ,WAA8BmF,EAAQ,EAAI,IAAM,GAAID,IAA9BC,Y,GATtBjE,aAkBbC,eAAW2D,ICPXM,I,mKAXX,WACI,OACI,qBAAK1E,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,4F,GAJGQ,c,2DCAZ,SAASmE,GAAKC,GACjB,OAAO3D,EAAQ,CACX4D,IAAI,kCAAD,OAAoCD,GACvCE,OAAQ,QAKT,SAASC,GAAItD,GAChB,OAAOR,EAAQ,CACX4D,IAAK,uBACLC,OAAQ,OACRrD,SAKD,SAASuD,GAAOvD,GACnB,OAAOR,EAAQ,CACX4D,IAAK,0BACLC,OAAQ,OACRrD,SAKD,SAASwD,GAAKC,GACjB,OAAOjE,EAAQ,CACX4D,IAAK,oCAAsCK,EAC3CJ,OAAQ,Q,kCCwBDK,I,mNA7CXC,KAAO,SAAC3D,GAEJA,EAAOrD,KAAKC,MAAMD,KAAKiH,UAAU5D,GAAMyB,QAAQ,QAAS,iBACxD,EAAKvE,MAAMoG,IAAItD,I,4CAGnB,WACI,MAAqC7B,KAAKjB,MAArC2G,EAAL,EAAKA,mBAAoBV,EAAzB,EAAyBA,SACzB,OACI,eAAC,KAAD,CACIW,OAAO,WACPC,cAAe,CAACZ,SAAUA,GAC1Ba,SAAU7F,KAAKwF,KAHnB,UAKI,cAAC,KAAK9F,KAAN,CACIoG,MAAM,2BACNC,KAAK,WAFT,SAII,eAAC,KAAD,WACI,cAAC,KAAOC,OAAR,CAAeC,MAAO,EAAtB,sCAEIP,EAAmBvG,KAAI,SAAA+G,GAAQ,OAAI,cAAC,KAAOF,OAAR,CAAkCC,MAAOC,EAASC,IAAlD,SAAwDD,EAASH,MAA7CG,EAASC,aAI5E,cAAC,KAAKzG,KAAN,CACIoG,MAAM,2BACNC,KAAK,OACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,+CAHtC,SAKI,cAAC,KAAD,CAAOuE,YAAY,iDAEvB,eAAC,KAAK5G,KAAN,CAAW6G,WAAY,CAACC,OAAQ,EAAGC,KAAM,IAAzC,UACI,cAAC,IAAD,CAAQ5C,QAAS7D,KAAKjB,MAAM2H,aAA5B,0BAGA,cAAC,IAAD,CAAQpE,KAAK,UAAUqE,SAAS,SAAhC,oC,GA1CE/F,cC4BPgG,G,4JAvBX,WACI,MAAoB5G,KAAKjB,MAAMmH,UAAY,GAApCH,EAAP,EAAOA,KAAMI,EAAb,EAAaA,IACNU,EAAe7G,KAAKjB,MAApB8H,YAEP,OACI,cAAC,KAAD,CACIlB,OAAO,WACPC,cAAe,CAACG,KAAMA,GAF1B,SAII,cAAC,KAAKrG,KAAN,CACIoG,MAAM,2BACNC,KAAK,OACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,gDAHtC,SAMI,cAAC,KAAD,CAAO+E,SAAU,SAAAC,GAAK,OAAIF,EAAY,CAACG,WAAYb,EAAKc,aAAcF,EAAMG,OAAOjB,SAC5EK,YAAY,uD,GAtBd1F,aCIlBuG,GAAUC,KAAVD,OAqJQE,G,4MAjJXrD,MAAQ,CACJsD,aAAc,GAEd5B,mBAAoB,GACpBV,SAAU,EACVuC,WAAY,GACZC,SAAS,EACTC,mBAAmB,EACnBC,sBAAsB,EAEtB7F,KAAM,I,EASVgF,YAAc,SAACc,GACX,EAAKC,SAAS,CAAC/F,KAAM8F,K,EAMzBE,KAAO,WACH,EAAKD,SAAS,CAACJ,SAAS,IACxBzC,GAAK,EAAKf,MAAMgB,UAAU8C,MAAK,SAAAC,GAC3B,EAAKH,SAAS,CAACN,aAAcS,EAAIlG,KAAM2F,SAAS,IAEpB,IAAxB,EAAKxD,MAAMgB,UACX,EAAK4C,SAAS,CAAClC,mBAAoBqC,EAAIlG,W,EAKnDmG,cAAgB,SAAC9B,GACb,OAAO,WACH,EAAK0B,SAAS,CAAC5C,SAAUkB,EAASC,IAAKoB,WAAYrB,EAASH,OAAO,WAC/D,EAAK8B,Y,EAKjBI,KAAO,WACH,EAAKL,SAAS,CAAC5C,SAAU,IAAI,WACzB,EAAK6C,W,EAGbK,QAAU,WACN,EAAKN,SAAS,CAACH,mBAAmB,K,EAEtCU,WAAa,SAACjC,GACV,EAAKA,SAAWA,EAEhB,EAAK0B,SAAS,CAACF,sBAAsB,EAAM7F,KAAM,CAACmF,WAAYd,EAASC,IAAKc,aAAcf,EAASH,S,EAGvGZ,IAAM,SAACtD,GACHsD,GAAItD,GAAMiG,MAAK,SAAAC,GACQ,IAAfA,EAAIjG,SACJ,EAAK4E,eACL,EAAKmB,Y,EAKjBzC,OAAS,WACgC,KAAjC,EAAKpB,MAAMnC,KAAKoF,aAIpB7B,GAAO,EAAKpB,MAAMnC,MAAMiG,MAAK,SAAAC,GACN,IAAfA,EAAIjG,SACJ,EAAK4E,eACL,EAAKmB,WANT9F,IAAQN,MAAM,qD,EAWtBiF,aAAe,WACX,EAAKkB,SAAS,CAACH,mBAAmB,EAAOC,sBAAsB,K,uDApEnE,WACI1H,KAAK6H,S,oBAsET,WAAU,IAAD,OACL,EAQI7H,KAAKgE,MAPLsD,EADJ,EACIA,aACA5B,EAFJ,EAEIA,mBACAV,EAHJ,EAGIA,SACAwC,EAJJ,EAIIA,QACAD,EALJ,EAKIA,WACAE,EANJ,EAMIA,kBACAC,EAPJ,EAOIA,qBAEExB,EAAWlG,KAAKkG,UAAY,GAClC,OACI,gCACI,cAAC,KAAD,CAAM7I,MAAoB,IAAb2H,EAAiB,uCAC1B,wEAEI,cAACoD,GAAA,EAAD,CAAoB7E,MAAO,CAAC8E,WAAY,MACxC,cAAC,IAAD,CAAQxE,QAAS7D,KAAKiI,KAAM3F,KAAK,OAAjC,SAAyCiF,OAG3Ce,MAAO,cAAC,IAAD,CAAQ/K,KAAM,cAACgL,GAAA,EAAD,IAAiBjG,KAAK,UAAUuB,QAAS7D,KAAKkI,QAA5D,0BACP3E,MAAO,CAACiF,MAAO,OAAQC,OAAQ,QARrC,SASI,eAAC,KAAD,CAAOC,UAAQ,EAACC,WAAY,CACxBC,SAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,CAAC,EAAG,GAAI,GAAI,KAC9BvB,QAASA,EAASwB,WAAY1B,EAAc2B,OAAO,MALtD,UAMI,cAAC9B,GAAD,CAAQ9J,MAAM,2BAAO6L,UAAU,QAAW,OAC1C,cAAC/B,GAAD,CACIqB,MAAM,QACNnL,MAAM,eAEN8L,OAAQ,SAACjD,EAAUkD,GAAX,OACJ,eAAC,KAAD,CAAOC,KAAK,SAAZ,UACI,cAAC,IAAD,CAAQxF,QAAS,kBAAM,EAAKsE,WAAWjC,IAAW5D,KAAK,OAAvD,sCAEiB,IAAb0C,EAAiB,cAAC,IAAD,CAAQ1C,KAAK,OACLuB,QAAS,EAAKmE,cAAc9B,GADpC,4CACgE,UANzF,eAchB,cAAC,IAAD,CAAOoD,OAAQ,KAAMC,gBAAc,EAAClM,MAAM,eAAKmM,QAAS/B,EAAmBgC,SAAUzJ,KAAK0G,aAA1F,SACI,cAAC,GAAD,CAAS1B,SAAUA,EAAUU,mBAAoBA,EAAoBP,IAAKnF,KAAKmF,IACtEuB,aAAc1G,KAAK0G,iBAEhC,cAAC,IAAD,CAAO6C,gBAAc,EAAClM,MAAM,eAAKmM,QAAS9B,EAAsBtE,KAAMpD,KAAKoF,OACpEqE,SAAUzJ,KAAK0G,aADtB,SAEI,cAAC,GAAD,CAAYG,YAAa7G,KAAK6G,YAAaX,SAAUA,a,GA3IlDtF,aCPhB,SAASmE,GAAK2E,EAASd,GAC1B,OAAOvH,EAAQ,CACX4D,IAAI,gCAAD,OAAkCyE,EAAlC,qBAAsDd,GACzD1D,OAAQ,QAKT,SAASyE,GAAOD,EAASd,EAAUgB,EAAaC,GACnD,OAAOxI,EAAQ,CACX4D,IAAI,kCAAD,OAAoCyE,EAApC,qBAAwDd,EAAxD,YAAoEgB,EAApE,YAAmFC,GACtF3E,OAAQ,QAKT,SAAS4E,GAAajI,GACzB,OAAOR,EAAQ,CACX4D,IAAK,+BACLC,OAAQ,OACRrD,SClBR,IAAOsF,GAAUC,KAAVD,OAuIQ4C,G,4MApIX/F,MAAQ,CACJwD,SAAS,EACTwC,YAAa,GACbN,QAAS,EACTd,SAAU,EACVqB,MAAO,EACPL,YAAa,cACbC,aAAc,I,EAQlBhC,KAAO,WACH,EAAKD,SAAS,CAACJ,SAAS,IACxB0C,YAAW,WACP,MAA4B,EAAKlG,MACjCe,GADA,EAAO2E,QAAP,EAAgBd,UACQd,MAAK,SAAAC,GACzB,EAAKH,SAAS,CAACoC,YAAajC,EAAIlG,KAAKkD,KAAMkF,MAAOlC,EAAIlG,KAAKoI,QAC3D,EAAKrC,SAAS,CAACJ,SAAS,SAE7B,M,EAIPmC,OAAS,WACLO,YAAW,WACP,EAAKtC,SAAS,CAACJ,SAAS,EAAMqC,aAAc,EAAKM,iBAAiBnG,MAAMiC,QAAQ,WAC5E,MAAuD,EAAKjC,MAArD4E,EAAP,EAAOA,SACPe,GADA,EAAiBD,QACDd,EADhB,EAA0BgB,YAA1B,EAAuCC,cACc/B,MAAK,SAAAC,GACtD,EAAKH,SAAS,CAACoC,YAAajC,EAAIlG,KAAKkD,KAAMkF,MAAOlC,EAAIlG,KAAKoI,QAC3D,EAAKrC,SAAS,CAACJ,SAAS,YAGjC,M,EAGP4C,iBAAmB,SAACC,GAChB,IAAKvI,EAAeuI,EAAfvI,OAAQqE,EAAOkE,EAAPlE,IACb,OAAO,WAEY,IAAXrE,EACAA,EAAS,EACS,IAAXA,IACPA,EAAS,GAEbgI,GAAa,CAAC,UAAa3D,EAAK,OAAUrE,IAASgG,MAAK,SAAAC,GACjC,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,4BAChB,EAAKzC,a,uDAzCrB,WACI7H,KAAK6H,S,oBA8CT,WAAU,IAAD,OACL,EAA2E7H,KAAKgE,MAAzEwD,EAAP,EAAOA,QAASwC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,MAAOJ,EAApC,EAAoCA,aAAcjB,EAAlD,EAAkDA,SAAUgB,EAA5D,EAA4DA,YACtDvM,EACF,iCACK,eAAC,KAAD,CAAQkN,aAAcX,EAAarG,MAAO,CAACiF,MAAO,KAC1C1B,SAAU,SAAAb,GAAK,OAAI,EAAK2B,SAAS,CAACgC,YAAa3D,KADvD,UAEG,cAAC,KAAOD,OAAR,CAAeC,MAAM,cAArB,4CACA,cAAC,KAAOD,OAAR,CAAeC,MAAM,cAArB,+CAEH,cAAC,KAAD,CAAOuE,IAAK,SAAAC,GAAC,OAAI,EAAKN,iBAAmBM,GAAGnE,YAAa,iCAClD/C,MAAO,CAACiF,MAAO,IAAKrE,OAAQ,YACpC,cAAC,IAAD,CAAQN,QAAS7D,KAAK2J,OAAQrH,KAAK,UAAnC,6BAGR,OACI,8BACI,cAAC,KAAD,CAAMjF,MAAOA,EACPiL,MAAO,cAAC,IAAD,CAAQ/K,KAAM,cAACgL,GAAA,EAAD,IACN1E,QAAS,kBAAM,EAAK9E,MAAMsE,QAAQqH,KAAK,0CACvCpI,KAAK,UAFb,sCAGPiB,MAAO,CAACiF,MAAO,OAAQC,OAAQ,QAJrC,SAKI,eAAC,KAAD,CAAOC,UAAQ,EAACC,WAAY,CACxBgC,gBAAiB/B,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,CAAC,EAAG,GAAI,GAAI,IAC7BkB,QAIAnD,SAAU,SAAC4C,EAASd,GAChB,EAAKhB,SAAS,CAAC8B,YAAU,WACA,KAAjBG,EACA,EAAKF,SAEL,EAAK9B,YAIlBL,QAASA,EAASwB,WAAYgB,EAAaf,OAAO,MAlBrD,UAmBI,cAAC,GAAD,CAAQ2B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,QAAW,QAC3D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,QAAW,QAC3D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,eAAK6L,UAAU,QACtCC,OAAQ,SAAC0B,GAAD,MAAW,SAAMA,IADyB,SAE1D,cAAC,GAAD,CAAQD,MAAO,SAAUpC,MAAO,IAAKnL,MAAM,eAAK6L,UAAU,SAClDC,OAAQ,SAACrH,EAAQuI,GACb,OACI,iCACJ,cAAC,IAAD,CAAQ/H,KAAK,UACLuB,QAAS,EAAKuG,iBAAiBC,GADvC,SAC6D,IAAXvI,EAAe,eAAO,iBACxE,+BAAkB,IAAXA,EAAe,eAAO,4BAN8B,UAUvE,cAAC,GAAD,CACI8I,MAAO,SACPpC,MAAM,QACNnL,MAAM,eAEN8L,OAAQ,SAACjD,EAAUkD,GAAX,OACJ,eAAC,KAAD,CAAOC,KAAK,SAAZ,UACI,cAAC,IAAD,CAAQ/G,KAAK,OACLuB,QAAS,kBAAM,EAAK9E,MAAMsE,QAAQC,QAAQ,kBAAmB,CAAC4C,cADtE,0BAEA,cAAC,IAAD,CAAQ5D,KAAK,OACLuB,QAAS,kBAAM,EAAK9E,MAAMsE,QAAQqH,KAAK,wCAA+B,CAACxE,cAD/E,+BALJ,qB,GApHNtF,a,4FCJnB,SAASkK,GAAOjJ,GACnB,OAAOR,EAAQ,CACX4D,IAAK,qBACLC,OAAQ,OACRrD,S,IC+FOkJ,G,kDAzFX,WAAYhM,GAAQ,IAAD,uBACf,cAAMA,IALViF,MAAQ,CACJgH,SAAU,IAGK,EAkBnBC,aAAe,SAACC,GAEZ,KADiC,eAAdA,EAAK5I,MAAuC,cAAd4I,EAAK5I,MAAsC,cAAd4I,EAAK5I,MAAsC,cAAd4I,EAAK5I,MAG5G,OADAP,IAAQN,MAAM,8EACP,EAGX,KADeyJ,EAAK7B,KAAO,KAAO,KAAO,GAGrC,OADAtH,IAAQN,MAAM,iCACP,EAEX,IAAI0J,EAAK,IAAIC,SAWb,OAVAD,EAAGE,OAAO,QAASH,GACnBJ,GAAOK,GAAIrD,MAAK,SAAAC,GACO,IAAfA,EAAIjG,QACJ,EAAK8F,SAAS,CAACoD,SAAS,CAAEjD,EAAIlG,MAAP,oBAAgB,EAAKmC,MAAMgH,aAAY,WAE1DrI,IAAOC,QAAQ,SAAU,EAAKoB,MAAMgH,iBAKzC,GAxCQ,EA4CnBM,SAAW,SAACJ,GD7CT,IAAmBrJ,KC+CR,CAACkE,KAAMmF,EAAKnF,MD9CnB1E,EAAQ,CACX4D,IAAK,qBACLC,OAAQ,OACRrD,UC2C6BiG,MAAK,SAAAC,GAC9B,GAAmB,IAAfA,EAAIjG,OAAc,CAClB,IAEMyJ,EAFa,EAAKvH,MAAjBgH,SAEsBQ,QAAO,SAAApM,GAAI,OAAIA,EAAK2G,OAASmF,EAAKnF,QAE/D,EAAK6B,SAAS,CAACoD,SAAUO,SApDlB,EAyDnBE,UAzDmB,yCAyDP,WAAMP,GAAN,kBAAAQ,EAAA,yDACJrL,EAAM6K,EAAKjG,IADP,gCAGQ,IAAIvD,SAAQ,SAAAiK,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcZ,EAAKa,eAC1BH,EAAOI,OAAS,kBAAML,EAAQC,EAAOK,YANrC,OAGJ5L,EAHI,eASF6L,EAAQ,IAAIC,OACZ9L,IAAMA,EACM+L,OAAOC,KAAKhM,GACpBiM,SAASC,MAAML,EAAMM,WAZvB,2CAzDO,sDAGf,IAAIxB,EAAW,GACRyB,EAAQ,EAAK1N,MAAb0N,KAJQ,OAKXA,GAAQA,EAAKC,OAAS,IACtB1B,EAAWyB,EAAKtN,KAAI,SAAAwN,GAChB,MAAO,CACH1H,IAAK0H,MAGb,EAAK3I,MAAQ,CACTgH,aAZO,E,0CAwEnB,WACI,OACI,cAAC,KAAD,CACI4B,OAAO,GACPC,OAAO,UACPC,SAAS,eACT9B,SAAUhL,KAAKgE,MAAMgH,SACrBC,aAAcjL,KAAKiL,aACnBQ,UAAWzL,KAAKyL,UAChBH,SAAUtL,KAAKsL,SAPnB,SASKtL,KAAKgE,MAAMgH,SAAS0B,OAAS,GAAK,iB,GAxFxB9L,a,yCC4KZmM,I,mNAtKX/I,MAAQ,CACJgJ,YAAa,M,EAajBC,c,wBAAgB,6BAAAvB,EAAA,sDAENwB,EAAc,EAAKlJ,MAAMgJ,YAAYG,SAC3CxK,IAAOC,QAAQ,YAAasK,GAHhB,2C,EAOhBE,mBAAqB,SAACJ,GAClB,EAAKpF,SAAS,CAACoF,gBAAc,WACzBrK,IAAOC,QAAQ,YAAa,EAAKoB,MAAMgJ,YAAYG,c,EAK3DE,QAAU,WAEFjB,OAAOkB,eACPlB,OAAOkB,cAAcC,QAGzBnB,OAAOkB,cAAgBlB,OAAOC,OAC9BD,OAAOkB,cAAchB,SAASC,MAAM,EAAKiB,oBACzCpB,OAAOkB,cAAchB,SAASiB,S,EAKlCE,cAAgB,SAACvC,GAEb,KADiC,eAAdA,EAAK5I,MAAuC,cAAd4I,EAAK5I,MAAsC,cAAd4I,EAAK5I,MAAsC,cAAd4I,EAAK5I,MAG5G,OADAP,IAAQN,MAAM,8EACP,EAGX,KADeyJ,EAAK7B,KAAO,KAAO,KAAO,GAGrC,OADAtH,IAAQN,MAAM,iCACP,EAEX,IAAI0J,EAAK,IAAIC,SAcb,OAbAD,EAAGE,OAAO,QAASH,GACnBJ,GAAOK,GAAIrD,MAAK,SAAAC,GACO,IAAfA,EAAIjG,QAEJ,EAAK8F,SAAS,CACVoF,YAAaU,gBAAaC,aAAa,EAAK3J,MAAMgJ,YAAa,CAAC,CAC5D1K,KAAM,QACN2C,IAAK8C,EAAIlG,KAAKoD,aAMvB,G,gGA9DX,6BAAAyG,EAAA,sDAEUwB,EAAclN,KAAKjB,MAAM6O,OAE/B5N,KAAK4H,SAAS,CACVoF,YAAaa,KAAYC,kBAAkBZ,KALnD,gD,oFAiEA,WACI,MAAM,k5CAAN,OAiD2BlN,KAAKgE,MAAMgJ,YAAYG,SAjDlD,kD,oBAuDJ,WAEI,IAAMY,EAAiB,CACnB,CACIzQ,IAAK,gBACLgF,KAAM,SACN0L,KAAM,eACNnK,QAAS7D,KAAKqN,SAElB,CACI/P,IAAK,gBACLgF,KAAM,YACN2L,UACI,cAAC,KAAD,CACIpB,OAAO,UACPqB,gBAAgB,EAChBjD,aAAcjL,KAAKyN,cAHvB,SAMI,wBAAQnL,KAAK,SAASlC,UAAU,oCAAoC,aAAW,2BAA/E,SACI,cAAC+N,GAAA,EAAD,UAObnB,EAAehN,KAAKgE,MAApBgJ,YACP,OACI,cAAC,KAAD,CACIe,eAAgBA,EAChB9H,MAAO+G,EACPlG,SAAU9G,KAAKoN,mBACfgB,OAAQpO,KAAKiN,cACboB,aAAc,CAAC5F,OAAQ,IAAK6F,OAAQ,qBACpChI,YAAa,uC,GAjKA1F,cCsMd2N,G,kDAlMX,aAAe,IAAD,8BACV,gBAPJvK,MAAQ,CACJwK,QAAS,GACT/B,KAAM,GACNxJ,QAAS,IAGC,EAMd4E,KAAO,WACH9C,GAAK,GAAG+C,MAAK,SAAAC,GACT,GAAmB,IAAfA,EAAIjG,OAAc,CAElB,IAAM0M,EAAUzG,EAAIlG,KAAK1C,KAAI,SAAA+G,GACzB,MAAO,CACHD,MAAOC,EAASC,IAChBL,MAAOI,EAASH,KAChB0I,QAAQ,MAIhB,EAAK7G,SAAS,CAAC4G,iBAlBb,EAmCd3I,SAAW,SAAChE,GACR,MAAwB,EAAKmC,MAAtByI,EAAP,EAAOA,KAAMxJ,EAAb,EAAaA,QAEPyL,EAAU,GAChBjC,EAAKtN,KAAI,SAAAwN,GACL,OAAO+B,EAAQhE,KAAKiC,EAAI1H,QAE5BpD,EAAK4K,KAAOiC,EACZ7M,EAAK+L,OAAS3K,EACdpB,EAAKmF,WAAanF,EAAKmF,WAAW,GAClCnF,EAAK8M,YAAc9M,EAAKmF,WAAW,GACnC,IAAO2C,EAAU,EAAK5K,MAAMG,SAArByK,OAEO,iBADEiF,KAAGnQ,MAAMkL,EAAOkF,MAAM,IAA/BxR,MAEH8H,GAAItD,GAAMiG,MAAK,SAAAC,GACX+G,QAAQC,IAAIhH,GACO,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,4BAChB,EAAKvL,MAAMsE,QAAQC,QAAQ,gBAInC8B,GAAOvD,GAAMiG,MAAK,SAAAC,GACK,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,4BAChB,EAAKvL,MAAMsE,QAAQC,QAAQ,iBA5D7B,EAkEd0L,SAAW,SAACC,GACR,IAAMC,EAAeD,EAAgBA,EAAgBvC,OAAS,GAC9DwC,EAAa1H,SAAU,EAEvB0C,YAAW,WACPgF,EAAa1H,SAAU,EACvBzC,GAAKmK,EAAajJ,OAAO6B,MAAK,SAAAC,GAE1B,IAAMyG,EAAUzG,EAAIlG,KAAK1C,KAAI,SAAA+G,GACrB,MAAO,CACHD,MAAOC,EAASC,IAChBL,MAAOI,EAASH,KAChB0I,QAAQ,MAKpBS,EAAavR,SAAW6Q,EAExB,EAAK5G,SAAS,CACV4G,QAAQ,aAAK,EAAKxK,MAAMwK,gBAGjC,MAvFH,EAAK3G,OAFK,E,qDAuBd,WAAqB,IAAD,OAEhBlF,IAAOwM,UAAU,UAAU,SAACC,EAAG3C,GAC3B,EAAK7E,SAAS,CAAC6E,YAGnB9J,IAAOwM,UAAU,aAAa,SAACC,EAAGnM,GAC9B,EAAK2E,SAAS,CAAC3E,iB,oBA8DvB,WAAU,IAAD,OACE0G,EAAU3J,KAAKjB,MAAMG,SAArByK,OACAtM,EAASuR,KAAGnQ,MAAMkL,EAAOkF,MAAM,IAA/BxR,MACF6I,GAAYlG,KAAKjB,MAAMG,SAAS8E,OAAS,IAAzCkC,cAEYmJ,IAAbnJ,IACAA,EAAW,IAEf,IAAMc,EAAa,GACnBA,EAAW0D,KAAKxE,EAASyI,aACzB3H,EAAW0D,KAAKxE,EAASc,YACzB,IAAMsI,EACF,iCACI,cAAC,IAAD,CAAQzL,QAAS,kBAAM,EAAK9E,MAAMsE,QAAQC,QAAQ,aAAahB,KAAK,OAApE,SACI,cAACiN,GAAA,EAAD,MAEHlS,EAJL,kBAOJ,OACI,cAAC,KAAD,CAAMA,MAAOiS,EAAb,SACI,eAAC,KAAD,CACIvJ,KAAK,QACLyJ,SAAU,CAAC/I,KAAM,GACjBF,WAAY,CAACE,KAAM,GACnBb,cAAe,CACXO,IAAKD,EAASC,IACdJ,KAAMG,EAASH,KACf0J,KAAMvJ,EAASuJ,KACf5E,MAAO3E,EAAS2E,MAChB7D,WAAYA,GAEhBnB,SAAU7F,KAAK6F,SAXnB,UAaI,cAAC,KAAKnG,KAAN,CACIgQ,QAAM,EACN3J,KAAK,MAFT,SAII,cAAC,KAAD,MAGJ,cAAC,KAAKrG,KAAN,CACIoG,MAAM,2BACNC,KAAK,OACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,sDAHtC,SAKI,cAAC,KAAD,CAAOuE,YAAa,iDAGxB,cAAC,KAAK5G,KAAN,CACIoG,MAAM,2BACNC,KAAK,OACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,sDAHtC,SAKI,cAAC,KAAM4N,SAAP,CAAgBC,SAAU,CAACC,QAAS,EAAGC,QAAS,OAEpD,cAAC,KAAKpQ,KAAN,CACIoG,MAAM,2BACNC,KAAK,QACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,qDAC9B,CACIgO,UAAW,SAACX,EAAGnJ,EAAO+J,GAClB,OAAI/J,GAAS,EACFvE,QAAQC,OAAO,IAAIsO,MAAM,gDAE7BvO,QAAQiK,aAT/B,SAcI,cAAC,KAAD,CAAOrJ,KAAK,SAAS4N,WAAW,aAEpC,cAAC,KAAKxQ,KAAN,CACIoG,MAAM,2BACNC,KAAK,aACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,sDAHtC,SAKI,cAAC,KAAD,CAAUyM,QAASxO,KAAKgE,MAAMwK,QAASQ,SAAUhP,KAAKgP,aAE1D,cAAC,KAAKtP,KAAN,CACIoG,MAAM,2BACNC,KAAK,OAFT,SAII,cAAC,GAAD,CAAc0G,KAAMvG,EAASuG,SAEjC,cAAC,KAAK/M,KAAN,CAAW6G,WAAY,CAACE,KAAM,IACnBX,MAAM,2BACNC,KAAK,SAFhB,SAII,cAAC,GAAD,CAAgB6H,OAAQ1H,EAAS0H,WAErC,cAAC,KAAKlO,KAAN,CAAW6G,WAAY,CAACC,OAAQ,EAAGC,KAAM,GAAzC,SACI,cAAC,IAAD,CAAQnE,KAAK,UAAUqE,SAAS,SAAhC,SACKtJ,e,GAjMDuD,a,UCiFbuP,I,yDA7EX,WAAYpR,GAAQ,IAAD,uBACf,cAAMA,IAPViF,MAAQ,CACJiD,aAAc,GACdmJ,cAAe,IAMf,MAAkC,EAAKrR,MAAMG,SAAS8E,MAAMkC,SAArDc,EAAP,EAAOA,WAAY2H,EAAnB,EAAmBA,YAFJ,MAIK,MAAhBA,EACAtJ,GAAK2B,GAAYc,MAAK,SAAAC,GAClB,EAAKH,SAAS,CAACX,aAAcc,EAAIlG,KAAKkE,WAG1CV,GAAK2B,GAAYc,MAAK,SAAAC,GAClB,EAAKH,SAAS,CAACX,aAAcc,EAAIlG,KAAKkE,UAE1CV,GAAKsJ,GAAa7G,MAAK,SAAAC,GACnB,EAAKH,SAAS,CAACwI,cAAerI,EAAIlG,KAAKkE,WAbhC,E,0CAkBnB,WAAU,IAAD,OACEG,EAAYlG,KAAKjB,MAAMG,SAAS8E,MAAhCkC,SACP,EAAsClG,KAAKgE,MAApCiD,EAAP,EAAOA,aAAcmJ,EAArB,EAAqBA,cACf/S,EACF,iCACI,cAAC,IAAD,CAAQwG,QAAS,kBAAM,EAAK9E,MAAMsE,QAAQC,QAAQ,aAAahB,KAAK,OAApE,SACI,cAACiN,GAAA,EAAD,MAFR,8BAOJ,OACI,cAAC,KAAD,CAAMlS,MAAOA,EAAO+C,UAAU,iBAA9B,SACI,eAAC,KAAD,CACIsI,UAAQ,EADZ,UAEI,eAAC,KAAKhJ,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCACA,+BAAO8F,EAASH,UAEpB,eAAC,KAAKrG,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCACA,+BAAO8F,EAASuJ,UAEpB,eAAC,KAAK/P,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCACA,+BAAO8F,EAAS2E,WAEpB,eAAC,KAAKnL,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCACA,iCAAO6G,EAAP,IAAsBmJ,EAAgB,UAASA,EAAgB,SAEnE,eAAC,KAAK1Q,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCAEI8F,EAASuG,KAAKtN,KAAI,SAAAwN,GACd,OACI,+BAAgB,qBAAKpM,IAAKoM,EACLpJ,MAAO,CACHiF,MAAO,IACPC,OAAQ,IACR4H,YAAa,GACb/B,OAAQ,qBAEZjO,IAAG,uCAAkCsM,MAP/CA,SAY3B,eAAC,KAAKjN,KAAN,WACI,sBAAMU,UAAU,OAAhB,uCACA,sBAAMkQ,wBAAyB,CAACC,OAAQrK,EAAS0H,sB,GA3E7ChN,cCWb4P,G,4JAXX,WACI,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,qBAAqBxC,UAAWyC,KAC5C,cAAC,IAAD,CAAOD,KAAK,kBAAkBxC,UAAWkC,KACzC,cAAC,IAAD,CAAOM,KAAK,WAAWxC,UAAWlE,Y,GAN5BnJ,aCFf,SAASmE,KACZ,OAAO1D,EAAQ,CACX4D,IAAK,oBACLC,OAAQ,QAKT,SAASC,GAAItD,GAChB,OAAOR,EAAQ,CACX4D,IAAK,mBACLC,OAAQ,OACRrD,S,IC0BO0D,G,4MApCXC,KAAO,SAAC3D,GACJsD,GAAI,CAACwL,SAAU9O,EAAKkE,OAAO+B,MAAK,SAAAC,GACT,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,4BAChB,EAAKvL,MAAM2H,eACX,EAAK3H,MAAM8I,Y,4CAKvB,WACI,OACI,eAAC,KAAD,CACIlC,OAAO,WACPE,SAAU7F,KAAKwF,KAFnB,UAII,cAAC,KAAK9F,KAAN,CACIoG,MAAM,2BACNC,KAAK,OACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,+CAHtC,SAKI,cAAC,KAAD,CAAOuE,YAAY,iDAEvB,eAAC,KAAK5G,KAAN,WACI,cAAC,IAAD,CAAQmE,QAAS7D,KAAKjB,MAAM2H,aAA5B,0BAGA,cAAC,IAAD,CAAQpE,KAAK,UAAUqE,SAAS,SAAhC,oC,GA5BE/F,a,UCIhBgQ,G,kDAOF,WAAY7R,GAAQ,IAAD,8BACf,cAAMA,IAPViF,MAAQ,CACJ6M,YAAa,GACbF,SAAU,IAIK,EAOnBG,KAAO,WACH,IAAO3K,EAAO,EAAKpH,MAAMgS,QAAlB5K,IACDvG,EAAQ,EAAKoE,MAAM6M,YACnBG,GAAY,IAAIC,MAAOC,UACvBC,EAAY,EAAKpS,MAAM+E,KAAKhE,UFPnC,SAAgB+B,GACnB,OAAOR,EAAQ,CACX4D,IAAK,sBACLC,OAAQ,OACRrD,UEKAuD,CADa,CAACe,MAAKvG,QAAOoR,YAAWG,cACxBrJ,MAAK,SAAAC,GACK,IAAfA,EAAIjG,SAEAqE,IAAQ,EAAKpH,MAAM+E,KAAKsN,SACxBrP,IAAQsP,QAAQ,kFAChB,EAAKtS,MAAMoD,SAAS,IACpB,EAAKpD,MAAMsE,QAAQC,QAAQ,YAE3BvB,IAAQuI,QAAQ,4BAEhB,EAAKvL,MAAM2H,eAEX,EAAK3H,MAAM8I,OAEX,EAAK9I,MAAMgS,QAAQnR,MAAQA,QA3BxB,EAiCnB0R,QAAU,SAACT,GACP,EAAKjJ,SAAS,CAACiJ,iBAhCf,EAAK7M,MAAM6M,YAAc9R,EAAMgS,QAAQnR,MACvC,EAAKoE,MAAM2M,SAAW5R,EAAMgS,QAAQhL,KAHrB,E,0CAqCnB,WACI,MAAgC/F,KAAKgE,MAA9B6M,EAAP,EAAOA,YAAaF,EAApB,EAAoBA,SACpB,OACI,eAAC,KAAD,CACI9K,SAAU7F,KAAK8Q,KACflL,cAAe,CAAC,KAAQ+K,GAF5B,UAII,cAAC,KAAKjR,KAAN,CACIoG,MAAM,2BACNC,KAAK,OAFT,SAII,cAAC,KAAD,CAAOwL,UAAQ,EAACjL,YAAY,iDAEhC,cAAC,KAAK5G,KAAN,UACI,cAAC,KAAD,CACI8R,WAAS,EACTX,YAAa,CAACY,QAASZ,GACvBa,kBAAgB,EAChBC,SAAUvU,EACVkU,QAAStR,KAAKsR,YAGtB,eAAC,KAAK5R,KAAN,WACI,cAAC,IAAD,CAAQmE,QAAS7D,KAAKjB,MAAM2H,aAA5B,0BAGA,cAAC,IAAD,CAAQpE,KAAK,UAAUqE,SAAS,SAAhC,oC,GAtEG/F,aA+ERmD,gBACX,SAAAC,GAAK,MAAK,CAACF,KAAME,EAAMF,QACvB,CAAC3B,YAFU4B,CAGblD,YAAW+P,KCpFNzJ,GAAUC,KAAVD,OAyEQyK,G,4MAtEX5N,MAAQ,CACJwD,SAAS,EACTqK,SAAU,GAEVd,QAAS,GACTtJ,mBAAmB,EACnBqK,oBAAoB,G,EAExBjK,KAAO,WACH9C,KAAO+C,MAAK,SAAAC,GACR,EAAKH,SAAS,CAACiK,SAAU9J,EAAIlG,W,EAKrCkQ,UAAY,SAAChB,GACT,MAAO,CACHlN,QAAS,SAAAkD,GACL,EAAKa,SAAS,CAACmJ,e,EAU3BrK,aAAe,WACX,EAAKkB,SAAS,CAACH,mBAAmB,EAAOqK,oBAAoB,K,uDANjE,WACI9R,KAAK6H,S,oBAQT,WAAU,IAAD,OACL,EAA4E7H,KAAKgE,MAA1EwD,EAAP,EAAOA,QAASqK,EAAhB,EAAgBA,SAAUd,EAA1B,EAA0BA,QAAStJ,EAAnC,EAAmCA,kBAAmBqK,EAAtD,EAAsDA,mBAChDzU,EACF,iCACI,cAAC,IAAD,CAAQiF,KAAK,UAAUuB,QAAS,kBAAM,EAAK+D,SAAS,CAACH,mBAAmB,KAAxE,sCACA,cAAC,IAAD,CAAQ8J,UAAWR,EAAQ5K,IAAKtC,QAAS,kBAAM,EAAK+D,SAAS,CAACkK,oBAAoB,KAAlF,qDAGR,OACI,gCACI,cAAC,KAAD,CAAMzU,MAAOA,EAAOkG,MAAO,CAACiF,MAAO,OAAQC,OAAQ,QAAnD,SACI,eAAC,KAAD,CAAOuJ,MAAOhS,KAAK+R,UAAWE,aAAc,CAAC3P,KAAM,QAAQ4P,SAAS,SAACnB,GAAD,OAAW,EAAKnJ,SAAS,CAACmJ,aAAWoB,gBAAiB,CAACpB,EAAQ5K,MAC5HuC,UAAQ,EACRC,WAAY,CACRC,SAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,CAAC,EAAG,GAAI,GAAI,KAC9BvB,QAASA,EAASwB,WAAY6I,EAAU5I,OAAO,MAPzD,UAQI,cAAC,GAAD,CAAQ2B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,QAAW,QAC3D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,eAAkB,eAClE,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,aAAgB,aAChE,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,qBAAM6L,UAAU,aAAgB,kBAGvE,cAAC,IAAD,CAAOI,OAAQ,KAAMC,gBAAc,EAAClM,MAAM,2BAAOmM,QAAS/B,EACnDgC,SAAUzJ,KAAK0G,aADtB,SAEI,cAAC,GAAD,CAASmB,KAAM7H,KAAK6H,KAAMnB,aAAc1G,KAAK0G,iBAEjD,cAAC,IAAD,CAAO4C,OAAQ,KAAMC,gBAAc,EAAClM,MAAM,uCAASmM,QAASsI,EACrDrI,SAAUzJ,KAAK0G,aADtB,SAEI,cAAC,GAAD,CAAUmB,KAAM7H,KAAK6H,KAAMkJ,QAASA,EAASrK,aAAc1G,KAAK0G,wB,GAhEjE9F,aCLZ,SAASmE,KACZ,OAAO1D,EAAQ,CACX4D,IAAK,oBACLC,OAAQ,QAKT,SAASC,GAAItD,GAChB,OAAOR,EAAQ,CACX4D,IAAK,mBACLC,OAAQ,OACRrD,SAKD,SAASuD,GAAOvD,GACnB,OAAOR,EAAQ,CACX4D,IAAK,sBACLC,OAAQ,OACRrD,SAKD,SAASuQ,GAAIvQ,GAChB,OAAOR,EAAQ,CACX4D,IAAK,sBACLC,OAAQ,OACRrD,SC7BR,IAAOmE,GAAUqM,KAAVrM,OA8GQsM,G,4MA3GXzM,SAAW,SAAChE,GACiB,6BAArB,EAAK9C,MAAM1B,MACX8H,GAAItD,GAAMiG,MAAK,SAAAC,GACQ,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,wCAChB,EAAKvL,MAAM2H,eACX,EAAK3H,MAAM8I,WAInBzC,GAAOvD,GAAMiG,MAAK,SAAAC,GACK,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,wCAChB,EAAKvL,MAAM2H,eACX,EAAK3H,MAAM8I,Y,4CAM3B,WACI,MAA8C7H,KAAKjB,MAA5C1B,EAAP,EAAOA,MAAOwU,EAAd,EAAcA,SAAUnL,EAAxB,EAAwBA,aAAc5C,EAAtC,EAAsCA,KACtC,OACI,eAAC,KAAD,CACIiC,KAAK,QACLyJ,SAAU,CAAC/I,KAAM,GACjBF,WAAY,CAACE,KAAM,IACnBb,cAAe,CACXO,IAAKrC,EAAKqC,IACVrG,SAAUgE,EAAKhE,SACfyS,SAAUzO,EAAKyO,SACfC,MAAO1O,EAAK0O,MACZC,MAAO3O,EAAK2O,MACZrB,QAAStN,EAAKsN,SAElBvL,SAAU7F,KAAK6F,SAZnB,UAcI,cAAC,KAAKnG,KAAN,CACIgQ,QAAM,EACN3J,KAAK,MAFT,SAII,cAAC,KAAD,MAEJ,cAAC,KAAKrG,KAAN,CACIoG,MAAM,qBACNC,KAAK,WACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,+CAHtC,SAKI,cAAC,KAAD,MAGJ,cAAC,KAAKrC,KAAN,CACIgQ,OAAkB,6BAAVrS,EACRyI,MAAM,eACNC,KAAK,WACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,yCAJtC,SAMI,cAAC,KAAM2Q,SAAP,MAEJ,cAAC,KAAKhT,KAAN,CACIoG,MAAM,qBACNC,KAAK,QACLK,MAAO,CACH,CAACC,UAAU,EAAMtE,QAAS,8CAC1B,CAAC4Q,QAAS,oBAAqB5Q,QAAS,qDALhD,SAQI,cAAC,KAAD,MAEJ,cAAC,KAAKrC,KAAN,CACIoG,MAAM,eACNC,KAAK,QACLK,MAAO,CACH,CAACC,UAAU,EAAMtE,QAAS,wCAC1B,CAAC4Q,QAAS,oEAAqE5Q,QAAS,qDALhG,SAQI,cAAC,KAAD,MAEJ,cAAC,KAAKrC,KAAN,CACIoG,MAAM,eACNC,KAAK,UACLK,MAAO,CAAC,CAACC,UAAU,EAAMtE,QAAS,yCAHtC,SAKI,cAAC,KAAD,CAAQuE,YAAY,iCAApB,SAEQuL,EAAS1S,KAAI,SAAAU,GACT,OACI,cAACmG,GAAD,CAAuBC,MAAOpG,EAAKsG,IAAnC,SAAyCtG,EAAKkG,MAAjClG,EAAKsG,YAMtC,eAAC,KAAKzG,KAAN,CAAW6G,WAAY,CAACC,OAAQ,EAAGC,KAAM,IAAzC,UACI,cAAC,IAAD,CAAQ5C,QAAS6C,EAAjB,0BAGA,cAAC,IAAD,CAAQpE,KAAK,UAAUqE,SAAS,SAAhC,SACKtJ,c,GApGDuD,aCCjBuG,GAAUC,KAAVD,OACApE,GAAWD,IAAXC,QA0GQ6P,G,4MAvGX5O,MAAQ,CACJwD,SAAS,EACTqL,SAAU,GACVhB,SAAU,GACViB,gBAAgB,EAChBC,UAAW,GAEXjP,KAAM,I,EAOV+D,KAAO,WACH9C,KAAO+C,MAAK,SAAAC,GACR,IAAMiL,EAAQjL,EAAIlG,KAAKmR,MAAM7T,KAAI,SAAA2E,GAS7B,OARAiE,EAAIlG,KAAKoR,MAAM9T,KAAI,SAAAU,GAEXA,EAAKsG,MAAQrC,EAAKsN,UAClBtN,EAAK6M,SAAW9Q,EAAKkG,SAKtBjC,KAEX,EAAK8D,SAAS,CAACiL,SAAUG,EAAOnB,SAAU9J,EAAIlG,KAAKoR,Y,EAI3Db,IAAM,SAAC9M,GACH,OAAO,WACHvC,GAAQ,CACJxF,KAAM,cAACyF,EAAA,EAAD,IACNC,QAAS,uCACTG,KAAM,WACFgP,GAAI,CAACc,OAAQ5N,IAAKwC,MAAK,SAAAC,GACA,IAAfA,EAAIjG,SACJC,IAAQuI,QAAQ,4BAChB,EAAKzC,gB,EAQ7BnB,aAAe,WACX,EAAKkB,SAAS,CAACkL,gBAAgB,K,uDAvCnC,WACI9S,KAAK6H,S,oBAyCT,WAAU,IAAD,OACCxK,EACF,+BACI,cAAC,IAAD,CAAQiF,KAAK,UACLuB,QAAS,kBAAM,EAAK+D,SAAS,CAACkL,gBAAgB,EAAMC,UAAW,8BADvE,wCAIR,EAAuE/S,KAAKgE,MAArEwD,EAAP,EAAOA,QAASqL,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,eAAgBC,EAA1C,EAA0CA,UAAWlB,EAArD,EAAqDA,SAAU/N,EAA/D,EAA+DA,KAC/D,OACI,gCACI,cAAC,KAAD,CAAMzG,MAAOA,EAAOkG,MAAO,CAACiF,MAAO,OAAQC,OAAQ,QAAnD,SACI,eAAC,KAAD,CAAOC,UAAQ,EAACC,WAAY,CACxBgC,gBAAiB,EACjB9B,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,CAAC,EAAG,GAAI,GAAI,KAC9BvB,QAASA,EAASwB,WAAY6J,EAAU5J,OAAO,MALlD,UAMI,cAAC,GAAD,CAAQ2B,MAAO,SAAUvN,MAAM,qBAAM6L,UAAU,YAAe,YAC9D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,eAAK6L,UAAU,SAAY,SAC1D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,eAAK6L,UAAU,SAAY,SAC1D,cAAC,GAAD,CAAQ0B,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,cACxCC,OAAQ,SAACgK,EAAarP,GAAd,OCpFbsP,EDoF+CD,GCnFtEC,EAAM,IAAInC,KAAKmC,IACAC,cAMD,KALFD,EAAIE,WAAa,GAKD,IAJjBF,EAAIG,UAI0B,IAH9BH,EAAII,WAGuC,IAFzCJ,EAAIK,aAEoD,IADxDL,EAAIM,aAPd,IAAoBN,IDmF+D,eAElE,cAAC,GAAD,CAAQxI,MAAO,SAAUvN,MAAM,2BAAO6L,UAAU,YAAe,YAC/D,cAAC,GAAD,CACI0B,MAAO,SACPpC,MAAM,QACNnL,MAAM,eAEN8L,OAAQ,SAACrF,EAAMsF,GAAP,OACJ,eAAC,KAAD,CAAOC,KAAK,SAAZ,UACI,cAAC,IAAD,CAAQ/G,KAAK,OAAOuB,QAAS,kBAAM,EAAK+D,SAAS,CAC7CkL,gBAAgB,EAChBC,UAAW,2BACXjP,UAHJ,0BAKA,cAAC,IAAD,CAAQD,QAAS,EAAKuO,IAAItO,EAAKqC,KAAM7D,KAAK,OAA1C,+BARJ,eAchB,cAAC,IAAD,CAAOiH,gBAAc,EAAClM,MAAO0V,EAAWzJ,OAAQ,KAAME,QAASsJ,EACxDrJ,SAAUzJ,KAAK0G,aADtB,SAEI,cAAC,GAAD,CAAW5C,KAAMA,EAAM+D,KAAM7H,KAAK6H,KAAMxK,MAAO0V,EAAWrM,aAAc1G,KAAK0G,aAClEmL,SAAUA,a,GAjGtBjR,a,UE6CJ+S,G,4MAlDX3P,MAAQ,CACJ4P,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BC,OAAQ,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,K,EAEhCzO,OAAS,WACL,EAAKwC,UAAS,SAAC5D,GAAD,MAAY,CACtB4P,MAAO5P,EAAM4P,MAAMzU,KAAI,SAAA2U,GAAI,OAAIA,EAAO,KACtCD,OAAQ7P,EAAM6P,OAAO1U,KAAI,SAAA4U,GAAK,OAAIA,EAAQ,U,EAGlDC,UAAY,WACR,MAAwB,EAAKhQ,MAC7B,MAAO,CACH3G,MAAO,CACH2Q,KAAM,oCAEViG,QAAS,GACTC,OAAQ,CACJrS,KAAM,CAAC,eAAM,iBAEjBsS,MAAO,CACHtS,KAAM,CAAC,eAAM,qBAAO,qBAAO,eAAM,qBAAO,iBAE5CuS,MAAO,GACPC,OAAQ,CAAC,CACLtO,KAAM,eACNzD,KAAM,MACNT,KAhBR,EAAO+R,OAiBA,CACC7N,KAAM,eACNzD,KAAM,MACNT,KApBR,EAAcgS,W,4CAyBlB,WACI,OACI,gCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQvR,KAAK,UAAUuB,QAAS7D,KAAKoF,OAArC,4BAEJ,cAAC,KAAD,CAAM/H,MAAM,2BAAZ,SACI,cAAC,KAAD,CAAciX,OAAQtU,KAAKgU,YAAazQ,MAAO,CAACkF,OAAQ,gB,GA5C1D7H,aCmDH2T,G,4MAlDXvQ,MAAQ,CACJ4P,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BC,OAAQ,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,K,EAEhCzO,OAAS,WACL,EAAKwC,UAAS,SAAC5D,GAAD,MAAY,CACtB4P,MAAO5P,EAAM4P,MAAMzU,KAAI,SAAA2U,GAAI,OAAIA,EAAO,KACtCD,OAAQ7P,EAAM6P,OAAO1U,KAAI,SAAA4U,GAAK,OAAIA,EAAQ,U,EAGlDC,UAAY,WACR,MAAwB,EAAKhQ,MAC7B,MAAO,CACH3G,MAAO,CACH2Q,KAAM,oCAEViG,QAAS,GACTC,OAAQ,CACJrS,KAAM,CAAC,eAAM,iBAEjBsS,MAAO,CACHtS,KAAM,CAAC,eAAM,qBAAO,qBAAO,eAAM,qBAAO,iBAE5CuS,MAAO,GACPC,OAAQ,CAAC,CACLtO,KAAM,eACNzD,KAAM,OACNT,KAhBR,EAAO+R,OAiBA,CACC7N,KAAM,eACNzD,KAAM,OACNT,KApBR,EAAcgS,W,4CAyBlB,WACI,OACI,gCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQvR,KAAK,UAAUuB,QAAS7D,KAAKoF,OAArC,4BAEJ,cAAC,KAAD,CAAM/H,MAAM,2BAAZ,SACI,cAAC,KAAD,CAAciX,OAAQtU,KAAKgU,YAAazQ,MAAO,CAACkF,OAAQ,gB,GA5CzD7H,aCgEJ4T,G,4MA/DXxQ,MAAQ,CACJ4P,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BC,OAAQ,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,K,EAEhCzO,OAAS,WACL,EAAKwC,UAAS,SAAC5D,GAAD,MAAY,CACtB4P,MAAO5P,EAAM4P,MAAMzU,KAAI,SAAA2U,GAAI,OAAIA,EAAO,KACtCD,OAAQ7P,EAAM6P,OAAO1U,KAAI,SAAA4U,GAAK,OAAIA,EAAQ,U,EAGlDC,UAAY,WACR,MAAwB,EAAKhQ,MAA7B,EAAO4P,MAAP,EAAcC,OACd,MAAO,CACHxW,MAAO,CACH2Q,KAAM,yDACNyG,QAAS,2BACTC,KAAM,UAEVT,QAAS,CACLhU,QAAS,QAEbiU,OAAQ,CACJS,OAAQ,WACRD,KAAM,QAEVL,OAAQ,CACJ,CACItO,KAAM,2BACNzD,KAAM,MACNsS,OAAQ,MACR/S,KAAM,CACF,CAACoE,MAAO,KAAMF,KAAM,4BACpB,CAACE,MAAO,IAAKF,KAAM,4BACnB,CAACE,MAAO,IAAKF,KAAM,4BACnB,CAACE,MAAO,IAAKF,KAAM,4BACnB,CAACE,MAAO,IAAKF,KAAM,6BAEvB8O,SAAU,CACNC,UAAW,CACPC,WAAY,GACZC,cAAe,EACfC,YAAa,2B,4CAQrC,WACI,OACI,gCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQ3S,KAAK,UAAUuB,QAAS7D,KAAKoF,OAArC,4BAEJ,cAAC,KAAD,CAAM/H,MAAM,2BAAZ,SACI,cAAC,KAAD,CAAciX,OAAQtU,KAAKgU,YAAazQ,MAAO,CAACkF,OAAQ,gB,GAzD1D7H,a,mBCJH,OAA0B,gCCsC1BqP,I,mNAhCXiF,aAAe,WACX,EAAKnW,MAAMsE,QAAQC,QAAQ,M,4CAG/B,WACI,OACI,8BACI,qBAAK6R,MAAM,gBAAX,SACI,eAAC,KAAD,WAEI,cAAC,KAAD,CAAK1O,KAAM,GAAX,SACI,qBAAKpG,IAAKoB,GAAOlB,IAAI,MAAMH,UAAU,gBAEzC,cAAC,KAAD,CAAKqG,KAAM,GAAX,SACI,sBAAKlD,MAAO,CAAC8E,WAAY,QAAS+M,UAAW,QAA7C,UACI,oBAAIhV,UAAU,aAAd,mBACA,oBAAImD,MAAO,CAAC8R,MAAO,WAAnB,yDACA,qBAAK9R,MAAO,CAAC8R,MAAO,UAAWC,SAAU,QAAzC,+IAIA,cAAC,IAAD,CAAQ/R,MAAO,CAAC6R,UAAW,QAAS9S,KAAK,UAAUiT,MAAM,QACjD1R,QAAS7D,KAAKkV,aADtB,0C,GAtBZtU,cCqEL4U,G,4MArDXxR,MAAQ,CACJ7D,WAAW,G,uDAIf,WAAqB,IAAD,OAEhBH,KAAKyV,MAAQ9S,IAAOwM,UAAU,aAAa,SAACC,EAAGjP,GAC3C,EAAKyH,SAAS,CAACzH,mB,kCAKvB,WACIwC,IAAO+S,YAAY1V,KAAKyV,S,oBAG5B,WACI,OAAKpX,IAID,mCACI,eAAC,IAAD,CAAQiH,GAAG,wCAAX,UACI,cAAC,EAAD,CAAUnF,UAAWH,KAAKgE,MAAM7D,YAChC,eAAC,IAAD,CAAQC,UAAU,cAAlB,UACI,cAAC,GAAD,CAAWD,UAAWH,KAAKgE,MAAM7D,YACjC,cAAC,GAAD,IACA,cAAC,GAAD,UAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAUwV,OAAK,EAACC,KAAK,IAAIjW,GAAG,UAC5B,cAAC,IAAD,CAAO8Q,KAAK,QAAQxC,UAAWnJ,KAC/B,cAAC,IAAD,CAAO2L,KAAK,WAAWxC,UAAWuC,KAClC,cAAC,IAAD,CAAOC,KAAK,YAAYxC,UAAW5G,KACnC,cAAC,IAAD,CAAOoJ,KAAK,QAAQxC,UAAW2D,KAC/B,cAAC,IAAD,CAAOnB,KAAK,QAAQxC,UAAW2E,KAC/B,cAAC,IAAD,CAAOnC,KAAK,cAAckF,OAAK,EAAC1H,UAAW0F,KAC3C,cAAC,IAAD,CAAOlD,KAAK,eAAekF,OAAK,EAAC1H,UAAWsG,KAC5C,cAAC,IAAD,CAAO9D,KAAK,cAAckF,OAAK,EAAC1H,UAAWuG,KAE3C,cAAC,IAAD,CAAOvG,UAAWgC,UAG1B,cAAC,GAAD,YA1BL,cAAC,IAAD,CAAUtQ,GAAG,e,GApBZiB,a,mBCXdiV,G,4MACFhQ,SAAW,SAAC/B,GACR,EAAK/E,MAAM+W,QAAQhS,I,4CAGvB,WAEI,OAAI9D,KAAKjB,MAAM+E,KACJ,cAAC,IAAD,CAAUnE,GAAG,MAGpB,sBAAKS,UAAU,QAAf,UACI,yBAAQA,UAAU,eAAlB,UACI,qBAAKG,IAAI,OAAOF,IAAKC,IACrB,gGAEJ,0BAASF,UAAU,gBAAnB,UACI,0DACA,8BACI,eAAC,KAAD,CACI2F,KAAK,eACL3F,UAAU,aACVwF,cAAe,CAACmQ,UAAU,GAC1BlQ,SAAU7F,KAAK6F,SAJnB,UAMI,cAAC,KAAKnG,KAAN,CACIqG,KAAK,WACLK,MAAO,CACH,CAACC,UAAU,EAAMtE,QAAS,+BAC1B,CAACiU,IAAK,EAAGjU,QAAS,yCAClB,CAACkU,IAAK,GAAIlU,QAAS,0CACnB,CAAC4Q,QAAS,qBAAsB5Q,QAAS,yFANjD,SASI,cAAC,KAAD,CAAOmU,OAAQ,cAACpY,EAAA,EAAD,CAAcsC,UAAU,wBAAyBkG,YAAY,eAEhF,cAAC,KAAK5G,KAAN,CACIqG,KAAK,WACLK,MAAO,CACH,CAACC,UAAU,EAAM8P,YAAY,EAAOpU,QAAS,+BAC7C,CAACiU,IAAK,EAAGjU,QAAS,yCAClB,CAACkU,IAAK,GAAIlU,QAAS,0CACnB,CAAC4Q,QAAS,qBAAsB5Q,QAAS,yFANjD,SASI,cAAC,KAAD,CACImU,OAAQ,cAACE,GAAA,EAAD,CAAchW,UAAU,wBAChCkC,KAAK,WACLgE,YAAY,eAGpB,cAAC,KAAK5G,KAAN,UACI,cAAC,IAAD,CAAQ4C,KAAK,UAAUqE,SAAS,SAASvG,UAAU,oBAAnD,2C,GApDZQ,aAgELmD,gBACX,SAAAC,GAAK,MAAK,CACNF,KAAME,EAAMF,QAEhB,CAACgS,QhC5DkB,SAAChS,GACpB,OAAO,SAAA1B,GiCfJ,IAAeP,KjCgBRiC,EiCfHzC,EAAQ,CACX4D,IAAK,SACLC,OAAQ,OACRrD,UjCYYiG,MAAK,SAAAC,GACM,IAAfA,EAAIjG,UJfb,SAAiBgC,GAEpB,IAAIuS,EAAO,IAAIpF,MAAK,IAAIA,MAAOC,UAAY,OAC3C5S,IAAOgY,IAAIlY,EAASI,KAAKiH,UAAU3B,GAAO,CAACyS,QAASF,IIaxCG,CAAQzO,EAAIlG,MACZO,EAZW,SAAC0B,GAAD,MAAW,CAACxB,KAAML,EAAcJ,KAAMiC,GAYxC2S,CAAY1O,EAAIlG,cgCmD1BkC,CAKb8R,IE5Daa,OAZf,WACI,OACI,cAAC,WAAD,UAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOjG,KAAK,SAASxC,UAAW4H,KAChC,cAAC,IAAD,CAAOpF,KAAK,IAAIxC,UAAWuH,W,oBCHrCmB,QAAyBtH,IAAdhR,IAA0B,GAAKA,IAejCuY,kCAAgB,CAC3B9S,KAbJ,WAA4C,IAA9B+S,EAA6B,uDAAlBF,GAAU/J,EAAQ,uCACvC,OAAQA,EAAOtK,MACX,KAAKL,EAEL,KAAKC,EACD,OAAO0K,EAAO/K,KAClB,QACI,OAAOgV,M,UCPJC,0BAAYC,GAASC,+BAAoBC,2BAAgBC,QCLxEC,IAAShO,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAU4K,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRzH,SAAS8K,eAAe,W","file":"static/js/main.a9d87d0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6cadbf60.png\";","import {\r\n    HomeOutlined,\r\n    PieChartOutlined,\r\n    AreaChartOutlined,\r\n    SafetyOutlined,\r\n    AppstoreOutlined,\r\n    LineChartOutlined,\r\n    BarsOutlined,\r\n    ToolOutlined,\r\n    UserOutlined,\r\n    BarChartOutlined\r\n} from \"@ant-design/icons\";\r\n\r\n/**\r\n * 路由列表\r\n * @type {[{icon: JSX.Element, title: string, key: string}, {children: [{icon: JSX.Element, title: string, key: string}, {icon: JSX.Element, title: string, key: string}], icon: JSX.Element, title: string, key: string}, {icon: JSX.Element, title: string, key: string}, {icon: JSX.Element, title: string, key: string}, {children: [{icon: string, title: string, key: string}, {icon: JSX.Element, title: string, key: string}, {icon: JSX.Element, title: string, key: string}], icon: JSX.Element, title: string, key: string}]}\r\n */\r\nconst menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: \"/home\",// 对应的 path\r\n        icon: <HomeOutlined/>, // 图标名称\r\n        isPublic: true  //所有用户都可以访问这个页面，针对权限\r\n    }, {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: <AppstoreOutlined/>,\r\n        children: [\r\n            // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/category',\r\n                icon: <BarsOutlined/>\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/product',\r\n                icon: <ToolOutlined/>\r\n            }\r\n        ]\r\n    }, {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: <UserOutlined/>\r\n    }, {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: <SafetyOutlined/>\r\n    }, {\r\n        title: '图形图表',\r\n        key: '/charts',\r\n        icon: <AreaChartOutlined/>,\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar',\r\n                icon: <BarChartOutlined />\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line',\r\n                icon: <LineChartOutlined/>\r\n            }, {\r\n                title: '饼图',\r\n                key: '/charts/pie',\r\n                icon: <PieChartOutlined/>\r\n            },\r\n        ]\r\n    }]\r\nexport default menuList","//由于localStorage有些不兼容所以采用store，你也可以使用cookie\r\nimport Cookie from 'js-cookie'\r\nconst userKey = \"user\";\r\n\r\n//设置用户信息\r\nexport function setUser(user) {\r\n    //失效时间是24小时\r\n    let time = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\r\n    Cookie.set(userKey, JSON.stringify(user), {expires: time})\r\n}\r\n\r\n//获取用户信息\r\nexport function getUser() {\r\n    if (Cookie.get(userKey)) {\r\n        return JSON.parse(Cookie.get(userKey))\r\n    }\r\n}\r\n\r\n//删除用户信息\r\nexport function removeUser() {\r\n    Cookie.remove(userKey)\r\n}","import React, {Component} from 'react';\r\nimport {Layout, Menu} from 'antd';\r\nimport './index.less'\r\nimport logo from '../../pages/Login/images/logo.png'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n//菜单列表\r\nimport menuList from '../../config/menuConfig'\r\nimport {getUser} from '../../utils/storaUtil'\r\n\r\nconst {Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nclass SiderNav extends Component {\r\n    /**\r\n     * 根据menu的数据数组生成对应的标签按钮\r\n     * @param menuList\r\n     */\r\n    getMenuNodes = (menuList) => {\r\n        //当前选择的路由路径\r\n        const pathname = this.props.location.pathname\r\n        //得到需要打开的菜单项的openKey\r\n        return menuList.map(item => {\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    return (\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={item.key}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n                    //查找一个与当前请求路径匹配的子item\r\n                    const cItem = item.children.find(child => pathname.indexOf(child.key) === 0)\r\n                    if (cItem) {\r\n                        //如果存在，说明当前item的子节点需要展开\r\n                        this.openKey = item.key;\r\n                    }\r\n                    return (\r\n                        <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                            {\r\n                                this.getMenuNodes(item.children)\r\n                            }\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //判断当前登录用户是否有哪些显示权限菜单\r\n    hasAuth = (item) => {\r\n        //menuList里面的key\r\n        const {isPublic, key} = item\r\n        //获取登录用户的权限\r\n        const menus = getUser().role.menus;\r\n        const username = getUser().username;\r\n        /**\r\n         * 1.如果当前用户是admin\r\n         * 2.如果当前item是公开的\r\n         * 3.当前用户有此item的权限，key有没有在item中\r\n         */\r\n        if (username === \"admin\" || isPublic || menus.indexOf(key) !== -1) {\r\n            return true;\r\n        } else if (item.children) {\r\n            //如果当前用户有此item的某个子item的权限\r\n            return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 在第一次render()之前执行,用户获取用户选择的节点是否需要展开，\r\n     * 实现对this.openKey提前赋值，这样render()方法执行就直接取了\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n\r\n    render() {\r\n        //当前选择的路由路径\r\n        let pathname = this.props.location.pathname\r\n        //得到需要展开的菜单项key\r\n        const openKey = this.openKey;\r\n\r\n        //设置子路由也选中比如/product/detail\r\n        if (pathname.indexOf(\"/product\") === 0) {\r\n            pathname = \"/product\";\r\n        }\r\n        return (\r\n            <Sider trigger={null} collapsible collapsed={this.props.collapsed}>\r\n                <Link to=\"/\" className=\"logo\">\r\n                    <img className=\"img\" src={logo} alt={logo}/>\r\n                    <span className=\"font\">夕颜后台</span>\r\n                </Link>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={[openKey]} selectedKeys={[pathname]}>\r\n                    {\r\n                        this.menuNodes\r\n                    }\r\n                </Menu>\r\n            </Sider>\r\n        );\r\n    }\r\n}\r\n\r\n//withRouter让一般组件拥有路由组件的功能属性\r\nexport default withRouter(SiderNav);","import axios from 'axios'\r\nimport {message} from 'antd'\r\n// 创建axios实例\r\nconst service = axios.create({\r\n    baseURL: process.env.REACT_APP_URL, // api的base_url\r\n    timeout: 600000 // 请求超时时间\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n    //获取登录成功后store中的token\r\n    config.headers['x-access-token'] = \"123\"// 让每个请求携带自定义token 请根据实际情况自行修改\r\n    return config\r\n}, error => {\r\n    // Do something with request error\r\n    return Promise.reject(error)\r\n})\r\n\r\n// response拦截器\r\nservice.interceptors.response.use(\r\n    response => {\r\n        if (response.data.status !== 0) {\r\n            message.error(response.data.msg);\r\n        }\r\n        return response.data\r\n    },\r\n    error => {\r\n        // Do something with response error\r\n        if (error.response.status === 678) {\r\n            return Promise.reject(error);\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default service\r\n","/**\r\n * 包含n个action的type常量标识名称模块\r\n */\r\nexport const RECEIVE_USER = \"receive_user\"\r\n\r\nexport const LOGOUT_USER = \"logout_user\"","/**\r\n * 包含n个action create函数的模块\r\n * 同步action : 对象{type:'xxx'.data:值}\r\n * 异步action : dispatch=>{}\r\n */\r\nimport {login} from '../api/login'\r\nimport {RECEIVE_USER, LOGOUT_USER} from './action-types'\r\nimport {setUser, removeUser} from '../utils/storaUtil'\r\n\r\n//登录\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, data: user})\r\n\r\n//登出\r\nexport const logoutUser = (data) => ({type: LOGOUT_USER, data})\r\n\r\n\r\n//登录的异步action\r\nexport const doLogin = (user) => {\r\n    return dispatch => {\r\n        login(user).then(res => {\r\n            if (res.status === 0) {\r\n                setUser(res.data)\r\n                dispatch(receiveUser(res.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n//登出的异步action\r\nexport const doLogout = (data) => {\r\n    return dispatch => {\r\n        removeUser()\r\n        dispatch(logoutUser(data))\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {MenuFoldOutlined, ExclamationCircleOutlined, MenuUnfoldOutlined} from \"@ant-design/icons\";\r\nimport {Layout, Button, Modal} from \"antd\";\r\nimport PubSub from 'pubsub-js'\r\nimport './index.less'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {doLogout} from '../../redux/actions'\r\n\r\nconst {Header} = Layout;\r\n\r\nclass HeaderNav extends Component {\r\n    toggle = () => {\r\n        //发布消息\r\n        PubSub.publish('collapsed', !this.props.collapsed)\r\n    };\r\n    logout = () => {\r\n        Modal.confirm({\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: '确认要退出吗？',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.props.doLogout(\"\")\r\n                this.props.history.replace(\"/login\")\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header className=\"site-layout-background\" style={{padding: 0}}>\r\n                {React.createElement(this.props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                    className: 'trigger',\r\n                    onClick: this.toggle,\r\n                })}\r\n                <div className=\"logout\">\r\n                    <span>\r\n                        欢迎你：{this.props.user.username}\r\n                        <Button onClick={this.logout} type=\"link\">\r\n                        退出\r\n                    </Button>\r\n                    </span>\r\n                </div>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {doLogout}\r\n)(withRouter(HeaderNav));","import React, {Component} from 'react';\r\nimport {Layout} from 'antd';\r\nconst {Content} = Layout;\r\nclass ContentNav extends Component {\r\n    render() {\r\n        return (\r\n            <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                    margin: '24px',\r\n                    padding: 24,\r\n                    minHeight: 280,\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentNav;","import React, {Component} from 'react';\r\nimport {Layout} from 'antd';\r\n\r\nconst {Footer} = Layout;\r\n\r\nclass FooterNav extends Component {\r\n    render() {\r\n        return (\r\n            <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterNav;","import React, {Component} from 'react';\r\nimport {Breadcrumb} from \"antd\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass BreadcrumbNav extends Component {\r\n    render() {\r\n        //拆分路径为数组\r\n        const pathArr = this.props.location.pathname.trim().split(\"/\");\r\n        return (\r\n            <Breadcrumb style={{margin: '24px 24px 0px 24px'}}>\r\n                {\r\n                    pathArr.map((arr, index) => {\r\n                        return (\r\n                            <Breadcrumb.Item key={index}>{index < 0 ? '/' : ''}{arr}</Breadcrumb.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </Breadcrumb>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BreadcrumbNav);","import React, {Component} from 'react';\r\nimport './index.less'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <div className=\"title\">\r\n                    欢迎使用夕颜后台管理系统\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import request from '../utils/request'\r\n\r\n//列表\r\nexport function list(parentId) {\r\n    return request({\r\n        url: `/manage/category/list?parentId=${parentId}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n//添加\r\nexport function add(data) {\r\n    return request({\r\n        url: '/manage/category/add',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//修改\r\nexport function update(data) {\r\n    return request({\r\n        url: '/manage/category/update',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//根据id查询分类\r\nexport function info(id) {\r\n    return request({\r\n        url: '/manage/category/info?categoryId=' + id,\r\n        method: 'get',\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport {Form, Input, Select, Button} from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport './index.less'\r\n\r\nclass AddFrom extends Component {\r\n    static propTypes = {\r\n        add: PropTypes.func.isRequired,\r\n        handleCancel: PropTypes.func.isRequired,\r\n        selectCategoryList: PropTypes.array.isRequired\r\n    }\r\n    save = (data) => {\r\n        //修改属性名字 categoryName\r\n        data = JSON.parse(JSON.stringify(data).replace(/name/g, \"categoryName\"));\r\n        this.props.add(data)\r\n    }\r\n\r\n    render() {\r\n        let {selectCategoryList, parentId} = this.props;\r\n        return (\r\n            <Form\r\n                layout=\"vertical\"\r\n                initialValues={{parentId: parentId}}\r\n                onFinish={this.save}\r\n            >\r\n                <Form.Item\r\n                    label=\"所属分类\"\r\n                    name=\"parentId\"\r\n                >\r\n                    <Select>\r\n                        <Select.Option value={0}>一级分类</Select.Option>\r\n                        {\r\n                            selectCategoryList.map(category => <Select.Option key={category._id} value={category._id}>{category.name}</Select.Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"分类名称\"\r\n                    name=\"name\"\r\n                    rules={[{required: true, message: '请输入分类名称'}]}\r\n                >\r\n                    <Input placeholder=\"请输入分类名称\"/>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{offset: 8, span: 16}}>\r\n                    <Button onClick={this.props.handleCancel}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        添加\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFrom;","import React, {Component} from 'react';\r\nimport {Form, Input} from \"antd\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass UpdateFrom extends Component {\r\n    static propTypes = {\r\n        category: PropTypes.object.isRequired,\r\n        getFromDate: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {name, _id} = this.props.category || \"\";\r\n        const {getFromDate} = this.props;\r\n        // 得到 Form 实例\r\n        return (\r\n            <Form\r\n                layout=\"vertical\"\r\n                initialValues={{name: name}}\r\n            >\r\n                <Form.Item\r\n                    label=\"分类名称\"\r\n                    name='name'\r\n                    rules={[{required: true, message: '请输入分类名称!'}]}\r\n                >\r\n                    {/*通过函数回调子给父传递数据*/}\r\n                    <Input onChange={event => getFromDate({categoryId: _id, categoryName: event.target.value})}\r\n                           placeholder=\"请输入分类名称\"/>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateFrom;","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Space, Modal, message} from \"antd\";\r\nimport './index.less'\r\nimport {SaveOutlined, ArrowRightOutlined} from \"@ant-design/icons\";\r\nimport {list, add, update} from '../../api/category'\r\nimport AddFrom from \"../../components/Category/add-from\";\r\nimport UpdateFrom from \"../../components/Category/update-from\";\r\n\r\nconst {Column} = Table;\r\n\r\nclass Category extends Component {\r\n\r\n    state = {\r\n        categoryList: [],\r\n        //用户存在select下拉框的数据\r\n        selectCategoryList: [],\r\n        parentId: 0,\r\n        parentName: \"\",\r\n        loading: false,\r\n        addIsModalVisible: false,\r\n        updateIsModalVisible: false,\r\n        //存取添加和修改的数据\r\n        data: {},\r\n    }\r\n\r\n    //页面挂载时的钩子函数\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    //收集form数据\r\n    getFromDate = (obj) => {\r\n        this.setState({data: obj})\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    init = () => {\r\n        this.setState({loading: true})\r\n        list(this.state.parentId).then(res => {\r\n            this.setState({categoryList: res.data, loading: false})\r\n            //select框只存取parentId=0的数据所以这里做了一个判断\r\n            if (this.state.parentId === 0) {\r\n                this.setState({selectCategoryList: res.data})\r\n            }\r\n        })\r\n    }\r\n    //查看子分类回调\r\n    handFindChild = (category) => {\r\n        return () => {\r\n            this.setState({parentId: category._id, parentName: category.name}, () => {\r\n                this.init();\r\n            })\r\n        }\r\n    }\r\n    //返回回调\r\n    back = () => {\r\n        this.setState({parentId: 0}, () => {\r\n            this.init();\r\n        })\r\n    }\r\n    showAdd = () => {\r\n        this.setState({addIsModalVisible: true})\r\n    }\r\n    showUpdate = (category) => {\r\n        this.category = category;\r\n        //赋值初始化数据\r\n        this.setState({updateIsModalVisible: true, data: {categoryId: category._id, categoryName: category.name}})\r\n    }\r\n    //添加回调\r\n    add = (data) => {\r\n        add(data).then(res => {\r\n            if (res.status === 0) {\r\n                this.handleCancel();\r\n                this.init();\r\n            }\r\n        })\r\n    }\r\n    //修改回调\r\n    update = () => {\r\n        if (this.state.data.categoryName === \"\") {\r\n            message.error('分类名称不能为空');\r\n            return;\r\n        }\r\n        update(this.state.data).then(res => {\r\n            if (res.status === 0) {\r\n                this.handleCancel();\r\n                this.init();\r\n            }\r\n        })\r\n    }\r\n    //model取消事件\r\n    handleCancel = () => {\r\n        this.setState({addIsModalVisible: false, updateIsModalVisible: false})\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            categoryList,\r\n            selectCategoryList,\r\n            parentId,\r\n            loading,\r\n            parentName,\r\n            addIsModalVisible,\r\n            updateIsModalVisible\r\n        } = this.state\r\n        const category = this.category || {};\r\n        return (\r\n            <div>\r\n                <Card title={parentId === 0 ? '一级分类列表' : (\r\n                    <span>\r\n                        一级分类列表\r\n                        <ArrowRightOutlined style={{marginLeft: 10}}/>\r\n                        <Button onClick={this.back} type=\"link\">{parentName}</Button>\r\n                    </span>\r\n                )}\r\n                      extra={<Button icon={<SaveOutlined/>} type=\"primary\" onClick={this.showAdd}>添加</Button>}\r\n                      style={{width: '100%', height: '100%'}}>\r\n                    <Table bordered pagination={{\r\n                        pageSize: 5,\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true,\r\n                        pageSizeOptions: [5, 10, 15, 20]\r\n                    }} loading={loading} dataSource={categoryList} rowKey=\"_id\">\r\n                        <Column title=\"分类名称\" dataIndex=\"name\" key=\"_id\"/>\r\n                        <Column\r\n                            width=\"300px\"\r\n                            title=\"操作\"\r\n                            key=\"action\"\r\n                            render={(category, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button onClick={() => this.showUpdate(category)} type=\"link\">修改分类</Button>\r\n                                    {\r\n                                        parentId === 0 ? <Button type=\"link\"\r\n                                                                 onClick={this.handFindChild(category)}>查看子分类</Button> : null\r\n                                    }\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table>\r\n                </Card>\r\n                {/*footer={null}   Modal底部不会显示*/}\r\n                <Modal footer={null} destroyOnClose title=\"添加\" visible={addIsModalVisible} onCancel={this.handleCancel}>\r\n                    <AddFrom parentId={parentId} selectCategoryList={selectCategoryList} add={this.add}\r\n                             handleCancel={this.handleCancel}/>\r\n                </Modal>\r\n                <Modal destroyOnClose title=\"修改\" visible={updateIsModalVisible} onOk={this.update}\r\n                       onCancel={this.handleCancel}>\r\n                    <UpdateFrom getFromDate={this.getFromDate} category={category}/>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import request from '../utils/request'\r\n\r\n//列表\r\nexport function list(pageNum, pageSize) {\r\n    return request({\r\n        url: `/manage/product/list?pageNum=${pageNum}&pageSize=${pageSize}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n//搜索\r\nexport function search(pageNum, pageSize, productType, productValue) {\r\n    return request({\r\n        url: `/manage/product/search?pageNum=${pageNum}&pageSize=${pageSize}&${productType}=${productValue}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n//上下架\r\nexport function updateStatus(data) {\r\n    return request({\r\n        url: \"/manage/product/updateStatus\",\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//添加\r\nexport function add(data) {\r\n    return request({\r\n        url: \"/manage/product/add\",\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n//修改\r\nexport function update(data) {\r\n    return request({\r\n        url: \"/manage/product/update\",\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {message, Button, Card, Space, Table, Select, Input} from 'antd'\r\nimport {SaveOutlined} from \"@ant-design/icons\";\r\nimport {list, search, updateStatus} from '../../api/product'\r\n\r\nconst {Column} = Table;\r\n\r\nclass ProductHome extends Component {\r\n    state = {\r\n        loading: false,\r\n        productList: [],\r\n        pageNum: 1,\r\n        pageSize: 5,\r\n        total: 0,\r\n        productType: \"productName\",\r\n        productValue: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    //初始化\r\n    init = () => {\r\n        this.setState({loading: true})\r\n        setTimeout(() => {\r\n            const {pageNum, pageSize} = this.state;\r\n            list(pageNum, pageSize).then(res => {\r\n                this.setState({productList: res.data.list, total: res.data.total})\r\n                this.setState({loading: false})\r\n            })\r\n        }, 500)\r\n    }\r\n\r\n    //搜索\r\n    search = () => {\r\n        setTimeout(() => {\r\n            this.setState({loading: true, productValue: this.productValueNode.state.value}, () => {\r\n                const {pageSize, pageNum, productType, productValue} = this.state\r\n                search(pageNum, pageSize, productType, productValue).then(res => {\r\n                    this.setState({productList: res.data.list, total: res.data.total})\r\n                    this.setState({loading: false})\r\n                })\r\n            })\r\n        }, 500)\r\n    }\r\n    //上下架\r\n    handUpdateStatus = (product) => {\r\n        let {status, _id} = product\r\n        return () => {\r\n            //判断如果是上架那么修改的状态就需要改成下架\r\n            if (status === 1) {\r\n                status = 2;\r\n            } else if (status === 2) {\r\n                status = 1;\r\n            }\r\n            updateStatus({\"productId\": _id, \"status\": status}).then(res => {\r\n                if (res.status === 0) {\r\n                    message.success(\"操作成功\")\r\n                    this.init();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {loading, productList, total, productValue, pageSize, productType} = this.state\r\n        const title = (\r\n            <span>\r\n                 <Select defaultValue={productType} style={{width: 150}}\r\n                         onChange={value => this.setState({productType: value})}>\r\n                    <Select.Option value=\"productName\">按名称搜索</Select.Option>\r\n                    <Select.Option value=\"productDesc\">按描述搜索</Select.Option>\r\n                 </Select>\r\n                 <Input ref={c => this.productValueNode = c} placeholder={\"输入关键字\"}\r\n                        style={{width: 150, margin: '0 15px'}}></Input>\r\n                <Button onClick={this.search} type=\"primary\">搜索</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title}\r\n                      extra={<Button icon={<SaveOutlined/>}\r\n                                     onClick={() => this.props.history.push(\"/product/addUpdate?title=添加\")}\r\n                                     type=\"primary\">添加商品</Button>}\r\n                      style={{width: '100%', height: '100%'}}>\r\n                    <Table bordered pagination={{\r\n                        defaultPageSize: pageSize,\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true,\r\n                        pageSizeOptions: [5, 10, 15, 20],\r\n                        total,\r\n                        /*\r\n                        * 页码或 pageSize 改变的回调，参数是改变后的页码及每页条数\r\n                         */\r\n                        onChange: (pageNum, pageSize) => {\r\n                            this.setState({pageNum}, () => {\r\n                                if (productValue !== \"\") {\r\n                                    this.search()\r\n                                } else {\r\n                                    this.init();\r\n                                }\r\n                            })\r\n                        }\r\n                    }} loading={loading} dataSource={productList} rowKey=\"_id\">\r\n                        <Column align={\"center\"} title=\"商品名称\" dataIndex=\"name\" key=\"name\"/>\r\n                        <Column align={\"center\"} title=\"商品描述\" dataIndex=\"desc\" key=\"desc\"/>\r\n                        <Column align={\"center\"} title=\"价格\" dataIndex=\"price\" key=\"price\"\r\n                                render={(price) => '￥' + price}/>\r\n                        <Column align={\"center\"} width={100} title=\"状态\" dataIndex=\"status\" key=\"status\"\r\n                                render={(status, product) => {\r\n                                    return (\r\n                                        <span>\r\n                                    <Button type=\"primary\"\r\n                                            onClick={this.handUpdateStatus(product)}>{status === 1 ? '下架' : '上架'}</Button>\r\n                                    <span>{status === 1 ? '在售' : '已下架'}</span>\r\n                                </span>\r\n                                    )\r\n                                }}/>\r\n                        <Column\r\n                            align={\"center\"}\r\n                            width=\"100px\"\r\n                            title=\"操作\"\r\n                            key=\"action\"\r\n                            render={(category, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button type=\"link\"\r\n                                            onClick={() => this.props.history.replace(\"/product/detail\", {category})}>详情</Button>\r\n                                    <Button type=\"link\"\r\n                                            onClick={() => this.props.history.push(\"/product/addUpdate?title=修改\", {category})}>修改</Button>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductHome;","import request from '../utils/request'\r\n\r\n//上传文件\r\nexport function upload(data) {\r\n    return request({\r\n        url: '/manage/img/upload',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//删除文件\r\nexport function delUpload(data) {\r\n    return request({\r\n        url: '/manage/img/delete',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport {Upload, message} from 'antd'\r\nimport {upload, delUpload} from \"../../api/upload\";\r\nimport PubSub from 'pubsub-js'\r\n\r\n/**\r\n * 图片上传\r\n */\r\nclass PicturesWall extends Component {\r\n    state = {\r\n        fileList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //修改的时候显示图片\r\n        let fileList = []\r\n        const {imgs} = this.props\r\n        if (imgs && imgs.length > 0) {\r\n            fileList = imgs.map(img => {\r\n                return {\r\n                    url: img\r\n                }\r\n            })\r\n            this.state = {\r\n                fileList\r\n            }\r\n        }\r\n    }\r\n\r\n    //上传之前的钩子函数\r\n    beforeUpload = (file) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === \"image/jpg\" || file.type === \"image/gif\";\r\n        if (!isJpgOrPng) {\r\n            message.error('请上传格式为png, gif, jpg, jpeg的图片');\r\n            return false;\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n            return false;\r\n        }\r\n        let fd = new FormData();\r\n        fd.append(\"image\", file); //传文件\r\n        upload(fd).then(res => {\r\n            if (res.status === 0) {\r\n                this.setState({fileList: [res.data, ...this.state.fileList]}, () => {\r\n                    //发布给form进行收集数据\r\n                    PubSub.publish('upload', this.state.fileList)\r\n                })\r\n            }\r\n        });\r\n        //屏蔽了action的默认上传\r\n        return false;\r\n    }\r\n\r\n    //点击删除按钮的回调\r\n    onRemove = (file) => {\r\n        //先删除后台图片，在删除前台图片\r\n        delUpload({name: file.name}).then(res => {\r\n            if (res.status === 0) {\r\n                const {fileList} = this.state\r\n                //如果找到相等就返回其它的数据\r\n                const newFileList = fileList.filter(item => item.name !== file.name)\r\n                //在重新写入state\r\n                this.setState({fileList: newFileList})\r\n            }\r\n        })\r\n    }\r\n    //图片预览事件\r\n    onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Upload\r\n                action=\"\"\r\n                accept=\"image/*\"  //类型\r\n                listType=\"picture-card\"\r\n                fileList={this.state.fileList}\r\n                beforeUpload={this.beforeUpload}\r\n                onPreview={this.onPreview}\r\n                onRemove={this.onRemove}\r\n            >\r\n                {this.state.fileList.length < 5 && '+ Upload'}\r\n            </Upload>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React, {Component} from 'react';\r\nimport {message, Upload} from 'antd'\r\nimport {PictureOutlined} from \"@ant-design/icons\";\r\nimport BraftEditor from 'braft-editor'\r\nimport {ContentUtils} from 'braft-utils'\r\nimport 'braft-editor/dist/index.css'\r\nimport {upload} from \"../../api/upload\";\r\nimport PubSub from \"pubsub-js\";\r\n\r\n\r\n/***\r\n * 富文本\r\n */\r\nclass RichTextEditor extends Component {\r\n    state = {\r\n        editorState: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // 这里假设从服务器获取html格式的编辑器内容\r\n        const htmlContent = this.props.detail\r\n        // 使用 BraftEditor.createEditorState 将 html 字符串转换为编辑器所需的 editorState 数据\r\n        this.setState({\r\n            editorState: BraftEditor.createEditorState(htmlContent)\r\n        })\r\n    }\r\n\r\n    // 当编辑器获得焦点时按 ctrl + s 将执行的事件\r\n    submitContent = async () => {\r\n        // 在编辑器内容提交到服务器之前，可以直接调用editorState.toHTML()获取HTML内容\r\n        const htmlContent = this.state.editorState.toHTML()\r\n        PubSub.publish('rich-text', htmlContent)\r\n    }\r\n\r\n    //富文本内容改变触发的事件\r\n    handleEditorChange = (editorState) => {\r\n        this.setState({editorState}, () => {\r\n            PubSub.publish('rich-text', this.state.editorState.toHTML())\r\n        })\r\n    }\r\n\r\n    //点击预览功能的回调\r\n    preview = () => {\r\n\r\n        if (window.previewWindow) {\r\n            window.previewWindow.close()\r\n        }\r\n\r\n        window.previewWindow = window.open()\r\n        window.previewWindow.document.write(this.buildPreviewHtml())\r\n        window.previewWindow.document.close()\r\n\r\n    }\r\n\r\n    //上传图片的回调\r\n    uploadHandler = (file) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === \"image/jpg\" || file.type === \"image/gif\";\r\n        if (!isJpgOrPng) {\r\n            message.error('请上传格式为png, gif, jpg, jpeg的图片');\r\n            return false;\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n            return false;\r\n        }\r\n        let fd = new FormData();\r\n        fd.append(\"image\", file); //传文件\r\n        upload(fd).then(res => {\r\n            if (res.status === 0) {\r\n                //写入富文本种\r\n                this.setState({\r\n                    editorState: ContentUtils.insertMedias(this.state.editorState, [{\r\n                        type: 'IMAGE',\r\n                        url: res.data.url\r\n                    }])\r\n                })\r\n            }\r\n        });\r\n        //屏蔽了action的默认上传\r\n        return false;\r\n    }\r\n\r\n    buildPreviewHtml() {\r\n        return `\r\n      <!Doctype html>\r\n      <html>\r\n        <head>\r\n          <title>Preview Content</title>\r\n          <style>\r\n            html,body{\r\n              height: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              overflow: auto;\r\n              background-color: #f1f2f3;\r\n            }\r\n            .container{\r\n              box-sizing: border-box;\r\n              width: 1000px;\r\n              max-width: 100%;\r\n              min-height: 100%;\r\n              margin: 0 auto;\r\n              padding: 30px 20px;\r\n              overflow: hidden;\r\n              background-color: #fff;\r\n              border-right: solid 1px #eee;\r\n              border-left: solid 1px #eee;\r\n            }\r\n            .container img,\r\n            .container audio,\r\n            .container video{\r\n              max-width: 100%;\r\n              height: auto;\r\n            }\r\n            .container p{\r\n              white-space: pre-wrap;\r\n              min-height: 1em;\r\n            }\r\n            .container pre{\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-radius: 5px;\r\n            }\r\n            .container blockquote{\r\n              margin: 0;\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-left: 3px solid #d1d1d1;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n        </body>\r\n      </html>\r\n    `\r\n    }\r\n\r\n    render() {\r\n        //自定义组件,集成antd的上传图片组件和预览\r\n        const extendControls = [\r\n            {\r\n                key: 'custom-button',\r\n                type: 'button',\r\n                text: '预览',\r\n                onClick: this.preview\r\n            },//antd的上传图片组件\r\n            {\r\n                key: 'antd-uploader',\r\n                type: 'component',\r\n                component: (\r\n                    <Upload\r\n                        accept=\"image/*\"\r\n                        showUploadList={false}\r\n                        beforeUpload={this.uploadHandler}\r\n                    >\r\n                        {/* 这里的按钮最好加上type=\"button\"，以避免在表单容器中触发表单提交，用Antd的Button组件则无需如此 */}\r\n                        <button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\r\n                            <PictureOutlined/>\r\n                        </button>\r\n                    </Upload>\r\n                )\r\n            }\r\n        ]\r\n\r\n        const {editorState} = this.state\r\n        return (\r\n            <BraftEditor\r\n                extendControls={extendControls}\r\n                value={editorState}\r\n                onChange={this.handleEditorChange}\r\n                onSave={this.submitContent}\r\n                contentStyle={{height: 400, border: \"1px solid #cccccc\"}}\r\n                placeholder={\"请输入文本\"}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default RichTextEditor;","import React, {Component} from 'react';\r\nimport {Card, Button, Form, Input, Cascader, message} from 'antd'\r\nimport {ArrowLeftOutlined} from \"@ant-design/icons\";\r\nimport qs from 'querystring'\r\nimport {list, add, update} from '../../api/category'\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport PubSub from 'pubsub-js'\r\nimport RichTextEditor from \"./rich-text-editor\";\r\n\r\nclass ProductUpdate extends Component {\r\n\r\n    state = {\r\n        options: [],\r\n        imgs: [],\r\n        content: \"\"\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.init();\r\n    }\r\n\r\n    //初始化一级列表\r\n    init = () => {\r\n        list(0).then(res => {\r\n            if (res.status === 0) {\r\n                //遍历数据并重新返回一个新的数组\r\n                const options = res.data.map(category => {\r\n                    return {\r\n                        value: category._id,\r\n                        label: category.name,\r\n                        isLeaf: false,\r\n                    }\r\n                })\r\n                //写入状态种\r\n                this.setState({options})\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        //订阅收集上传图片的数据\r\n        PubSub.subscribe('upload', (_, imgs) => {\r\n            this.setState({imgs})\r\n        });\r\n        //订阅富文本的内容\r\n        PubSub.subscribe('rich-text', (_, content) => {\r\n            this.setState({content})\r\n        });\r\n    }\r\n\r\n    //提交表单的回调\r\n    onFinish = (data) => {\r\n        const {imgs, content} = this.state;\r\n        //设置图片数组\r\n        const imgList = [];\r\n        imgs.map(img => {\r\n            return imgList.push(img.url)\r\n        })\r\n        data.imgs = imgList\r\n        data.detail = content\r\n        data.categoryId = data.categoryId[1]\r\n        data.pCategoryId = data.categoryId[0]\r\n        const {search} = this.props.location\r\n        const {title} = qs.parse(search.slice(1))\r\n        if (title === \"添加\") {\r\n            add(data).then(res => {\r\n                console.log(res)\r\n                if (res.status === 0) {\r\n                    message.success(\"添加成功\")\r\n                    this.props.history.replace(\"/product\")\r\n                }\r\n            })\r\n        } else {\r\n            update(data).then(res => {\r\n                if (res.status === 0) {\r\n                    message.success(\"修改成功\")\r\n                    this.props.history.replace(\"/product\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //异步加载二级数据\r\n    loadData = (selectedOptions) => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true;\r\n        // load options lazily\r\n        setTimeout(() => {\r\n            targetOption.loading = false;\r\n            list(targetOption.value).then(res => {\r\n                //遍历数据并重新返回一个新的数组\r\n                const options = res.data.map(category => {\r\n                        return {\r\n                            value: category._id,\r\n                            label: category.name,\r\n                            isLeaf: true,\r\n                        }\r\n                    }\r\n                )\r\n                //新的数组赋值给二级列表\r\n                targetOption.children = options;\r\n                //重新写入状态\r\n                this.setState({\r\n                    options: [...this.state.options],\r\n                });\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const {search} = this.props.location\r\n        const {title} = qs.parse(search.slice(1))\r\n        let {category} = this.props.location.state || {};\r\n        //处理添加的时候出现category是undefined\r\n        if (category === undefined) {\r\n            category = {}\r\n        }\r\n        const categoryId = [];\r\n        categoryId.push(category.pCategoryId)\r\n        categoryId.push(category.categoryId)\r\n        const titleMenu = (\r\n            <span>\r\n                <Button onClick={() => this.props.history.replace(\"/product\")} type=\"link\">\r\n                    <ArrowLeftOutlined/>\r\n                </Button>\r\n                {title}商品\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={titleMenu}>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{span: 2}}\r\n                    wrapperCol={{span: 8}}\r\n                    initialValues={{\r\n                        _id: category._id,\r\n                        name: category.name,\r\n                        desc: category.desc,\r\n                        price: category.price,\r\n                        categoryId: categoryId\r\n                    }}\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item\r\n                        hidden\r\n                        name=\"_id\"\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品名称\"\r\n                        name=\"name\"\r\n                        rules={[{required: true, message: '商品名称不能为空!'}]}\r\n                    >\r\n                        <Input placeholder={\"请输入商品名称\"}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品描述\"\r\n                        name=\"desc\"\r\n                        rules={[{required: true, message: '商品描述不能为空!'}]}\r\n                    >\r\n                        <Input.TextArea autoSize={{minRows: 2, maxRows: 6}}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品价格\"\r\n                        name=\"price\"\r\n                        rules={[{required: true, message: '商品价格不能为空!'},\r\n                            {\r\n                                validator: (_, value, callback) => {\r\n                                    if (value <= 0) {\r\n                                        return Promise.reject(new Error('金额不能低于0元'));\r\n                                    }\r\n                                    return Promise.resolve();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input type=\"number\" addonAfter=\"元\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品分类\"\r\n                        name=\"categoryId\"\r\n                        rules={[{required: true, message: '商品分类不能为空!'}]}\r\n                    >\r\n                        <Cascader options={this.state.options} loadData={this.loadData}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品图片\"\r\n                        name=\"imgs\"\r\n                    >\r\n                        <PicturesWall imgs={category.imgs}/>\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{span: 20}}\r\n                               label=\"商品详情\"\r\n                               name=\"detail\"\r\n                    >\r\n                        <RichTextEditor detail={category.detail}/>\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{offset: 2, span: 8}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            {title}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductUpdate;","import React, {Component} from 'react';\r\nimport {Button, Card, List} from 'antd'\r\nimport {ArrowLeftOutlined} from \"@ant-design/icons\";\r\nimport {info} from '../../api/category'\r\nimport './index.less'\r\n\r\nclass ProductDetail extends Component {\r\n    state = {\r\n        categoryName: \"\",\r\n        pCategoryName: \"\"\r\n    }\r\n\r\n    //render之前执行的构造方法\r\n    constructor(props) {\r\n        super(props);\r\n        const {categoryId, pCategoryId} = this.props.location.state.category;\r\n        //后台查询分类名称   由于如果上级是一级就不需要查找了\r\n        if (pCategoryId === \"0\") {\r\n            info(categoryId).then(res => {\r\n                this.setState({categoryName: res.data.name})\r\n            })\r\n        } else {\r\n            info(categoryId).then(res => {\r\n                this.setState({categoryName: res.data.name})\r\n            })\r\n            info(pCategoryId).then(res => {\r\n                this.setState({pCategoryName: res.data.name})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {category} = this.props.location.state;\r\n        const {categoryName, pCategoryName} = this.state;\r\n        const title = (\r\n            <span>\r\n                <Button onClick={() => this.props.history.replace(\"/product\")} type=\"link\">\r\n                    <ArrowLeftOutlined/>\r\n                </Button>\r\n                商品详情\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title} className=\"product-detail\">\r\n                <List\r\n                    bordered>\r\n                    <List.Item>\r\n                        <span className=\"left\">商品名称:</span>\r\n                        <span>{category.name}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"left\">商品描述:</span>\r\n                        <span>{category.desc}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"left\">商品价格:</span>\r\n                        <span>{category.price}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"left\">所属分类:</span>\r\n                        <span>{categoryName} {pCategoryName ? '--> ' + pCategoryName : ''}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"left\">商品图片:</span>\r\n                        {\r\n                            category.imgs.map(img => {\r\n                                return (\r\n                                    <span key={img}><img alt={img}\r\n                                                         style={{\r\n                                                             width: 150,\r\n                                                             height: 150,\r\n                                                             marginRight: 10,\r\n                                                             border: '1px solid #002140'\r\n                                                         }}\r\n                                                         src={`http://localhost:5000/upload/${img}`}/></span>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"left\">商品详情:</span>\r\n                        <span dangerouslySetInnerHTML={{__html: category.detail}}></span>\r\n                    </List.Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default ProductDetail;","import React, {Component} from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport ProductHome from \"../../components/Product/home\";\r\nimport ProductAddUpdate from \"../../components/Product/add-update\";\r\nimport ProductDetail from \"../../components/Product/detail\";\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/product/addUpdate\" component={ProductAddUpdate}></Route>\r\n                <Route path=\"/product/detail\" component={ProductDetail}></Route>\r\n                <Route path=\"/product\" component={ProductHome}></Route>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;","import request from '../utils/request'\r\n\r\n//列表\r\nexport function list() {\r\n    return request({\r\n        url: '/manage/role/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n//添加\r\nexport function add(data) {\r\n    return request({\r\n        url: '/manage/role/add',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n//修改\r\nexport function update(data) {\r\n    return request({\r\n        url: '/manage/role/update',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport {Button, Form, Input, message} from \"antd\";\r\nimport {add} from '../../api/role'\r\n\r\nclass AddFrom extends Component {\r\n    save = (data) => {\r\n        add({roleName: data.name}).then(res => {\r\n            if (res.status === 0) {\r\n                message.success(\"添加成功\")\r\n                this.props.handleCancel();\r\n                this.props.init();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                layout=\"vertical\"\r\n                onFinish={this.save}\r\n            >\r\n                <Form.Item\r\n                    label=\"角色名称\"\r\n                    name=\"name\"\r\n                    rules={[{required: true, message: '请输入角色名称'}]}\r\n                >\r\n                    <Input placeholder=\"请输入角色名称\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button onClick={this.props.handleCancel}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        添加\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFrom;","import React, {Component} from 'react';\r\nimport {Button, Form, Input, message, Tree} from \"antd\";\r\nimport menuList from '../../config/menuConfig'\r\nimport {update} from '../../api/role'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {doLogout} from '../../redux/actions'\r\n\r\nclass AuthFrom extends Component {\r\n    state = {\r\n        checkedKeys: [],\r\n        roleName: \"\"\r\n    }\r\n\r\n    //初始化\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.checkedKeys = props.rowRole.menus\r\n        this.state.roleName = props.rowRole.name\r\n    }\r\n\r\n    //修改事件\r\n    auth = () => {\r\n        const {_id} = this.props.rowRole\r\n        const menus = this.state.checkedKeys\r\n        const auth_time = new Date().getTime();\r\n        const auth_name = this.props.user.username;\r\n        const data = {_id, menus, auth_time, auth_name}\r\n        update(data).then(res => {\r\n            if (res.status === 0) {\r\n                //如果修改是自己的用户权限，强制退出\r\n                if (_id === this.props.user.role_id) {\r\n                    message.warning(\"当前权限已更新，请重新登录\")\r\n                    this.props.doLogout(\"\");\r\n                    this.props.history.replace(\"/login\")\r\n                } else {\r\n                    message.success(\"修改成功\")\r\n                    //隐藏模态框\r\n                    this.props.handleCancel();\r\n                    //修改成功后重新加载数据\r\n                    this.props.init();\r\n                    //设置tree为最新的menus\r\n                    this.props.rowRole.menus = menus;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //点击树形复选框触发事件\r\n    onCheck = (checkedKeys) => {\r\n        this.setState({checkedKeys})\r\n    }\r\n\r\n    render() {\r\n        const {checkedKeys, roleName} = this.state;\r\n        return (\r\n            <Form\r\n                onFinish={this.auth}\r\n                initialValues={{\"name\": roleName}}\r\n            >\r\n                <Form.Item\r\n                    label=\"角色名称\"\r\n                    name=\"name\"\r\n                >\r\n                    <Input disabled placeholder=\"请输入角色名称\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Tree\r\n                        checkable\r\n                        checkedKeys={{checked: checkedKeys}}\r\n                        defaultExpandAll\r\n                        treeData={menuList}\r\n                        onCheck={this.onCheck}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button onClick={this.props.handleCancel}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        授权\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {doLogout}\r\n)(withRouter(AuthFrom));","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Modal} from 'antd'\r\nimport {list} from '../../api/role'\r\nimport AddFrom from \"../../components/Role/add-from\";\r\nimport AuthFrom from \"../../components/Role/auth-from\";\r\n\r\nconst {Column} = Table;\r\n\r\nclass Role extends Component {\r\n    state = {\r\n        loading: false,\r\n        roleList: [],\r\n        //选中一行的数据\r\n        rowRole: {},\r\n        addIsModalVisible: false,\r\n        authIsModalVisible: false\r\n    }\r\n    init = () => {\r\n        list().then(res => {\r\n            this.setState({roleList: res.data})\r\n        })\r\n    }\r\n\r\n    //选中当前行的事件\r\n    selectRow = (rowRole) => {\r\n        return {\r\n            onClick: event => {\r\n                this.setState({rowRole})\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    //取消事件\r\n    handleCancel = () => {\r\n        this.setState({addIsModalVisible: false, authIsModalVisible: false})\r\n    }\r\n\r\n    render() {\r\n        const {loading, roleList, rowRole, addIsModalVisible, authIsModalVisible} = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type=\"primary\" onClick={() => this.setState({addIsModalVisible: true})}>创建角色</Button>\r\n                <Button disabled={!rowRole._id} onClick={() => this.setState({authIsModalVisible: true})}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title} style={{width: '100%', height: '100%'}}>\r\n                    <Table onRow={this.selectRow} rowSelection={{type: 'radio',onSelect:(rowRole)=>this.setState({rowRole}), selectedRowKeys: [rowRole._id]}}\r\n                           bordered\r\n                           pagination={{\r\n                               pageSize: 3,\r\n                               showQuickJumper: true,\r\n                               showSizeChanger: true,\r\n                               pageSizeOptions: [5, 10, 15, 20],\r\n                           }} loading={loading} dataSource={roleList} rowKey=\"_id\">\r\n                        <Column align={\"center\"} title=\"角色名称\" dataIndex=\"name\" key=\"name\"/>\r\n                        <Column align={\"center\"} title=\"创建时间\" dataIndex=\"create_time\" key=\"create_time\"/>\r\n                        <Column align={\"center\"} title=\"授权时间\" dataIndex=\"auth_time\" key=\"auth_time\"/>\r\n                        <Column align={\"center\"} title=\"授权人\" dataIndex=\"auth_name\" key=\"auth_name\"/>\r\n                    </Table>\r\n                </Card>\r\n                <Modal footer={null} destroyOnClose title=\"添加角色\" visible={addIsModalVisible}\r\n                       onCancel={this.handleCancel}>\r\n                    <AddFrom init={this.init} handleCancel={this.handleCancel}/>\r\n                </Modal>\r\n                <Modal footer={null} destroyOnClose title=\"授权角色权限\" visible={authIsModalVisible}\r\n                       onCancel={this.handleCancel}>\r\n                    <AuthFrom init={this.init} rowRole={rowRole} handleCancel={this.handleCancel}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Role;","import request from '../utils/request'\r\n\r\n//列表\r\nexport function list() {\r\n    return request({\r\n        url: '/manage/user/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n//添加\r\nexport function add(data) {\r\n    return request({\r\n        url: '/manage/user/add',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//修改\r\nexport function update(data) {\r\n    return request({\r\n        url: '/manage/user/update',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n//删除\r\nexport function del(data) {\r\n    return request({\r\n        url: '/manage/user/delete',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport {Form, Input, Button, Select, message} from 'antd'\r\nimport {add, update} from '../../api/user'\r\n\r\nconst {Option} = Select;\r\n\r\nclass AddUpdate extends Component {\r\n    onFinish = (data) => {\r\n        if (this.props.title === \"添加用户\") {\r\n            add(data).then(res => {\r\n                if (res.status === 0) {\r\n                    message.success(\"添加用户成功\")\r\n                    this.props.handleCancel();\r\n                    this.props.init();\r\n                }\r\n            })\r\n        } else {\r\n            update(data).then(res => {\r\n                if (res.status === 0) {\r\n                    message.success(\"修改用户成功\")\r\n                    this.props.handleCancel();\r\n                    this.props.init();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, roleList, handleCancel, user} = this.props\r\n        return (\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{span: 4}}\r\n                wrapperCol={{span: 20}}\r\n                initialValues={{\r\n                    _id: user._id,\r\n                    username: user.username,\r\n                    password: user.password,\r\n                    phone: user.phone,\r\n                    email: user.email,\r\n                    role_id: user.role_id,\r\n                }}\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    hidden\r\n                    name=\"_id\"\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: '用户名不能为空'}]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    hidden={title === \"修改用户\" ? true : false}\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: '密码不能为空'}]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"手机号\"\r\n                    name=\"phone\"\r\n                    rules={[\r\n                        {required: true, message: '手机号不能为空'},\r\n                        {pattern: /^1[3456789]\\d{9}$/, message: '手机号码不正确！'},\r\n                    ]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"邮箱\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {required: true, message: '邮箱不能为空'},\r\n                        {pattern: /^[A-Za-zd0-9]+([-_.][A-Za-zd]+)*@([A-Za-zd]+[-.])+[A-Za-zd]{2,5}$/, message: '邮箱格式不正确！'},\r\n                    ]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"角色\"\r\n                    name=\"role_id\"\r\n                    rules={[{required: true, message: '角色不能为空'}]}\r\n                >\r\n                    <Select placeholder=\"请输入角色\">\r\n                        {\r\n                            roleList.map(role => {\r\n                                return (\r\n                                    <Option key={role._id} value={role._id}>{role.name}</Option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{offset: 4, span: 20}}>\r\n                    <Button onClick={handleCancel}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        {title}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUpdate;","import React, {Component} from 'react';\r\nimport {Button, Card, Space, Table, Modal, message} from \"antd\";\r\nimport {list, del} from '../../api/user'\r\nimport {formatDate} from '../../utils/timeConversionUtil'\r\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\r\nimport AddUpdate from '../../components/User/add-update'\r\n\r\nconst {Column} = Table;\r\nconst {confirm} = Modal;\r\n\r\nclass User extends Component {\r\n    state = {\r\n        loading: false,\r\n        userList: [],\r\n        roleList: [],\r\n        isModalVisible: false,\r\n        titleName: \"\",\r\n        //需要修改的数据\r\n        user: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    init = () => {\r\n        list().then(res => {\r\n            const users = res.data.users.map(user => {\r\n                res.data.roles.map(role => {\r\n                    //根据角色id查询角色名称\r\n                    if (role._id === user.role_id) {\r\n                        user.roleName = role.name\r\n                    }\r\n                    return;\r\n                })\r\n                //返回对象\r\n                return user;\r\n            })\r\n            this.setState({userList: users, roleList: res.data.roles})\r\n        })\r\n    }\r\n    //删除事件\r\n    del = (id) => {\r\n        return () => {\r\n            confirm({\r\n                icon: <ExclamationCircleOutlined/>,\r\n                content: '确定要删除？',\r\n                onOk: () => {\r\n                    del({userId: id}).then(res => {\r\n                        if (res.status === 0) {\r\n                            message.success(\"删除成功\")\r\n                            this.init();\r\n                        }\r\n                    })\r\n                },\r\n            });\r\n        }\r\n    }\r\n//取消事件\r\n    handleCancel = () => {\r\n        this.setState({isModalVisible: false})\r\n    }\r\n\r\n    render() {\r\n        const title = (\r\n            <span>\r\n                <Button type=\"primary\"\r\n                        onClick={() => this.setState({isModalVisible: true, titleName: '添加用户'})}>创建用户</Button>\r\n            </span>\r\n        )\r\n        const {loading, userList, isModalVisible, titleName, roleList, user} = this.state\r\n        return (\r\n            <div>\r\n                <Card title={title} style={{width: '100%', height: '100%'}}>\r\n                    <Table bordered pagination={{\r\n                        defaultPageSize: 3,\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true,\r\n                        pageSizeOptions: [5, 10, 15, 20],\r\n                    }} loading={loading} dataSource={userList} rowKey=\"_id\">\r\n                        <Column align={\"center\"} title=\"用户名\" dataIndex=\"username\" key=\"username\"/>\r\n                        <Column align={\"center\"} title=\"邮箱\" dataIndex=\"email\" key=\"email\"/>\r\n                        <Column align={\"center\"} title=\"电话\" dataIndex=\"phone\" key=\"phone\"/>\r\n                        <Column align={\"center\"} title=\"注册时间\" dataIndex=\"create_time\" key=\"create_time\"\r\n                                render={(create_time, user) => formatDate(create_time)}/>\r\n                        <Column align={\"center\"} title=\"所属角色\" dataIndex=\"roleName\" key=\"roleName\"/>\r\n                        <Column\r\n                            align={\"center\"}\r\n                            width=\"100px\"\r\n                            title=\"操作\"\r\n                            key=\"action\"\r\n                            render={(user, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button type=\"link\" onClick={() => this.setState({\r\n                                        isModalVisible: true,\r\n                                        titleName: '修改用户',\r\n                                        user\r\n                                    })}>修改</Button>\r\n                                    <Button onClick={this.del(user._id)} type=\"link\">删除</Button>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table>\r\n                </Card>\r\n                <Modal destroyOnClose title={titleName} footer={null} visible={isModalVisible}\r\n                       onCancel={this.handleCancel}>\r\n                    <AddUpdate user={user} init={this.init} title={titleName} handleCancel={this.handleCancel}\r\n                               roleList={roleList}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","export function formatDate(now) {\r\n    now = new Date(now);\r\n    let year = now.getFullYear();  //取得4位数的年份\r\n    let month = now.getMonth() + 1;  //取得日期中的月份，其中0表示1月，11表示12月\r\n    let date = now.getDate();      //返回日期月份中的天数（1到31）\r\n    let hour = now.getHours();     //返回日期中的小时数（0到23）\r\n    let minute = now.getMinutes(); //返回日期中的分钟数（0到59）\r\n    let second = now.getSeconds(); //返回日期中的秒数（0到59）\r\n    return year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minute + \":\" + second;\r\n}","import React, {Component} from 'react';\r\nimport {Button, Card} from \"antd\";\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nclass Bar extends Component {\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20],\r\n        stores: [15, 12, 6, 20, 15, 20]\r\n    }\r\n    update = () => {\r\n        this.setState((state) => ({\r\n            sales: state.sales.map(sale => sale + 1),\r\n            stores: state.stores.map(store => store - 1)\r\n        }))\r\n    }\r\n    getOption = () => {\r\n        const {sales, stores} = this.state\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: sales\r\n            }, {\r\n                name: '库存',\r\n                type: 'bar',\r\n                data: stores\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bar;","import React, {Component} from 'react';\r\nimport {Button, Card} from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Line extends Component {\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20],\r\n        stores: [15, 12, 6, 20, 15, 20]\r\n    }\r\n    update = () => {\r\n        this.setState((state) => ({\r\n            sales: state.sales.map(sale => sale + 1),\r\n            stores: state.stores.map(store => store - 1)\r\n        }))\r\n    }\r\n    getOption = () => {\r\n        const {sales, stores} = this.state\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'line',\r\n                data: sales\r\n            }, {\r\n                name: '库存',\r\n                type: 'line',\r\n                data: stores\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Line;","import React, {Component} from 'react';\r\nimport {Button, Card} from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Pie extends Component {\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20],\r\n        stores: [15, 12, 6, 20, 15, 20]\r\n    }\r\n    update = () => {\r\n        this.setState((state) => ({\r\n            sales: state.sales.map(sale => sale + 1),\r\n            stores: state.stores.map(store => store - 1)\r\n        }))\r\n    }\r\n    getOption = () => {\r\n        const {sales, stores} = this.state\r\n        return {\r\n            title: {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '50%',\r\n                    data: [\r\n                        {value: 1048, name: '搜索引擎'},\r\n                        {value: 735, name: '直接访问'},\r\n                        {value: 580, name: '邮件营销'},\r\n                        {value: 484, name: '联盟广告'},\r\n                        {value: 300, name: '视频广告'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pie;","export default __webpack_public_path__ + \"static/media/404.367724aa.gif\";","import React, {Component} from 'react';\r\nimport {Row, Col, Button} from 'antd'\r\nimport error from './images/404.gif'\r\nimport './index.less'\r\n\r\nclass Error extends Component {\r\n    handleGoMain = () => {\r\n        this.props.history.replace(\"/\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"app-container\">\r\n                    <Row>\r\n\r\n                        <Col span={12}>\r\n                            <img src={error} alt=\"404\" className=\"img-style\"/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div style={{marginLeft: '100px', marginTop: '60px'}}>\r\n                                <h1 className=\"color-main\">OOPS!</h1>\r\n                                <h2 style={{color: '#606266'}}>Sorry, the page got lost accidentally！</h2>\r\n                                <div style={{color: '#909399', fontSize: '14px'}}>\r\n                                    Please check the URL entered is correct, please click the button below to return to\r\n                                    the homepage or send an error report, thanks.\r\n                                </div>\r\n                                <Button style={{marginTop: '20px'}} type=\"primary\" shape=\"round\"\r\n                                        onClick={this.handleGoMain}>Back to Home</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport {Layout} from 'antd';\r\nimport './index.less'\r\nimport SiderNav from \"../../components/Sider\";\r\nimport HeaderNav from \"../../components/Header\";\r\nimport ContentNav from \"../../components/Content\";\r\nimport FooterNav from \"../../components/Footer\";\r\nimport BreadcrumbNav from \"../../components/BreadcrumbNav\";\r\nimport PubSub from 'pubsub-js'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport Home from \"../Home\";\r\nimport Category from \"../Category\";\r\nimport Product from \"../Product\";\r\nimport Role from \"../Role\";\r\nimport User from \"../User\";\r\nimport Bar from \"../Charts/bar\";\r\nimport Line from \"../Charts/line\";\r\nimport Pie from \"../Charts/pie\";\r\nimport {getUser} from '../../utils/storaUtil'\r\nimport Error from \"../Error\";\r\nclass Admin extends Component {\r\n    state = {\r\n        collapsed: false,\r\n    }\r\n\r\n    //初始化事件\r\n    componentDidMount() {\r\n        //订阅消息\r\n        this.token = PubSub.subscribe('collapsed', (_, collapsed) => {\r\n            this.setState({collapsed})\r\n        });\r\n    }\r\n\r\n    //卸载事件\r\n    componentWillUnmount() {\r\n        PubSub.unsubscribe(this.token);\r\n    }\r\n\r\n    render() {\r\n        if (!getUser()) {\r\n            return <Redirect to=\"/login\"></Redirect>\r\n        }\r\n        return (\r\n            <>\r\n                <Layout id=\"components-layout-demo-custom-trigger\">\r\n                    <SiderNav collapsed={this.state.collapsed}/>\r\n                    <Layout className=\"site-layout\">\r\n                        <HeaderNav collapsed={this.state.collapsed}/>\r\n                        <BreadcrumbNav/>\r\n                        <ContentNav>\r\n                            {/*注册二级路由*/}\r\n                            <Switch>\r\n                                {/*开启严格匹配*/}\r\n                                <Redirect exact from=\"/\" to=\"/home\"></Redirect>\r\n                                <Route path=\"/home\" component={Home}></Route>\r\n                                <Route path=\"/product\" component={Product}></Route>\r\n                                <Route path=\"/category\" component={Category}></Route>\r\n                                <Route path=\"/role\" component={Role}></Route>\r\n                                <Route path=\"/user\" component={User}></Route>\r\n                                <Route path=\"/charts/bar\" exact component={Bar}></Route>\r\n                                <Route path=\"/charts/line\" exact component={Line}></Route>\r\n                                <Route path=\"/charts/pie\" exact component={Pie}></Route>\r\n                                {/*配置404页面*/}\r\n                                <Route component={Error}></Route>\r\n                            </Switch>\r\n                        </ContentNav>\r\n                        <FooterNav/>\r\n                    </Layout>\r\n                </Layout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React, {Component} from 'react';\r\nimport './index.less'\r\nimport logo from './images/logo.png'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Form, Input, Button} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux'\r\nimport {doLogin} from '../../redux/actions'\r\n\r\nclass Login extends Component {\r\n    onFinish = (user) => {\r\n        this.props.doLogin(user);\r\n    }\r\n\r\n    render() {\r\n        //如果用户已经登录跳转到主页\r\n        if (this.props.user) {\r\n            return <Redirect to=\"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img alt=\"logo\" src={logo}/>\r\n                    <h1>React项目：后台管理系统</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <div>\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{remember: true}}\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {required: true, message: 'Please input your Username!'},\r\n                                    {min: 4, message: '最少长度为4位'},\r\n                                    {max: 12, message: '最大长度为12位'},\r\n                                    {pattern: /^[0-9a-zA-Z_]{1,}$/, message: '必须为数字，字母，下划线组成'},\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {required: true, whitespace: false, message: 'Please input your Username!'},\r\n                                    {min: 4, message: '最少长度为4位'},\r\n                                    {max: 12, message: '最大长度为12位'},\r\n                                    {pattern: /^[0-9a-zA-Z_]{1,}$/, message: '必须为数字，字母，下划线组成'},\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    登录\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user,\r\n    }),\r\n    {doLogin}\r\n)(Login);","import request from '../utils/request'\r\n\r\n//登录\r\nexport function login(data) {\r\n    return request({\r\n        url: '/login',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import './App.less';\r\nimport React, {Fragment} from \"react\";\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Admin from \"./pages/Admin\";\r\nimport Login from \"./pages/Login\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Fragment>\r\n            {/*只匹配一个，匹配成功就不往下匹配，效率高*/}\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login}></Route>\r\n                <Route path=\"/\" component={Admin}></Route>\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {getUser} from '../utils/storaUtil'\r\n//引入combineReducers，用于汇总多个reducer\r\nimport {combineReducers} from 'redux'\r\nimport {RECEIVE_USER,LOGOUT_USER} from './action-types'\r\n\r\n/**\r\n * 用来根据老的state和指定的cation生成并返回新的state的函数\r\n */\r\n\r\nconst initUser = getUser() === undefined ? \"\" : getUser();\r\n\r\n//用来管理当前登录的用户\r\nfunction user(preState = initUser, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USER:\r\n            return action.data\r\n        case LOGOUT_USER:\r\n            return action.data\r\n        default:\r\n            return preState\r\n    }\r\n}\r\n\r\n//汇总所有的reducer变为一个总的reducer\r\nexport default combineReducers({\r\n    user\r\n})","/*\r\n\t该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n\r\n//引入createStore，专门用于创建redux中最为核心的store对象\r\nimport {createStore, applyMiddleware} from 'redux'\r\n//引入redux-thunk，用于支持异步action\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n//引入redux-devtools-extension\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}